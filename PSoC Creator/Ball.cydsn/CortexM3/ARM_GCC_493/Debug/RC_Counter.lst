ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"RC_Counter.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RC_Counter_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	RC_Counter_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	RC_Counter_Enable, %function
  24              	RC_Counter_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\RC_Counter.c"
   1:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/RC_Counter.c **** * File Name: RC_Counter.c  
   3:.\Generated_Source\PSoC5/RC_Counter.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/RC_Counter.c **** *
   5:.\Generated_Source\PSoC5/RC_Counter.c **** *  Description:
   6:.\Generated_Source\PSoC5/RC_Counter.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:.\Generated_Source\PSoC5/RC_Counter.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:.\Generated_Source\PSoC5/RC_Counter.c **** *
   9:.\Generated_Source\PSoC5/RC_Counter.c **** *   Note:
  10:.\Generated_Source\PSoC5/RC_Counter.c **** *     None
  11:.\Generated_Source\PSoC5/RC_Counter.c **** *
  12:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/RC_Counter.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/RC_Counter.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:.\Generated_Source\PSoC5/RC_Counter.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:.\Generated_Source\PSoC5/RC_Counter.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/RC_Counter.c **** 
  19:.\Generated_Source\PSoC5/RC_Counter.c **** #include "RC_Counter.h"
  20:.\Generated_Source\PSoC5/RC_Counter.c **** 
  21:.\Generated_Source\PSoC5/RC_Counter.c **** uint8 RC_Counter_initVar = 0u;
  22:.\Generated_Source\PSoC5/RC_Counter.c **** 
  23:.\Generated_Source\PSoC5/RC_Counter.c **** 
  24:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_Init
  26:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
  27:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
  28:.\Generated_Source\PSoC5/RC_Counter.c **** *     Initialize to the schematic state
  29:.\Generated_Source\PSoC5/RC_Counter.c **** * 
  30:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
  31:.\Generated_Source\PSoC5/RC_Counter.c **** *  void  
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 2


  32:.\Generated_Source\PSoC5/RC_Counter.c **** *
  33:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
  34:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
  35:.\Generated_Source\PSoC5/RC_Counter.c **** *
  36:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
  37:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_Init(void) 
  38:.\Generated_Source\PSoC5/RC_Counter.c **** {
  39:.\Generated_Source\PSoC5/RC_Counter.c ****         #if (!RC_Counter_UsingFixedFunction && !RC_Counter_ControlRegRemoved)
  40:.\Generated_Source\PSoC5/RC_Counter.c ****             uint8 ctrl;
  41:.\Generated_Source\PSoC5/RC_Counter.c ****         #endif /* (!RC_Counter_UsingFixedFunction && !RC_Counter_ControlRegRemoved) */
  42:.\Generated_Source\PSoC5/RC_Counter.c ****         
  43:.\Generated_Source\PSoC5/RC_Counter.c ****         #if(!RC_Counter_UsingFixedFunction) 
  44:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Interrupt State Backup for Critical Region*/
  45:.\Generated_Source\PSoC5/RC_Counter.c ****             uint8 RC_Counter_interruptState;
  46:.\Generated_Source\PSoC5/RC_Counter.c ****         #endif /* (!RC_Counter_UsingFixedFunction) */
  47:.\Generated_Source\PSoC5/RC_Counter.c ****         
  48:.\Generated_Source\PSoC5/RC_Counter.c ****         #if (RC_Counter_UsingFixedFunction)
  49:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_CONTROL &= RC_Counter_CTRL_ENABLE;
  51:.\Generated_Source\PSoC5/RC_Counter.c ****             
  52:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Clear the mode bits for continuous run mode */
  53:.\Generated_Source\PSoC5/RC_Counter.c ****             #if (CY_PSOC5A)
  54:.\Generated_Source\PSoC5/RC_Counter.c ****                 RC_Counter_CONTROL2 &= ((uint8)(~RC_Counter_CTRL_MODE_MASK));
  55:.\Generated_Source\PSoC5/RC_Counter.c ****             #endif /* (CY_PSOC5A) */
  56:.\Generated_Source\PSoC5/RC_Counter.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:.\Generated_Source\PSoC5/RC_Counter.c ****                 RC_Counter_CONTROL3 &= ((uint8)(~RC_Counter_CTRL_MODE_MASK));                
  58:.\Generated_Source\PSoC5/RC_Counter.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:.\Generated_Source\PSoC5/RC_Counter.c ****             #if (RC_Counter_RunModeUsed != 0x0u)
  61:.\Generated_Source\PSoC5/RC_Counter.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:.\Generated_Source\PSoC5/RC_Counter.c ****                 RC_Counter_CONTROL |= RC_Counter_ONESHOT;
  63:.\Generated_Source\PSoC5/RC_Counter.c ****             #endif /* (RC_Counter_RunModeUsed != 0x0u) */
  64:.\Generated_Source\PSoC5/RC_Counter.c ****             
  65:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Set the IRQ to use the status register interrupts */
  66:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_CONTROL2 |= RC_Counter_CTRL2_IRQ_SEL;
  67:.\Generated_Source\PSoC5/RC_Counter.c ****             
  68:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_RT1 &= ((uint8)(~RC_Counter_RT1_MASK));
  70:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_RT1 |= RC_Counter_SYNC;     
  71:.\Generated_Source\PSoC5/RC_Counter.c ****                     
  72:.\Generated_Source\PSoC5/RC_Counter.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_RT1 &= ((uint8)(~RC_Counter_SYNCDSI_MASK));
  74:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_RT1 |= RC_Counter_SYNCDSI_EN;
  75:.\Generated_Source\PSoC5/RC_Counter.c **** 
  76:.\Generated_Source\PSoC5/RC_Counter.c ****         #else
  77:.\Generated_Source\PSoC5/RC_Counter.c ****             #if(!RC_Counter_ControlRegRemoved)
  78:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Set the default compare mode defined in the parameter */
  79:.\Generated_Source\PSoC5/RC_Counter.c ****             ctrl = RC_Counter_CONTROL & ((uint8)(~RC_Counter_CTRL_CMPMODE_MASK));
  80:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_CONTROL = ctrl | RC_Counter_DEFAULT_COMPARE_MODE;
  81:.\Generated_Source\PSoC5/RC_Counter.c ****             
  82:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Set the default capture mode defined in the parameter */
  83:.\Generated_Source\PSoC5/RC_Counter.c ****             ctrl = RC_Counter_CONTROL & ((uint8)(~RC_Counter_CTRL_CAPMODE_MASK));
  84:.\Generated_Source\PSoC5/RC_Counter.c ****             
  85:.\Generated_Source\PSoC5/RC_Counter.c ****             #if( 0 != RC_Counter_CAPTURE_MODE_CONF)
  86:.\Generated_Source\PSoC5/RC_Counter.c ****                 RC_Counter_CONTROL = ctrl | RC_Counter_DEFAULT_CAPTURE_MODE;
  87:.\Generated_Source\PSoC5/RC_Counter.c ****             #else
  88:.\Generated_Source\PSoC5/RC_Counter.c ****                 RC_Counter_CONTROL = ctrl;
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 3


  89:.\Generated_Source\PSoC5/RC_Counter.c ****             #endif /* 0 != RC_Counter_CAPTURE_MODE */ 
  90:.\Generated_Source\PSoC5/RC_Counter.c ****             
  91:.\Generated_Source\PSoC5/RC_Counter.c ****             #endif /* (!RC_Counter_ControlRegRemoved) */
  92:.\Generated_Source\PSoC5/RC_Counter.c ****         #endif /* (RC_Counter_UsingFixedFunction) */
  93:.\Generated_Source\PSoC5/RC_Counter.c ****         
  94:.\Generated_Source\PSoC5/RC_Counter.c ****         /* Clear all data in the FIFO's */
  95:.\Generated_Source\PSoC5/RC_Counter.c ****         #if (!RC_Counter_UsingFixedFunction)
  96:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_ClearFIFO();
  97:.\Generated_Source\PSoC5/RC_Counter.c ****         #endif /* (!RC_Counter_UsingFixedFunction) */
  98:.\Generated_Source\PSoC5/RC_Counter.c ****         
  99:.\Generated_Source\PSoC5/RC_Counter.c ****         /* Set Initial values from Configuration */
 100:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_WritePeriod(RC_Counter_INIT_PERIOD_VALUE);
 101:.\Generated_Source\PSoC5/RC_Counter.c ****         #if (!(RC_Counter_UsingFixedFunction && (CY_PSOC5A)))
 102:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_WriteCounter(RC_Counter_INIT_COUNTER_VALUE);
 103:.\Generated_Source\PSoC5/RC_Counter.c ****         #endif /* (!(RC_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 104:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_SetInterruptMode(RC_Counter_INIT_INTERRUPTS_MASK);
 105:.\Generated_Source\PSoC5/RC_Counter.c ****         
 106:.\Generated_Source\PSoC5/RC_Counter.c ****         #if (!RC_Counter_UsingFixedFunction)
 107:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Read the status register to clear the unwanted interrupts */
 108:.\Generated_Source\PSoC5/RC_Counter.c ****             (void)RC_Counter_ReadStatusRegister();
 109:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_WriteCompare(RC_Counter_INIT_COMPARE_VALUE);
 111:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:.\Generated_Source\PSoC5/RC_Counter.c ****             
 113:.\Generated_Source\PSoC5/RC_Counter.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Enter Critical Region*/
 115:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_interruptState = CyEnterCriticalSection();
 116:.\Generated_Source\PSoC5/RC_Counter.c ****             
 117:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_STATUS_AUX_CTRL |= RC_Counter_STATUS_ACTL_INT_EN_MASK;
 118:.\Generated_Source\PSoC5/RC_Counter.c ****             
 119:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Exit Critical Region*/
 120:.\Generated_Source\PSoC5/RC_Counter.c ****             CyExitCriticalSection(RC_Counter_interruptState);
 121:.\Generated_Source\PSoC5/RC_Counter.c ****             
 122:.\Generated_Source\PSoC5/RC_Counter.c ****         #endif /* (!RC_Counter_UsingFixedFunction) */
 123:.\Generated_Source\PSoC5/RC_Counter.c **** }
 124:.\Generated_Source\PSoC5/RC_Counter.c **** 
 125:.\Generated_Source\PSoC5/RC_Counter.c **** 
 126:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 127:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_Enable
 128:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 129:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 130:.\Generated_Source\PSoC5/RC_Counter.c **** *     Enable the Counter
 131:.\Generated_Source\PSoC5/RC_Counter.c **** * 
 132:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 133:.\Generated_Source\PSoC5/RC_Counter.c **** *  void  
 134:.\Generated_Source\PSoC5/RC_Counter.c **** *
 135:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 136:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 137:.\Generated_Source\PSoC5/RC_Counter.c **** *
 138:.\Generated_Source\PSoC5/RC_Counter.c **** * Side Effects: 
 139:.\Generated_Source\PSoC5/RC_Counter.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:.\Generated_Source\PSoC5/RC_Counter.c **** *   on the operation of the counter.
 141:.\Generated_Source\PSoC5/RC_Counter.c **** *
 142:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_Enable(void) 
 144:.\Generated_Source\PSoC5/RC_Counter.c **** {
  27              		.loc 1 144 0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 4


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 145:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:.\Generated_Source\PSoC5/RC_Counter.c ****     #if (RC_Counter_UsingFixedFunction)
 147:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_GLOBAL_ENABLE |= RC_Counter_BLOCK_EN_MASK;
 148:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_GLOBAL_STBY_ENABLE |= RC_Counter_BLOCK_STBY_EN_MASK;
 149:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (RC_Counter_UsingFixedFunction) */  
 150:.\Generated_Source\PSoC5/RC_Counter.c ****         
 151:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Enable the counter from the control register  */
 152:.\Generated_Source\PSoC5/RC_Counter.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:.\Generated_Source\PSoC5/RC_Counter.c ****     /* else make sure reset is clear */
 154:.\Generated_Source\PSoC5/RC_Counter.c ****     #if(!RC_Counter_ControlRegRemoved || RC_Counter_UsingFixedFunction)
 155:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_CONTROL |= RC_Counter_CTRL_ENABLE;                
  32              		.loc 1 155 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 75650040 		.word	1073767797
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	RC_Counter_Enable, .-RC_Counter_Enable
  45              		.section	.text.RC_Counter_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	RC_Counter_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	RC_Counter_Stop, %function
  51              	RC_Counter_Stop:
  52              	.LFB3:
 156:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (!RC_Counter_ControlRegRemoved || RC_Counter_UsingFixedFunction) */
 157:.\Generated_Source\PSoC5/RC_Counter.c ****     
 158:.\Generated_Source\PSoC5/RC_Counter.c **** }
 159:.\Generated_Source\PSoC5/RC_Counter.c **** 
 160:.\Generated_Source\PSoC5/RC_Counter.c **** 
 161:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_Start
 163:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 164:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 165:.\Generated_Source\PSoC5/RC_Counter.c **** *  Enables the counter for operation 
 166:.\Generated_Source\PSoC5/RC_Counter.c **** *
 167:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 168:.\Generated_Source\PSoC5/RC_Counter.c **** *  void  
 169:.\Generated_Source\PSoC5/RC_Counter.c **** *
 170:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 171:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 172:.\Generated_Source\PSoC5/RC_Counter.c **** *
 173:.\Generated_Source\PSoC5/RC_Counter.c **** * Global variables:
 174:.\Generated_Source\PSoC5/RC_Counter.c **** *  RC_Counter_initVar: Is modified when this function is called for the  
 175:.\Generated_Source\PSoC5/RC_Counter.c **** *   first time. Is used to ensure that initialization happens only once.
 176:.\Generated_Source\PSoC5/RC_Counter.c **** *
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 5


 177:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 178:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_Start(void) 
 179:.\Generated_Source\PSoC5/RC_Counter.c **** {
 180:.\Generated_Source\PSoC5/RC_Counter.c ****     if(RC_Counter_initVar == 0u)
 181:.\Generated_Source\PSoC5/RC_Counter.c ****     {
 182:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_Init();
 183:.\Generated_Source\PSoC5/RC_Counter.c ****         
 184:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_initVar = 1u; /* Clear this bit for Initialization */        
 185:.\Generated_Source\PSoC5/RC_Counter.c ****     }
 186:.\Generated_Source\PSoC5/RC_Counter.c ****     
 187:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Enable the Counter */
 188:.\Generated_Source\PSoC5/RC_Counter.c ****     RC_Counter_Enable();        
 189:.\Generated_Source\PSoC5/RC_Counter.c **** }
 190:.\Generated_Source\PSoC5/RC_Counter.c **** 
 191:.\Generated_Source\PSoC5/RC_Counter.c **** 
 192:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 193:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_Stop
 194:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 195:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 196:.\Generated_Source\PSoC5/RC_Counter.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:.\Generated_Source\PSoC5/RC_Counter.c **** *
 198:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 199:.\Generated_Source\PSoC5/RC_Counter.c **** *  void  
 200:.\Generated_Source\PSoC5/RC_Counter.c **** *
 201:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 202:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 203:.\Generated_Source\PSoC5/RC_Counter.c **** *
 204:.\Generated_Source\PSoC5/RC_Counter.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:.\Generated_Source\PSoC5/RC_Counter.c **** *               has no effect on the operation of the counter.
 206:.\Generated_Source\PSoC5/RC_Counter.c **** *
 207:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 208:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_Stop(void) 
 209:.\Generated_Source\PSoC5/RC_Counter.c **** {
  53              		.loc 1 209 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 210:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Disable Counter */
 211:.\Generated_Source\PSoC5/RC_Counter.c ****     #if(!RC_Counter_ControlRegRemoved || RC_Counter_UsingFixedFunction)
 212:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_CONTROL &= ((uint8)(~RC_Counter_CTRL_ENABLE));        
  58              		.loc 1 212 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 75650040 		.word	1073767797
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	RC_Counter_Stop, .-RC_Counter_Stop
  71              		.section	.text.RC_Counter_SetInterruptMode,"ax",%progbits
  72              		.align	2
  73              		.global	RC_Counter_SetInterruptMode
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 6


  74              		.thumb
  75              		.thumb_func
  76              		.type	RC_Counter_SetInterruptMode, %function
  77              	RC_Counter_SetInterruptMode:
  78              	.LFB4:
 213:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (!RC_Counter_ControlRegRemoved || RC_Counter_UsingFixedFunction) */
 214:.\Generated_Source\PSoC5/RC_Counter.c ****     
 215:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Globally disable the Fixed Function Block chosen */
 216:.\Generated_Source\PSoC5/RC_Counter.c ****     #if (RC_Counter_UsingFixedFunction)
 217:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_GLOBAL_ENABLE &= ((uint8)(~RC_Counter_BLOCK_EN_MASK));
 218:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_GLOBAL_STBY_ENABLE &= ((uint8)(~RC_Counter_BLOCK_STBY_EN_MASK));
 219:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (RC_Counter_UsingFixedFunction) */
 220:.\Generated_Source\PSoC5/RC_Counter.c **** }
 221:.\Generated_Source\PSoC5/RC_Counter.c **** 
 222:.\Generated_Source\PSoC5/RC_Counter.c **** 
 223:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_SetInterruptMode
 225:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 226:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 227:.\Generated_Source\PSoC5/RC_Counter.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:.\Generated_Source\PSoC5/RC_Counter.c **** *
 229:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 230:.\Generated_Source\PSoC5/RC_Counter.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:.\Generated_Source\PSoC5/RC_Counter.c **** *                   which will be allowed to generate the counters interrupt.   
 232:.\Generated_Source\PSoC5/RC_Counter.c **** *
 233:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 234:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 235:.\Generated_Source\PSoC5/RC_Counter.c **** *
 236:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 237:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_SetInterruptMode(uint8 interruptsMask) 
 238:.\Generated_Source\PSoC5/RC_Counter.c **** {
  79              		.loc 1 238 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 239:.\Generated_Source\PSoC5/RC_Counter.c ****     RC_Counter_STATUS_MASK = interruptsMask;
  85              		.loc 1 239 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 85650040 		.word	1073767813
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	RC_Counter_SetInterruptMode, .-RC_Counter_SetInterruptMode
  96              		.section	.text.RC_Counter_ReadStatusRegister,"ax",%progbits
  97              		.align	2
  98              		.global	RC_Counter_ReadStatusRegister
  99              		.thumb
 100              		.thumb_func
 101              		.type	RC_Counter_ReadStatusRegister, %function
 102              	RC_Counter_ReadStatusRegister:
 103              	.LFB5:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 7


 240:.\Generated_Source\PSoC5/RC_Counter.c **** }
 241:.\Generated_Source\PSoC5/RC_Counter.c **** 
 242:.\Generated_Source\PSoC5/RC_Counter.c **** 
 243:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 244:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_ReadStatusRegister
 245:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 246:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 247:.\Generated_Source\PSoC5/RC_Counter.c **** *   Reads the status register and returns it's state. This function should use
 248:.\Generated_Source\PSoC5/RC_Counter.c **** *       defined types for the bit-field information as the bits in this
 249:.\Generated_Source\PSoC5/RC_Counter.c **** *       register may be permuteable.
 250:.\Generated_Source\PSoC5/RC_Counter.c **** *
 251:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 252:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 253:.\Generated_Source\PSoC5/RC_Counter.c **** *
 254:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 255:.\Generated_Source\PSoC5/RC_Counter.c **** *  (uint8) The contents of the status register
 256:.\Generated_Source\PSoC5/RC_Counter.c **** *
 257:.\Generated_Source\PSoC5/RC_Counter.c **** * Side Effects:
 258:.\Generated_Source\PSoC5/RC_Counter.c **** *   Status register bits may be clear on read. 
 259:.\Generated_Source\PSoC5/RC_Counter.c **** *
 260:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 261:.\Generated_Source\PSoC5/RC_Counter.c **** uint8   RC_Counter_ReadStatusRegister(void) 
 262:.\Generated_Source\PSoC5/RC_Counter.c **** {
 104              		.loc 1 262 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 263:.\Generated_Source\PSoC5/RC_Counter.c ****     return RC_Counter_STATUS;
 109              		.loc 1 263 0
 110 0000 014B     		ldr	r3, .L11
 111 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 264:.\Generated_Source\PSoC5/RC_Counter.c **** }
 112              		.loc 1 264 0
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 65650040 		.word	1073767781
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	RC_Counter_ReadStatusRegister, .-RC_Counter_ReadStatusRegister
 121              		.section	.text.RC_Counter_ReadControlRegister,"ax",%progbits
 122              		.align	2
 123              		.global	RC_Counter_ReadControlRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	RC_Counter_ReadControlRegister, %function
 127              	RC_Counter_ReadControlRegister:
 128              	.LFB6:
 265:.\Generated_Source\PSoC5/RC_Counter.c **** 
 266:.\Generated_Source\PSoC5/RC_Counter.c **** 
 267:.\Generated_Source\PSoC5/RC_Counter.c **** #if(!RC_Counter_ControlRegRemoved)
 268:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_ReadControlRegister
 270:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 271:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 8


 272:.\Generated_Source\PSoC5/RC_Counter.c **** *   Reads the control register and returns it's state. This function should use
 273:.\Generated_Source\PSoC5/RC_Counter.c **** *       defined types for the bit-field information as the bits in this
 274:.\Generated_Source\PSoC5/RC_Counter.c **** *       register may be permuteable.
 275:.\Generated_Source\PSoC5/RC_Counter.c **** *
 276:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 277:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 278:.\Generated_Source\PSoC5/RC_Counter.c **** *
 279:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 280:.\Generated_Source\PSoC5/RC_Counter.c **** *  (uint8) The contents of the control register
 281:.\Generated_Source\PSoC5/RC_Counter.c **** *
 282:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 283:.\Generated_Source\PSoC5/RC_Counter.c **** uint8   RC_Counter_ReadControlRegister(void) 
 284:.\Generated_Source\PSoC5/RC_Counter.c **** {
 129              		.loc 1 284 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 285:.\Generated_Source\PSoC5/RC_Counter.c ****     return RC_Counter_CONTROL;
 134              		.loc 1 285 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 286:.\Generated_Source\PSoC5/RC_Counter.c **** }
 137              		.loc 1 286 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 75650040 		.word	1073767797
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	RC_Counter_ReadControlRegister, .-RC_Counter_ReadControlRegister
 146              		.section	.text.RC_Counter_WriteControlRegister,"ax",%progbits
 147              		.align	2
 148              		.global	RC_Counter_WriteControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	RC_Counter_WriteControlRegister, %function
 152              	RC_Counter_WriteControlRegister:
 153              	.LFB7:
 287:.\Generated_Source\PSoC5/RC_Counter.c **** 
 288:.\Generated_Source\PSoC5/RC_Counter.c **** 
 289:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_WriteControlRegister
 291:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 292:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 293:.\Generated_Source\PSoC5/RC_Counter.c **** *   Sets the bit-field of the control register.  This function should use
 294:.\Generated_Source\PSoC5/RC_Counter.c **** *       defined types for the bit-field information as the bits in this
 295:.\Generated_Source\PSoC5/RC_Counter.c **** *       register may be permuteable.
 296:.\Generated_Source\PSoC5/RC_Counter.c **** *
 297:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 298:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 299:.\Generated_Source\PSoC5/RC_Counter.c **** *
 300:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 301:.\Generated_Source\PSoC5/RC_Counter.c **** *  (uint8) The contents of the control register
 302:.\Generated_Source\PSoC5/RC_Counter.c **** *
 303:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 9


 304:.\Generated_Source\PSoC5/RC_Counter.c **** void    RC_Counter_WriteControlRegister(uint8 control) 
 305:.\Generated_Source\PSoC5/RC_Counter.c **** {
 154              		.loc 1 305 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              	.LVL1:
 306:.\Generated_Source\PSoC5/RC_Counter.c ****     RC_Counter_CONTROL = control;
 160              		.loc 1 306 0
 161 0000 014B     		ldr	r3, .L17
 162 0002 1870     		strb	r0, [r3]
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 75650040 		.word	1073767797
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	RC_Counter_WriteControlRegister, .-RC_Counter_WriteControlRegister
 171              		.section	.text.RC_Counter_WriteCounter,"ax",%progbits
 172              		.align	2
 173              		.global	RC_Counter_WriteCounter
 174              		.thumb
 175              		.thumb_func
 176              		.type	RC_Counter_WriteCounter, %function
 177              	RC_Counter_WriteCounter:
 178              	.LFB8:
 307:.\Generated_Source\PSoC5/RC_Counter.c **** }
 308:.\Generated_Source\PSoC5/RC_Counter.c **** 
 309:.\Generated_Source\PSoC5/RC_Counter.c **** #endif  /* (!RC_Counter_ControlRegRemoved) */
 310:.\Generated_Source\PSoC5/RC_Counter.c **** 
 311:.\Generated_Source\PSoC5/RC_Counter.c **** 
 312:.\Generated_Source\PSoC5/RC_Counter.c **** #if (!(RC_Counter_UsingFixedFunction && (CY_PSOC5A)))
 313:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 314:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_WriteCounter
 315:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 316:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 317:.\Generated_Source\PSoC5/RC_Counter.c **** *   This funtion is used to set the counter to a specific value
 318:.\Generated_Source\PSoC5/RC_Counter.c **** *
 319:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 320:.\Generated_Source\PSoC5/RC_Counter.c **** *  counter:  New counter value. 
 321:.\Generated_Source\PSoC5/RC_Counter.c **** *
 322:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 323:.\Generated_Source\PSoC5/RC_Counter.c **** *  void 
 324:.\Generated_Source\PSoC5/RC_Counter.c **** *
 325:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_WriteCounter(uint16 counter) \
 327:.\Generated_Source\PSoC5/RC_Counter.c ****                                    
 328:.\Generated_Source\PSoC5/RC_Counter.c **** {
 179              		.loc 1 328 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL2:
 329:.\Generated_Source\PSoC5/RC_Counter.c ****     #if(RC_Counter_UsingFixedFunction)
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 10


 330:.\Generated_Source\PSoC5/RC_Counter.c ****         /* assert if block is already enabled */
 331:.\Generated_Source\PSoC5/RC_Counter.c ****         CYASSERT (0u == (RC_Counter_GLOBAL_ENABLE & RC_Counter_BLOCK_EN_MASK));
 332:.\Generated_Source\PSoC5/RC_Counter.c ****         /* If block is disabled, enable it and then write the counter */
 333:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_GLOBAL_ENABLE |= RC_Counter_BLOCK_EN_MASK;
 334:.\Generated_Source\PSoC5/RC_Counter.c ****         CY_SET_REG16(RC_Counter_COUNTER_LSB_PTR, (uint16)counter);
 335:.\Generated_Source\PSoC5/RC_Counter.c ****         RC_Counter_GLOBAL_ENABLE &= ((uint8)(~RC_Counter_BLOCK_EN_MASK));
 336:.\Generated_Source\PSoC5/RC_Counter.c ****     #else
 337:.\Generated_Source\PSoC5/RC_Counter.c ****         CY_SET_REG16(RC_Counter_COUNTER_LSB_PTR, counter);
 185              		.loc 1 337 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1880     		strh	r0, [r3]	@ movhi
 188 0004 7047     		bx	lr
 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 086A0040 		.word	1073768968
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	RC_Counter_WriteCounter, .-RC_Counter_WriteCounter
 196              		.section	.text.RC_Counter_ReadCounter,"ax",%progbits
 197              		.align	2
 198              		.global	RC_Counter_ReadCounter
 199              		.thumb
 200              		.thumb_func
 201              		.type	RC_Counter_ReadCounter, %function
 202              	RC_Counter_ReadCounter:
 203              	.LFB9:
 338:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (RC_Counter_UsingFixedFunction) */
 339:.\Generated_Source\PSoC5/RC_Counter.c **** }
 340:.\Generated_Source\PSoC5/RC_Counter.c **** #endif /* (!(RC_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 341:.\Generated_Source\PSoC5/RC_Counter.c **** 
 342:.\Generated_Source\PSoC5/RC_Counter.c **** 
 343:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 344:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_ReadCounter
 345:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 346:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 347:.\Generated_Source\PSoC5/RC_Counter.c **** * Returns the current value of the counter.  It doesn't matter
 348:.\Generated_Source\PSoC5/RC_Counter.c **** * if the counter is enabled or running.
 349:.\Generated_Source\PSoC5/RC_Counter.c **** *
 350:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 351:.\Generated_Source\PSoC5/RC_Counter.c **** *  void:  
 352:.\Generated_Source\PSoC5/RC_Counter.c **** *
 353:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 354:.\Generated_Source\PSoC5/RC_Counter.c **** *  (uint16) The present value of the counter.
 355:.\Generated_Source\PSoC5/RC_Counter.c **** *
 356:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC5/RC_Counter.c **** uint16 RC_Counter_ReadCounter(void) 
 358:.\Generated_Source\PSoC5/RC_Counter.c **** {
 204              		.loc 1 358 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 359:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Force capture by reading Accumulator */
 360:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Must first do a software capture to be able to read the counter */
 361:.\Generated_Source\PSoC5/RC_Counter.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 362:.\Generated_Source\PSoC5/RC_Counter.c ****     #if(RC_Counter_UsingFixedFunction)
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 11


 363:.\Generated_Source\PSoC5/RC_Counter.c **** 		(void)CY_GET_REG16(RC_Counter_COUNTER_LSB_PTR);
 364:.\Generated_Source\PSoC5/RC_Counter.c **** 	#else
 365:.\Generated_Source\PSoC5/RC_Counter.c **** 		(void)CY_GET_REG8(RC_Counter_COUNTER_LSB_PTR_8BIT);
 209              		.loc 1 365 0
 210 0000 024B     		ldr	r3, .L23
 211 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366:.\Generated_Source\PSoC5/RC_Counter.c **** 	#endif/* (RC_Counter_UsingFixedFunction) */
 367:.\Generated_Source\PSoC5/RC_Counter.c ****     
 368:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:.\Generated_Source\PSoC5/RC_Counter.c ****     #if(RC_Counter_UsingFixedFunction)
 370:.\Generated_Source\PSoC5/RC_Counter.c ****         return ((uint16)CY_GET_REG16(RC_Counter_STATICCOUNT_LSB_PTR));
 371:.\Generated_Source\PSoC5/RC_Counter.c ****     #else
 372:.\Generated_Source\PSoC5/RC_Counter.c ****         return (CY_GET_REG16(RC_Counter_STATICCOUNT_LSB_PTR));
 212              		.loc 1 372 0
 213 0004 024B     		ldr	r3, .L23+4
 214 0006 1888     		ldrh	r0, [r3]
 373:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (RC_Counter_UsingFixedFunction) */
 374:.\Generated_Source\PSoC5/RC_Counter.c **** }
 215              		.loc 1 374 0
 216 0008 80B2     		uxth	r0, r0
 217 000a 7047     		bx	lr
 218              	.L24:
 219              		.align	2
 220              	.L23:
 221 000c 04650040 		.word	1073767684
 222 0010 886A0040 		.word	1073769096
 223              		.cfi_endproc
 224              	.LFE9:
 225              		.size	RC_Counter_ReadCounter, .-RC_Counter_ReadCounter
 226              		.section	.text.RC_Counter_ReadCapture,"ax",%progbits
 227              		.align	2
 228              		.global	RC_Counter_ReadCapture
 229              		.thumb
 230              		.thumb_func
 231              		.type	RC_Counter_ReadCapture, %function
 232              	RC_Counter_ReadCapture:
 233              	.LFB10:
 375:.\Generated_Source\PSoC5/RC_Counter.c **** 
 376:.\Generated_Source\PSoC5/RC_Counter.c **** 
 377:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 378:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_ReadCapture
 379:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 380:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 381:.\Generated_Source\PSoC5/RC_Counter.c **** *   This function returns the last value captured.
 382:.\Generated_Source\PSoC5/RC_Counter.c **** *
 383:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 384:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 385:.\Generated_Source\PSoC5/RC_Counter.c **** *
 386:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 387:.\Generated_Source\PSoC5/RC_Counter.c **** *  (uint16) Present Capture value.
 388:.\Generated_Source\PSoC5/RC_Counter.c **** *
 389:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 390:.\Generated_Source\PSoC5/RC_Counter.c **** uint16 RC_Counter_ReadCapture(void) 
 391:.\Generated_Source\PSoC5/RC_Counter.c **** {
 234              		.loc 1 391 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 12


 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 392:.\Generated_Source\PSoC5/RC_Counter.c ****     #if(RC_Counter_UsingFixedFunction)
 393:.\Generated_Source\PSoC5/RC_Counter.c ****         return ((uint16)CY_GET_REG16(RC_Counter_STATICCOUNT_LSB_PTR));
 394:.\Generated_Source\PSoC5/RC_Counter.c ****     #else
 395:.\Generated_Source\PSoC5/RC_Counter.c ****         return (CY_GET_REG16(RC_Counter_STATICCOUNT_LSB_PTR));
 239              		.loc 1 395 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1888     		ldrh	r0, [r3]
 396:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (RC_Counter_UsingFixedFunction) */
 397:.\Generated_Source\PSoC5/RC_Counter.c **** }
 242              		.loc 1 397 0
 243 0004 80B2     		uxth	r0, r0
 244 0006 7047     		bx	lr
 245              	.L27:
 246              		.align	2
 247              	.L26:
 248 0008 886A0040 		.word	1073769096
 249              		.cfi_endproc
 250              	.LFE10:
 251              		.size	RC_Counter_ReadCapture, .-RC_Counter_ReadCapture
 252              		.section	.text.RC_Counter_WritePeriod,"ax",%progbits
 253              		.align	2
 254              		.global	RC_Counter_WritePeriod
 255              		.thumb
 256              		.thumb_func
 257              		.type	RC_Counter_WritePeriod, %function
 258              	RC_Counter_WritePeriod:
 259              	.LFB11:
 398:.\Generated_Source\PSoC5/RC_Counter.c **** 
 399:.\Generated_Source\PSoC5/RC_Counter.c **** 
 400:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 401:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_WritePeriod
 402:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 403:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 404:.\Generated_Source\PSoC5/RC_Counter.c **** * Changes the period of the counter.  The new period 
 405:.\Generated_Source\PSoC5/RC_Counter.c **** * will be loaded the next time terminal count is detected.
 406:.\Generated_Source\PSoC5/RC_Counter.c **** *
 407:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 408:.\Generated_Source\PSoC5/RC_Counter.c **** *  period: (uint16) A value of 0 will result in
 409:.\Generated_Source\PSoC5/RC_Counter.c **** *         the counter remaining at zero.  
 410:.\Generated_Source\PSoC5/RC_Counter.c **** *
 411:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 412:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 413:.\Generated_Source\PSoC5/RC_Counter.c **** *
 414:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 415:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_WritePeriod(uint16 period) 
 416:.\Generated_Source\PSoC5/RC_Counter.c **** {
 260              		.loc 1 416 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL3:
 417:.\Generated_Source\PSoC5/RC_Counter.c ****     #if(RC_Counter_UsingFixedFunction)
 418:.\Generated_Source\PSoC5/RC_Counter.c ****         CY_SET_REG16(RC_Counter_PERIOD_LSB_PTR,(uint16)period);
 419:.\Generated_Source\PSoC5/RC_Counter.c ****     #else
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 13


 420:.\Generated_Source\PSoC5/RC_Counter.c ****         CY_SET_REG16(RC_Counter_PERIOD_LSB_PTR, period);
 266              		.loc 1 420 0
 267 0000 014B     		ldr	r3, .L29
 268 0002 1880     		strh	r0, [r3]	@ movhi
 269 0004 7047     		bx	lr
 270              	.L30:
 271 0006 00BF     		.align	2
 272              	.L29:
 273 0008 486A0040 		.word	1073769032
 274              		.cfi_endproc
 275              	.LFE11:
 276              		.size	RC_Counter_WritePeriod, .-RC_Counter_WritePeriod
 277              		.section	.text.RC_Counter_ReadPeriod,"ax",%progbits
 278              		.align	2
 279              		.global	RC_Counter_ReadPeriod
 280              		.thumb
 281              		.thumb_func
 282              		.type	RC_Counter_ReadPeriod, %function
 283              	RC_Counter_ReadPeriod:
 284              	.LFB12:
 421:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (RC_Counter_UsingFixedFunction) */
 422:.\Generated_Source\PSoC5/RC_Counter.c **** }
 423:.\Generated_Source\PSoC5/RC_Counter.c **** 
 424:.\Generated_Source\PSoC5/RC_Counter.c **** 
 425:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 426:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_ReadPeriod
 427:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 428:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 429:.\Generated_Source\PSoC5/RC_Counter.c **** * Reads the current period value without affecting counter operation.
 430:.\Generated_Source\PSoC5/RC_Counter.c **** *
 431:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 432:.\Generated_Source\PSoC5/RC_Counter.c **** *  void:  
 433:.\Generated_Source\PSoC5/RC_Counter.c **** *
 434:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 435:.\Generated_Source\PSoC5/RC_Counter.c **** *  (uint16) Present period value.
 436:.\Generated_Source\PSoC5/RC_Counter.c **** *
 437:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 438:.\Generated_Source\PSoC5/RC_Counter.c **** uint16 RC_Counter_ReadPeriod(void) 
 439:.\Generated_Source\PSoC5/RC_Counter.c **** {
 285              		.loc 1 439 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 440:.\Generated_Source\PSoC5/RC_Counter.c ****     #if(RC_Counter_UsingFixedFunction)
 441:.\Generated_Source\PSoC5/RC_Counter.c ****         return ((uint16)CY_GET_REG16(RC_Counter_PERIOD_LSB_PTR));
 442:.\Generated_Source\PSoC5/RC_Counter.c ****     #else
 443:.\Generated_Source\PSoC5/RC_Counter.c ****         return (CY_GET_REG16(RC_Counter_PERIOD_LSB_PTR));
 290              		.loc 1 443 0
 291 0000 014B     		ldr	r3, .L32
 292 0002 1888     		ldrh	r0, [r3]
 444:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (RC_Counter_UsingFixedFunction) */
 445:.\Generated_Source\PSoC5/RC_Counter.c **** }
 293              		.loc 1 445 0
 294 0004 80B2     		uxth	r0, r0
 295 0006 7047     		bx	lr
 296              	.L33:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 14


 297              		.align	2
 298              	.L32:
 299 0008 486A0040 		.word	1073769032
 300              		.cfi_endproc
 301              	.LFE12:
 302              		.size	RC_Counter_ReadPeriod, .-RC_Counter_ReadPeriod
 303              		.section	.text.RC_Counter_WriteCompare,"ax",%progbits
 304              		.align	2
 305              		.global	RC_Counter_WriteCompare
 306              		.thumb
 307              		.thumb_func
 308              		.type	RC_Counter_WriteCompare, %function
 309              	RC_Counter_WriteCompare:
 310              	.LFB13:
 446:.\Generated_Source\PSoC5/RC_Counter.c **** 
 447:.\Generated_Source\PSoC5/RC_Counter.c **** 
 448:.\Generated_Source\PSoC5/RC_Counter.c **** #if (!RC_Counter_UsingFixedFunction)
 449:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 450:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_WriteCompare
 451:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 452:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 453:.\Generated_Source\PSoC5/RC_Counter.c **** * Changes the compare value.  The compare output will 
 454:.\Generated_Source\PSoC5/RC_Counter.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:.\Generated_Source\PSoC5/RC_Counter.c **** * driven high when the present counter value compares true based on the 
 456:.\Generated_Source\PSoC5/RC_Counter.c **** * configured compare mode setting. 
 457:.\Generated_Source\PSoC5/RC_Counter.c **** *
 458:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 459:.\Generated_Source\PSoC5/RC_Counter.c **** *  Compare:  New compare value. 
 460:.\Generated_Source\PSoC5/RC_Counter.c **** *
 461:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 462:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 463:.\Generated_Source\PSoC5/RC_Counter.c **** *
 464:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_WriteCompare(uint16 compare) \
 466:.\Generated_Source\PSoC5/RC_Counter.c ****                                    
 467:.\Generated_Source\PSoC5/RC_Counter.c **** {
 311              		.loc 1 467 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 316              	.LVL4:
 468:.\Generated_Source\PSoC5/RC_Counter.c ****     #if(RC_Counter_UsingFixedFunction)
 469:.\Generated_Source\PSoC5/RC_Counter.c ****         CY_SET_REG16(RC_Counter_COMPARE_LSB_PTR, (uint16)compare);
 470:.\Generated_Source\PSoC5/RC_Counter.c ****     #else
 471:.\Generated_Source\PSoC5/RC_Counter.c ****         CY_SET_REG16(RC_Counter_COMPARE_LSB_PTR, compare);
 317              		.loc 1 471 0
 318 0000 014B     		ldr	r3, .L35
 319 0002 1880     		strh	r0, [r3]	@ movhi
 320 0004 7047     		bx	lr
 321              	.L36:
 322 0006 00BF     		.align	2
 323              	.L35:
 324 0008 686A0040 		.word	1073769064
 325              		.cfi_endproc
 326              	.LFE13:
 327              		.size	RC_Counter_WriteCompare, .-RC_Counter_WriteCompare
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 15


 328              		.section	.text.RC_Counter_ReadCompare,"ax",%progbits
 329              		.align	2
 330              		.global	RC_Counter_ReadCompare
 331              		.thumb
 332              		.thumb_func
 333              		.type	RC_Counter_ReadCompare, %function
 334              	RC_Counter_ReadCompare:
 335              	.LFB14:
 472:.\Generated_Source\PSoC5/RC_Counter.c ****     #endif /* (RC_Counter_UsingFixedFunction) */
 473:.\Generated_Source\PSoC5/RC_Counter.c **** }
 474:.\Generated_Source\PSoC5/RC_Counter.c **** 
 475:.\Generated_Source\PSoC5/RC_Counter.c **** 
 476:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 477:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_ReadCompare
 478:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 479:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 480:.\Generated_Source\PSoC5/RC_Counter.c **** * Returns the compare value.
 481:.\Generated_Source\PSoC5/RC_Counter.c **** *
 482:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
 483:.\Generated_Source\PSoC5/RC_Counter.c **** *  void:
 484:.\Generated_Source\PSoC5/RC_Counter.c **** *
 485:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 486:.\Generated_Source\PSoC5/RC_Counter.c **** *  (uint16) Present compare value.
 487:.\Generated_Source\PSoC5/RC_Counter.c **** *
 488:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 489:.\Generated_Source\PSoC5/RC_Counter.c **** uint16 RC_Counter_ReadCompare(void) 
 490:.\Generated_Source\PSoC5/RC_Counter.c **** {
 336              		.loc 1 490 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 491:.\Generated_Source\PSoC5/RC_Counter.c ****     return (CY_GET_REG16(RC_Counter_COMPARE_LSB_PTR));
 341              		.loc 1 491 0
 342 0000 014B     		ldr	r3, .L38
 343 0002 1888     		ldrh	r0, [r3]
 492:.\Generated_Source\PSoC5/RC_Counter.c **** }
 344              		.loc 1 492 0
 345 0004 80B2     		uxth	r0, r0
 346 0006 7047     		bx	lr
 347              	.L39:
 348              		.align	2
 349              	.L38:
 350 0008 686A0040 		.word	1073769064
 351              		.cfi_endproc
 352              	.LFE14:
 353              		.size	RC_Counter_ReadCompare, .-RC_Counter_ReadCompare
 354              		.section	.text.RC_Counter_ClearFIFO,"ax",%progbits
 355              		.align	2
 356              		.global	RC_Counter_ClearFIFO
 357              		.thumb
 358              		.thumb_func
 359              		.type	RC_Counter_ClearFIFO, %function
 360              	RC_Counter_ClearFIFO:
 361              	.LFB15:
 493:.\Generated_Source\PSoC5/RC_Counter.c **** 
 494:.\Generated_Source\PSoC5/RC_Counter.c **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 16


 495:.\Generated_Source\PSoC5/RC_Counter.c **** #if (RC_Counter_COMPARE_MODE_SOFTWARE)
 496:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_SetCompareMode
 498:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 500:.\Generated_Source\PSoC5/RC_Counter.c **** *  Sets the software controlled Compare Mode.
 501:.\Generated_Source\PSoC5/RC_Counter.c **** *
 502:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:
 503:.\Generated_Source\PSoC5/RC_Counter.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:.\Generated_Source\PSoC5/RC_Counter.c **** *
 505:.\Generated_Source\PSoC5/RC_Counter.c **** * Return:
 506:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 507:.\Generated_Source\PSoC5/RC_Counter.c **** *
 508:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 509:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_SetCompareMode(uint8 compareMode) 
 510:.\Generated_Source\PSoC5/RC_Counter.c **** {
 511:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Clear the compare mode bits in the control register */
 512:.\Generated_Source\PSoC5/RC_Counter.c ****     RC_Counter_CONTROL &= ((uint8)(~RC_Counter_CTRL_CMPMODE_MASK));
 513:.\Generated_Source\PSoC5/RC_Counter.c ****     
 514:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Write the new setting */
 515:.\Generated_Source\PSoC5/RC_Counter.c ****     RC_Counter_CONTROL |= compareMode;
 516:.\Generated_Source\PSoC5/RC_Counter.c **** }
 517:.\Generated_Source\PSoC5/RC_Counter.c **** #endif  /* (RC_Counter_COMPARE_MODE_SOFTWARE) */
 518:.\Generated_Source\PSoC5/RC_Counter.c **** 
 519:.\Generated_Source\PSoC5/RC_Counter.c **** 
 520:.\Generated_Source\PSoC5/RC_Counter.c **** #if (RC_Counter_CAPTURE_MODE_SOFTWARE)
 521:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 522:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_SetCaptureMode
 523:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 524:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 525:.\Generated_Source\PSoC5/RC_Counter.c **** *  Sets the software controlled Capture Mode.
 526:.\Generated_Source\PSoC5/RC_Counter.c **** *
 527:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:
 528:.\Generated_Source\PSoC5/RC_Counter.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:.\Generated_Source\PSoC5/RC_Counter.c **** *
 530:.\Generated_Source\PSoC5/RC_Counter.c **** * Return:
 531:.\Generated_Source\PSoC5/RC_Counter.c **** *  void
 532:.\Generated_Source\PSoC5/RC_Counter.c **** *
 533:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 534:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_SetCaptureMode(uint8 captureMode) 
 535:.\Generated_Source\PSoC5/RC_Counter.c **** {
 536:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Clear the capture mode bits in the control register */
 537:.\Generated_Source\PSoC5/RC_Counter.c ****     RC_Counter_CONTROL &= ((uint8)(~RC_Counter_CTRL_CAPMODE_MASK));
 538:.\Generated_Source\PSoC5/RC_Counter.c ****     
 539:.\Generated_Source\PSoC5/RC_Counter.c ****     /* Write the new setting */
 540:.\Generated_Source\PSoC5/RC_Counter.c ****     RC_Counter_CONTROL |= ((uint8)((uint8)captureMode << RC_Counter_CTRL_CAPMODE0_SHIFT));
 541:.\Generated_Source\PSoC5/RC_Counter.c **** }
 542:.\Generated_Source\PSoC5/RC_Counter.c **** #endif  /* (RC_Counter_CAPTURE_MODE_SOFTWARE) */
 543:.\Generated_Source\PSoC5/RC_Counter.c **** 
 544:.\Generated_Source\PSoC5/RC_Counter.c **** 
 545:.\Generated_Source\PSoC5/RC_Counter.c **** /*******************************************************************************
 546:.\Generated_Source\PSoC5/RC_Counter.c **** * Function Name: RC_Counter_ClearFIFO
 547:.\Generated_Source\PSoC5/RC_Counter.c **** ********************************************************************************
 548:.\Generated_Source\PSoC5/RC_Counter.c **** * Summary:
 549:.\Generated_Source\PSoC5/RC_Counter.c **** *   This function clears all capture data from the capture FIFO
 550:.\Generated_Source\PSoC5/RC_Counter.c **** *
 551:.\Generated_Source\PSoC5/RC_Counter.c **** * Parameters:  
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 17


 552:.\Generated_Source\PSoC5/RC_Counter.c **** *  void:
 553:.\Generated_Source\PSoC5/RC_Counter.c **** *
 554:.\Generated_Source\PSoC5/RC_Counter.c **** * Return: 
 555:.\Generated_Source\PSoC5/RC_Counter.c **** *  None
 556:.\Generated_Source\PSoC5/RC_Counter.c **** *
 557:.\Generated_Source\PSoC5/RC_Counter.c **** *******************************************************************************/
 558:.\Generated_Source\PSoC5/RC_Counter.c **** void RC_Counter_ClearFIFO(void) 
 559:.\Generated_Source\PSoC5/RC_Counter.c **** {
 362              		.loc 1 559 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 08B5     		push	{r3, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 560:.\Generated_Source\PSoC5/RC_Counter.c **** 
 561:.\Generated_Source\PSoC5/RC_Counter.c ****     while(0u != (RC_Counter_ReadStatusRegister() & RC_Counter_STATUS_FIFONEMP))
 370              		.loc 1 561 0
 371 0002 01E0     		b	.L41
 372              	.L42:
 562:.\Generated_Source\PSoC5/RC_Counter.c ****     {
 563:.\Generated_Source\PSoC5/RC_Counter.c ****         (void)RC_Counter_ReadCapture();
 373              		.loc 1 563 0
 374 0004 FFF7FEFF 		bl	RC_Counter_ReadCapture
 375              	.LVL5:
 376              	.L41:
 561:.\Generated_Source\PSoC5/RC_Counter.c ****     {
 377              		.loc 1 561 0
 378 0008 FFF7FEFF 		bl	RC_Counter_ReadStatusRegister
 379              	.LVL6:
 380 000c 10F0400F 		tst	r0, #64
 381 0010 F8D1     		bne	.L42
 564:.\Generated_Source\PSoC5/RC_Counter.c ****     }
 565:.\Generated_Source\PSoC5/RC_Counter.c **** 
 566:.\Generated_Source\PSoC5/RC_Counter.c **** }
 382              		.loc 1 566 0
 383 0012 08BD     		pop	{r3, pc}
 384              		.cfi_endproc
 385              	.LFE15:
 386              		.size	RC_Counter_ClearFIFO, .-RC_Counter_ClearFIFO
 387              		.section	.text.RC_Counter_Init,"ax",%progbits
 388              		.align	2
 389              		.global	RC_Counter_Init
 390              		.thumb
 391              		.thumb_func
 392              		.type	RC_Counter_Init, %function
 393              	RC_Counter_Init:
 394              	.LFB0:
  38:.\Generated_Source\PSoC5/RC_Counter.c ****         #if (!RC_Counter_UsingFixedFunction && !RC_Counter_ControlRegRemoved)
 395              		.loc 1 38 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399 0000 08B5     		push	{r3, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 3, -8
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 18


 402              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC5/RC_Counter.c ****             RC_Counter_CONTROL = ctrl | RC_Counter_DEFAULT_COMPARE_MODE;
 403              		.loc 1 79 0
 404 0002 144A     		ldr	r2, .L46
 405 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 406 0006 03F0F803 		and	r3, r3, #248
 407              	.LVL7:
  80:.\Generated_Source\PSoC5/RC_Counter.c ****             
 408              		.loc 1 80 0
 409 000a 43F00103 		orr	r3, r3, #1
 410              	.LVL8:
 411 000e 1370     		strb	r3, [r2]
  83:.\Generated_Source\PSoC5/RC_Counter.c ****             
 412              		.loc 1 83 0
 413 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 414 0012 03F0FC03 		and	r3, r3, #252
 415              	.LVL9:
  86:.\Generated_Source\PSoC5/RC_Counter.c ****             #else
 416              		.loc 1 86 0
 417 0016 43F00803 		orr	r3, r3, #8
 418              	.LVL10:
 419 001a 1370     		strb	r3, [r2]
  96:.\Generated_Source\PSoC5/RC_Counter.c ****         #endif /* (!RC_Counter_UsingFixedFunction) */
 420              		.loc 1 96 0
 421 001c FFF7FEFF 		bl	RC_Counter_ClearFIFO
 422              	.LVL11:
 100:.\Generated_Source\PSoC5/RC_Counter.c ****         #if (!(RC_Counter_UsingFixedFunction && (CY_PSOC5A)))
 423              		.loc 1 100 0
 424 0020 4FF6FF70 		movw	r0, #65535
 425 0024 FFF7FEFF 		bl	RC_Counter_WritePeriod
 426              	.LVL12:
 102:.\Generated_Source\PSoC5/RC_Counter.c ****         #endif /* (!(RC_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 427              		.loc 1 102 0
 428 0028 0020     		movs	r0, #0
 429 002a FFF7FEFF 		bl	RC_Counter_WriteCounter
 430              	.LVL13:
 104:.\Generated_Source\PSoC5/RC_Counter.c ****         
 431              		.loc 1 104 0
 432 002e 0020     		movs	r0, #0
 433 0030 FFF7FEFF 		bl	RC_Counter_SetInterruptMode
 434              	.LVL14:
 108:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 435              		.loc 1 108 0
 436 0034 FFF7FEFF 		bl	RC_Counter_ReadStatusRegister
 437              	.LVL15:
 110:.\Generated_Source\PSoC5/RC_Counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 438              		.loc 1 110 0
 439 0038 0020     		movs	r0, #0
 440 003a FFF7FEFF 		bl	RC_Counter_WriteCompare
 441              	.LVL16:
 115:.\Generated_Source\PSoC5/RC_Counter.c ****             
 442              		.loc 1 115 0
 443 003e FFF7FEFF 		bl	CyEnterCriticalSection
 444              	.LVL17:
 117:.\Generated_Source\PSoC5/RC_Counter.c ****             
 445              		.loc 1 117 0
 446 0042 054A     		ldr	r2, .L46+4
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 19


 447 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 448 0046 43F01003 		orr	r3, r3, #16
 449 004a 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC5/RC_Counter.c ****             
 450              		.loc 1 120 0
 451 004c FFF7FEFF 		bl	CyExitCriticalSection
 452              	.LVL18:
 453 0050 08BD     		pop	{r3, pc}
 454              	.L47:
 455 0052 00BF     		.align	2
 456              	.L46:
 457 0054 75650040 		.word	1073767797
 458 0058 95650040 		.word	1073767829
 459              		.cfi_endproc
 460              	.LFE0:
 461              		.size	RC_Counter_Init, .-RC_Counter_Init
 462              		.section	.text.RC_Counter_Start,"ax",%progbits
 463              		.align	2
 464              		.global	RC_Counter_Start
 465              		.thumb
 466              		.thumb_func
 467              		.type	RC_Counter_Start, %function
 468              	RC_Counter_Start:
 469              	.LFB2:
 179:.\Generated_Source\PSoC5/RC_Counter.c ****     if(RC_Counter_initVar == 0u)
 470              		.loc 1 179 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474 0000 08B5     		push	{r3, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 3, -8
 477              		.cfi_offset 14, -4
 180:.\Generated_Source\PSoC5/RC_Counter.c ****     {
 478              		.loc 1 180 0
 479 0002 054B     		ldr	r3, .L51
 480 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 481 0006 23B9     		cbnz	r3, .L49
 182:.\Generated_Source\PSoC5/RC_Counter.c ****         
 482              		.loc 1 182 0
 483 0008 FFF7FEFF 		bl	RC_Counter_Init
 484              	.LVL19:
 184:.\Generated_Source\PSoC5/RC_Counter.c ****     }
 485              		.loc 1 184 0
 486 000c 0122     		movs	r2, #1
 487 000e 024B     		ldr	r3, .L51
 488 0010 1A70     		strb	r2, [r3]
 489              	.L49:
 188:.\Generated_Source\PSoC5/RC_Counter.c **** }
 490              		.loc 1 188 0
 491 0012 FFF7FEFF 		bl	RC_Counter_Enable
 492              	.LVL20:
 493 0016 08BD     		pop	{r3, pc}
 494              	.L52:
 495              		.align	2
 496              	.L51:
 497 0018 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 20


 498              		.cfi_endproc
 499              	.LFE2:
 500              		.size	RC_Counter_Start, .-RC_Counter_Start
 501              		.global	RC_Counter_initVar
 502              		.bss
 503              		.set	.LANCHOR0,. + 0
 504              		.type	RC_Counter_initVar, %object
 505              		.size	RC_Counter_initVar, 1
 506              	RC_Counter_initVar:
 507 0000 00       		.space	1
 508              		.text
 509              	.Letext0:
 510              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 511              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 512              		.section	.debug_info,"",%progbits
 513              	.Ldebug_info0:
 514 0000 3A030000 		.4byte	0x33a
 515 0004 0400     		.2byte	0x4
 516 0006 00000000 		.4byte	.Ldebug_abbrev0
 517 000a 04       		.byte	0x4
 518 000b 01       		.uleb128 0x1
 519 000c 4D020000 		.4byte	.LASF40
 520 0010 01       		.byte	0x1
 521 0011 5F000000 		.4byte	.LASF41
 522 0015 2E010000 		.4byte	.LASF42
 523 0019 00000000 		.4byte	.Ldebug_ranges0+0
 524 001d 00000000 		.4byte	0
 525 0021 00000000 		.4byte	.Ldebug_line0
 526 0025 02       		.uleb128 0x2
 527 0026 01       		.byte	0x1
 528 0027 06       		.byte	0x6
 529 0028 D7030000 		.4byte	.LASF0
 530 002c 02       		.uleb128 0x2
 531 002d 01       		.byte	0x1
 532 002e 08       		.byte	0x8
 533 002f F0010000 		.4byte	.LASF1
 534 0033 02       		.uleb128 0x2
 535 0034 02       		.byte	0x2
 536 0035 05       		.byte	0x5
 537 0036 77030000 		.4byte	.LASF2
 538 003a 02       		.uleb128 0x2
 539 003b 02       		.byte	0x2
 540 003c 07       		.byte	0x7
 541 003d EB030000 		.4byte	.LASF3
 542 0041 02       		.uleb128 0x2
 543 0042 04       		.byte	0x4
 544 0043 05       		.byte	0x5
 545 0044 98030000 		.4byte	.LASF4
 546 0048 02       		.uleb128 0x2
 547 0049 04       		.byte	0x4
 548 004a 07       		.byte	0x7
 549 004b C1010000 		.4byte	.LASF5
 550 004f 02       		.uleb128 0x2
 551 0050 08       		.byte	0x8
 552 0051 05       		.byte	0x5
 553 0052 64030000 		.4byte	.LASF6
 554 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 21


 555 0057 08       		.byte	0x8
 556 0058 07       		.byte	0x7
 557 0059 F2000000 		.4byte	.LASF7
 558 005d 03       		.uleb128 0x3
 559 005e 04       		.byte	0x4
 560 005f 05       		.byte	0x5
 561 0060 696E7400 		.ascii	"int\000"
 562 0064 02       		.uleb128 0x2
 563 0065 04       		.byte	0x4
 564 0066 07       		.byte	0x7
 565 0067 F2020000 		.4byte	.LASF8
 566 006b 04       		.uleb128 0x4
 567 006c D3010000 		.4byte	.LASF9
 568 0070 02       		.byte	0x2
 569 0071 9201     		.2byte	0x192
 570 0073 2C000000 		.4byte	0x2c
 571 0077 04       		.uleb128 0x4
 572 0078 46020000 		.4byte	.LASF10
 573 007c 02       		.byte	0x2
 574 007d 9301     		.2byte	0x193
 575 007f 3A000000 		.4byte	0x3a
 576 0083 02       		.uleb128 0x2
 577 0084 04       		.byte	0x4
 578 0085 04       		.byte	0x4
 579 0086 1E000000 		.4byte	.LASF11
 580 008a 02       		.uleb128 0x2
 581 008b 08       		.byte	0x8
 582 008c 04       		.byte	0x4
 583 008d 23020000 		.4byte	.LASF12
 584 0091 02       		.uleb128 0x2
 585 0092 01       		.byte	0x1
 586 0093 08       		.byte	0x8
 587 0094 72030000 		.4byte	.LASF13
 588 0098 04       		.uleb128 0x4
 589 0099 29010000 		.4byte	.LASF14
 590 009d 02       		.byte	0x2
 591 009e 3C02     		.2byte	0x23c
 592 00a0 A4000000 		.4byte	0xa4
 593 00a4 05       		.uleb128 0x5
 594 00a5 6B000000 		.4byte	0x6b
 595 00a9 04       		.uleb128 0x4
 596 00aa 00000000 		.4byte	.LASF15
 597 00ae 02       		.byte	0x2
 598 00af 3D02     		.2byte	0x23d
 599 00b1 B5000000 		.4byte	0xb5
 600 00b5 05       		.uleb128 0x5
 601 00b6 77000000 		.4byte	0x77
 602 00ba 02       		.uleb128 0x2
 603 00bb 04       		.byte	0x4
 604 00bc 07       		.byte	0x7
 605 00bd 5B030000 		.4byte	.LASF16
 606 00c1 06       		.uleb128 0x6
 607 00c2 FF020000 		.4byte	.LASF17
 608 00c6 01       		.byte	0x1
 609 00c7 8F       		.byte	0x8f
 610 00c8 00000000 		.4byte	.LFB1
 611 00cc 10000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 22


 612 00d0 01       		.uleb128 0x1
 613 00d1 9C       		.byte	0x9c
 614 00d2 06       		.uleb128 0x6
 615 00d3 13020000 		.4byte	.LASF18
 616 00d7 01       		.byte	0x1
 617 00d8 D0       		.byte	0xd0
 618 00d9 00000000 		.4byte	.LFB3
 619 00dd 10000000 		.4byte	.LFE3-.LFB3
 620 00e1 01       		.uleb128 0x1
 621 00e2 9C       		.byte	0x9c
 622 00e3 07       		.uleb128 0x7
 623 00e4 2A020000 		.4byte	.LASF21
 624 00e8 01       		.byte	0x1
 625 00e9 ED       		.byte	0xed
 626 00ea 00000000 		.4byte	.LFB4
 627 00ee 0C000000 		.4byte	.LFE4-.LFB4
 628 00f2 01       		.uleb128 0x1
 629 00f3 9C       		.byte	0x9c
 630 00f4 06010000 		.4byte	0x106
 631 00f8 08       		.uleb128 0x8
 632 00f9 E1010000 		.4byte	.LASF23
 633 00fd 01       		.byte	0x1
 634 00fe ED       		.byte	0xed
 635 00ff 6B000000 		.4byte	0x6b
 636 0103 01       		.uleb128 0x1
 637 0104 50       		.byte	0x50
 638 0105 00       		.byte	0
 639 0106 09       		.uleb128 0x9
 640 0107 9C000000 		.4byte	.LASF19
 641 010b 01       		.byte	0x1
 642 010c 0501     		.2byte	0x105
 643 010e 6B000000 		.4byte	0x6b
 644 0112 00000000 		.4byte	.LFB5
 645 0116 0C000000 		.4byte	.LFE5-.LFB5
 646 011a 01       		.uleb128 0x1
 647 011b 9C       		.byte	0x9c
 648 011c 09       		.uleb128 0x9
 649 011d B8030000 		.4byte	.LASF20
 650 0121 01       		.byte	0x1
 651 0122 1B01     		.2byte	0x11b
 652 0124 6B000000 		.4byte	0x6b
 653 0128 00000000 		.4byte	.LFB6
 654 012c 0C000000 		.4byte	.LFE6-.LFB6
 655 0130 01       		.uleb128 0x1
 656 0131 9C       		.byte	0x9c
 657 0132 0A       		.uleb128 0xa
 658 0133 09010000 		.4byte	.LASF22
 659 0137 01       		.byte	0x1
 660 0138 3001     		.2byte	0x130
 661 013a 00000000 		.4byte	.LFB7
 662 013e 0C000000 		.4byte	.LFE7-.LFB7
 663 0142 01       		.uleb128 0x1
 664 0143 9C       		.byte	0x9c
 665 0144 57010000 		.4byte	0x157
 666 0148 0B       		.uleb128 0xb
 667 0149 D9010000 		.4byte	.LASF24
 668 014d 01       		.byte	0x1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 23


 669 014e 3001     		.2byte	0x130
 670 0150 6B000000 		.4byte	0x6b
 671 0154 01       		.uleb128 0x1
 672 0155 50       		.byte	0x50
 673 0156 00       		.byte	0
 674 0157 0A       		.uleb128 0xa
 675 0158 06000000 		.4byte	.LASF25
 676 015c 01       		.byte	0x1
 677 015d 4601     		.2byte	0x146
 678 015f 00000000 		.4byte	.LFB8
 679 0163 0C000000 		.4byte	.LFE8-.LFB8
 680 0167 01       		.uleb128 0x1
 681 0168 9C       		.byte	0x9c
 682 0169 7C010000 		.4byte	0x17c
 683 016d 0B       		.uleb128 0xb
 684 016e EA000000 		.4byte	.LASF26
 685 0172 01       		.byte	0x1
 686 0173 4601     		.2byte	0x146
 687 0175 77000000 		.4byte	0x77
 688 0179 01       		.uleb128 0x1
 689 017a 50       		.byte	0x50
 690 017b 00       		.byte	0
 691 017c 09       		.uleb128 0x9
 692 017d 85000000 		.4byte	.LASF27
 693 0181 01       		.byte	0x1
 694 0182 6501     		.2byte	0x165
 695 0184 77000000 		.4byte	0x77
 696 0188 00000000 		.4byte	.LFB9
 697 018c 14000000 		.4byte	.LFE9-.LFB9
 698 0190 01       		.uleb128 0x1
 699 0191 9C       		.byte	0x9c
 700 0192 09       		.uleb128 0x9
 701 0193 A1030000 		.4byte	.LASF28
 702 0197 01       		.byte	0x1
 703 0198 8601     		.2byte	0x186
 704 019a 77000000 		.4byte	0x77
 705 019e 00000000 		.4byte	.LFB10
 706 01a2 0C000000 		.4byte	.LFE10-.LFB10
 707 01a6 01       		.uleb128 0x1
 708 01a7 9C       		.byte	0x9c
 709 01a8 0A       		.uleb128 0xa
 710 01a9 27030000 		.4byte	.LASF29
 711 01ad 01       		.byte	0x1
 712 01ae 9F01     		.2byte	0x19f
 713 01b0 00000000 		.4byte	.LFB11
 714 01b4 0C000000 		.4byte	.LFE11-.LFB11
 715 01b8 01       		.uleb128 0x1
 716 01b9 9C       		.byte	0x9c
 717 01ba CD010000 		.4byte	0x1cd
 718 01be 0B       		.uleb128 0xb
 719 01bf 34000000 		.4byte	.LASF30
 720 01c3 01       		.byte	0x1
 721 01c4 9F01     		.2byte	0x19f
 722 01c6 77000000 		.4byte	0x77
 723 01ca 01       		.uleb128 0x1
 724 01cb 50       		.byte	0x50
 725 01cc 00       		.byte	0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 24


 726 01cd 09       		.uleb128 0x9
 727 01ce D4000000 		.4byte	.LASF31
 728 01d2 01       		.byte	0x1
 729 01d3 B601     		.2byte	0x1b6
 730 01d5 77000000 		.4byte	0x77
 731 01d9 00000000 		.4byte	.LFB12
 732 01dd 0C000000 		.4byte	.LFE12-.LFB12
 733 01e1 01       		.uleb128 0x1
 734 01e2 9C       		.byte	0x9c
 735 01e3 0A       		.uleb128 0xa
 736 01e4 3E030000 		.4byte	.LASF32
 737 01e8 01       		.byte	0x1
 738 01e9 D101     		.2byte	0x1d1
 739 01eb 00000000 		.4byte	.LFB13
 740 01ef 0C000000 		.4byte	.LFE13-.LFB13
 741 01f3 01       		.uleb128 0x1
 742 01f4 9C       		.byte	0x9c
 743 01f5 08020000 		.4byte	0x208
 744 01f9 0B       		.uleb128 0xb
 745 01fa E3030000 		.4byte	.LASF33
 746 01fe 01       		.byte	0x1
 747 01ff D101     		.2byte	0x1d1
 748 0201 77000000 		.4byte	0x77
 749 0205 01       		.uleb128 0x1
 750 0206 50       		.byte	0x50
 751 0207 00       		.byte	0
 752 0208 09       		.uleb128 0x9
 753 0209 81030000 		.4byte	.LASF34
 754 020d 01       		.byte	0x1
 755 020e E901     		.2byte	0x1e9
 756 0210 77000000 		.4byte	0x77
 757 0214 00000000 		.4byte	.LFB14
 758 0218 0C000000 		.4byte	.LFE14-.LFB14
 759 021c 01       		.uleb128 0x1
 760 021d 9C       		.byte	0x9c
 761 021e 0A       		.uleb128 0xa
 762 021f FE010000 		.4byte	.LASF35
 763 0223 01       		.byte	0x1
 764 0224 2E02     		.2byte	0x22e
 765 0226 00000000 		.4byte	.LFB15
 766 022a 14000000 		.4byte	.LFE15-.LFB15
 767 022e 01       		.uleb128 0x1
 768 022f 9C       		.byte	0x9c
 769 0230 47020000 		.4byte	0x247
 770 0234 0C       		.uleb128 0xc
 771 0235 08000000 		.4byte	.LVL5
 772 0239 92010000 		.4byte	0x192
 773 023d 0C       		.uleb128 0xc
 774 023e 0C000000 		.4byte	.LVL6
 775 0242 06010000 		.4byte	0x106
 776 0246 00       		.byte	0
 777 0247 07       		.uleb128 0x7
 778 0248 24000000 		.4byte	.LASF36
 779 024c 01       		.byte	0x1
 780 024d 25       		.byte	0x25
 781 024e 00000000 		.4byte	.LFB0
 782 0252 5C000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 25


 783 0256 01       		.uleb128 0x1
 784 0257 9C       		.byte	0x9c
 785 0258 EC020000 		.4byte	0x2ec
 786 025c 0D       		.uleb128 0xd
 787 025d 56030000 		.4byte	.LASF37
 788 0261 01       		.byte	0x1
 789 0262 28       		.byte	0x28
 790 0263 6B000000 		.4byte	0x6b
 791 0267 00000000 		.4byte	.LLST0
 792 026b 0D       		.uleb128 0xd
 793 026c BA000000 		.4byte	.LASF38
 794 0270 01       		.byte	0x1
 795 0271 2D       		.byte	0x2d
 796 0272 6B000000 		.4byte	0x6b
 797 0276 1E000000 		.4byte	.LLST1
 798 027a 0C       		.uleb128 0xc
 799 027b 20000000 		.4byte	.LVL11
 800 027f 1E020000 		.4byte	0x21e
 801 0283 0E       		.uleb128 0xe
 802 0284 28000000 		.4byte	.LVL12
 803 0288 A8010000 		.4byte	0x1a8
 804 028c 97020000 		.4byte	0x297
 805 0290 0F       		.uleb128 0xf
 806 0291 01       		.uleb128 0x1
 807 0292 50       		.byte	0x50
 808 0293 02       		.uleb128 0x2
 809 0294 09       		.byte	0x9
 810 0295 FF       		.byte	0xff
 811 0296 00       		.byte	0
 812 0297 0E       		.uleb128 0xe
 813 0298 2E000000 		.4byte	.LVL13
 814 029c 57010000 		.4byte	0x157
 815 02a0 AA020000 		.4byte	0x2aa
 816 02a4 0F       		.uleb128 0xf
 817 02a5 01       		.uleb128 0x1
 818 02a6 50       		.byte	0x50
 819 02a7 01       		.uleb128 0x1
 820 02a8 30       		.byte	0x30
 821 02a9 00       		.byte	0
 822 02aa 0E       		.uleb128 0xe
 823 02ab 34000000 		.4byte	.LVL14
 824 02af E3000000 		.4byte	0xe3
 825 02b3 BD020000 		.4byte	0x2bd
 826 02b7 0F       		.uleb128 0xf
 827 02b8 01       		.uleb128 0x1
 828 02b9 50       		.byte	0x50
 829 02ba 01       		.uleb128 0x1
 830 02bb 30       		.byte	0x30
 831 02bc 00       		.byte	0
 832 02bd 0C       		.uleb128 0xc
 833 02be 38000000 		.4byte	.LVL15
 834 02c2 06010000 		.4byte	0x106
 835 02c6 0E       		.uleb128 0xe
 836 02c7 3E000000 		.4byte	.LVL16
 837 02cb E3010000 		.4byte	0x1e3
 838 02cf D9020000 		.4byte	0x2d9
 839 02d3 0F       		.uleb128 0xf
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 26


 840 02d4 01       		.uleb128 0x1
 841 02d5 50       		.byte	0x50
 842 02d6 01       		.uleb128 0x1
 843 02d7 30       		.byte	0x30
 844 02d8 00       		.byte	0
 845 02d9 0C       		.uleb128 0xc
 846 02da 42000000 		.4byte	.LVL17
 847 02de 25030000 		.4byte	0x325
 848 02e2 0C       		.uleb128 0xc
 849 02e3 50000000 		.4byte	.LVL18
 850 02e7 30030000 		.4byte	0x330
 851 02eb 00       		.byte	0
 852 02ec 07       		.uleb128 0x7
 853 02ed 4E000000 		.4byte	.LASF39
 854 02f1 01       		.byte	0x1
 855 02f2 B2       		.byte	0xb2
 856 02f3 00000000 		.4byte	.LFB2
 857 02f7 1C000000 		.4byte	.LFE2-.LFB2
 858 02fb 01       		.uleb128 0x1
 859 02fc 9C       		.byte	0x9c
 860 02fd 14030000 		.4byte	0x314
 861 0301 0C       		.uleb128 0xc
 862 0302 0C000000 		.4byte	.LVL19
 863 0306 47020000 		.4byte	0x247
 864 030a 0C       		.uleb128 0xc
 865 030b 16000000 		.4byte	.LVL20
 866 030f C1000000 		.4byte	0xc1
 867 0313 00       		.byte	0
 868 0314 10       		.uleb128 0x10
 869 0315 3B000000 		.4byte	.LASF43
 870 0319 01       		.byte	0x1
 871 031a 15       		.byte	0x15
 872 031b 6B000000 		.4byte	0x6b
 873 031f 05       		.uleb128 0x5
 874 0320 03       		.byte	0x3
 875 0321 00000000 		.4byte	RC_Counter_initVar
 876 0325 11       		.uleb128 0x11
 877 0326 DB020000 		.4byte	.LASF44
 878 032a 03       		.byte	0x3
 879 032b 7D       		.byte	0x7d
 880 032c 6B000000 		.4byte	0x6b
 881 0330 12       		.uleb128 0x12
 882 0331 11030000 		.4byte	.LASF45
 883 0335 03       		.byte	0x3
 884 0336 7E       		.byte	0x7e
 885 0337 13       		.uleb128 0x13
 886 0338 6B000000 		.4byte	0x6b
 887 033c 00       		.byte	0
 888 033d 00       		.byte	0
 889              		.section	.debug_abbrev,"",%progbits
 890              	.Ldebug_abbrev0:
 891 0000 01       		.uleb128 0x1
 892 0001 11       		.uleb128 0x11
 893 0002 01       		.byte	0x1
 894 0003 25       		.uleb128 0x25
 895 0004 0E       		.uleb128 0xe
 896 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 27


 897 0006 0B       		.uleb128 0xb
 898 0007 03       		.uleb128 0x3
 899 0008 0E       		.uleb128 0xe
 900 0009 1B       		.uleb128 0x1b
 901 000a 0E       		.uleb128 0xe
 902 000b 55       		.uleb128 0x55
 903 000c 17       		.uleb128 0x17
 904 000d 11       		.uleb128 0x11
 905 000e 01       		.uleb128 0x1
 906 000f 10       		.uleb128 0x10
 907 0010 17       		.uleb128 0x17
 908 0011 00       		.byte	0
 909 0012 00       		.byte	0
 910 0013 02       		.uleb128 0x2
 911 0014 24       		.uleb128 0x24
 912 0015 00       		.byte	0
 913 0016 0B       		.uleb128 0xb
 914 0017 0B       		.uleb128 0xb
 915 0018 3E       		.uleb128 0x3e
 916 0019 0B       		.uleb128 0xb
 917 001a 03       		.uleb128 0x3
 918 001b 0E       		.uleb128 0xe
 919 001c 00       		.byte	0
 920 001d 00       		.byte	0
 921 001e 03       		.uleb128 0x3
 922 001f 24       		.uleb128 0x24
 923 0020 00       		.byte	0
 924 0021 0B       		.uleb128 0xb
 925 0022 0B       		.uleb128 0xb
 926 0023 3E       		.uleb128 0x3e
 927 0024 0B       		.uleb128 0xb
 928 0025 03       		.uleb128 0x3
 929 0026 08       		.uleb128 0x8
 930 0027 00       		.byte	0
 931 0028 00       		.byte	0
 932 0029 04       		.uleb128 0x4
 933 002a 16       		.uleb128 0x16
 934 002b 00       		.byte	0
 935 002c 03       		.uleb128 0x3
 936 002d 0E       		.uleb128 0xe
 937 002e 3A       		.uleb128 0x3a
 938 002f 0B       		.uleb128 0xb
 939 0030 3B       		.uleb128 0x3b
 940 0031 05       		.uleb128 0x5
 941 0032 49       		.uleb128 0x49
 942 0033 13       		.uleb128 0x13
 943 0034 00       		.byte	0
 944 0035 00       		.byte	0
 945 0036 05       		.uleb128 0x5
 946 0037 35       		.uleb128 0x35
 947 0038 00       		.byte	0
 948 0039 49       		.uleb128 0x49
 949 003a 13       		.uleb128 0x13
 950 003b 00       		.byte	0
 951 003c 00       		.byte	0
 952 003d 06       		.uleb128 0x6
 953 003e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 28


 954 003f 00       		.byte	0
 955 0040 3F       		.uleb128 0x3f
 956 0041 19       		.uleb128 0x19
 957 0042 03       		.uleb128 0x3
 958 0043 0E       		.uleb128 0xe
 959 0044 3A       		.uleb128 0x3a
 960 0045 0B       		.uleb128 0xb
 961 0046 3B       		.uleb128 0x3b
 962 0047 0B       		.uleb128 0xb
 963 0048 27       		.uleb128 0x27
 964 0049 19       		.uleb128 0x19
 965 004a 11       		.uleb128 0x11
 966 004b 01       		.uleb128 0x1
 967 004c 12       		.uleb128 0x12
 968 004d 06       		.uleb128 0x6
 969 004e 40       		.uleb128 0x40
 970 004f 18       		.uleb128 0x18
 971 0050 9742     		.uleb128 0x2117
 972 0052 19       		.uleb128 0x19
 973 0053 00       		.byte	0
 974 0054 00       		.byte	0
 975 0055 07       		.uleb128 0x7
 976 0056 2E       		.uleb128 0x2e
 977 0057 01       		.byte	0x1
 978 0058 3F       		.uleb128 0x3f
 979 0059 19       		.uleb128 0x19
 980 005a 03       		.uleb128 0x3
 981 005b 0E       		.uleb128 0xe
 982 005c 3A       		.uleb128 0x3a
 983 005d 0B       		.uleb128 0xb
 984 005e 3B       		.uleb128 0x3b
 985 005f 0B       		.uleb128 0xb
 986 0060 27       		.uleb128 0x27
 987 0061 19       		.uleb128 0x19
 988 0062 11       		.uleb128 0x11
 989 0063 01       		.uleb128 0x1
 990 0064 12       		.uleb128 0x12
 991 0065 06       		.uleb128 0x6
 992 0066 40       		.uleb128 0x40
 993 0067 18       		.uleb128 0x18
 994 0068 9742     		.uleb128 0x2117
 995 006a 19       		.uleb128 0x19
 996 006b 01       		.uleb128 0x1
 997 006c 13       		.uleb128 0x13
 998 006d 00       		.byte	0
 999 006e 00       		.byte	0
 1000 006f 08       		.uleb128 0x8
 1001 0070 05       		.uleb128 0x5
 1002 0071 00       		.byte	0
 1003 0072 03       		.uleb128 0x3
 1004 0073 0E       		.uleb128 0xe
 1005 0074 3A       		.uleb128 0x3a
 1006 0075 0B       		.uleb128 0xb
 1007 0076 3B       		.uleb128 0x3b
 1008 0077 0B       		.uleb128 0xb
 1009 0078 49       		.uleb128 0x49
 1010 0079 13       		.uleb128 0x13
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 29


 1011 007a 02       		.uleb128 0x2
 1012 007b 18       		.uleb128 0x18
 1013 007c 00       		.byte	0
 1014 007d 00       		.byte	0
 1015 007e 09       		.uleb128 0x9
 1016 007f 2E       		.uleb128 0x2e
 1017 0080 00       		.byte	0
 1018 0081 3F       		.uleb128 0x3f
 1019 0082 19       		.uleb128 0x19
 1020 0083 03       		.uleb128 0x3
 1021 0084 0E       		.uleb128 0xe
 1022 0085 3A       		.uleb128 0x3a
 1023 0086 0B       		.uleb128 0xb
 1024 0087 3B       		.uleb128 0x3b
 1025 0088 05       		.uleb128 0x5
 1026 0089 27       		.uleb128 0x27
 1027 008a 19       		.uleb128 0x19
 1028 008b 49       		.uleb128 0x49
 1029 008c 13       		.uleb128 0x13
 1030 008d 11       		.uleb128 0x11
 1031 008e 01       		.uleb128 0x1
 1032 008f 12       		.uleb128 0x12
 1033 0090 06       		.uleb128 0x6
 1034 0091 40       		.uleb128 0x40
 1035 0092 18       		.uleb128 0x18
 1036 0093 9742     		.uleb128 0x2117
 1037 0095 19       		.uleb128 0x19
 1038 0096 00       		.byte	0
 1039 0097 00       		.byte	0
 1040 0098 0A       		.uleb128 0xa
 1041 0099 2E       		.uleb128 0x2e
 1042 009a 01       		.byte	0x1
 1043 009b 3F       		.uleb128 0x3f
 1044 009c 19       		.uleb128 0x19
 1045 009d 03       		.uleb128 0x3
 1046 009e 0E       		.uleb128 0xe
 1047 009f 3A       		.uleb128 0x3a
 1048 00a0 0B       		.uleb128 0xb
 1049 00a1 3B       		.uleb128 0x3b
 1050 00a2 05       		.uleb128 0x5
 1051 00a3 27       		.uleb128 0x27
 1052 00a4 19       		.uleb128 0x19
 1053 00a5 11       		.uleb128 0x11
 1054 00a6 01       		.uleb128 0x1
 1055 00a7 12       		.uleb128 0x12
 1056 00a8 06       		.uleb128 0x6
 1057 00a9 40       		.uleb128 0x40
 1058 00aa 18       		.uleb128 0x18
 1059 00ab 9742     		.uleb128 0x2117
 1060 00ad 19       		.uleb128 0x19
 1061 00ae 01       		.uleb128 0x1
 1062 00af 13       		.uleb128 0x13
 1063 00b0 00       		.byte	0
 1064 00b1 00       		.byte	0
 1065 00b2 0B       		.uleb128 0xb
 1066 00b3 05       		.uleb128 0x5
 1067 00b4 00       		.byte	0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 30


 1068 00b5 03       		.uleb128 0x3
 1069 00b6 0E       		.uleb128 0xe
 1070 00b7 3A       		.uleb128 0x3a
 1071 00b8 0B       		.uleb128 0xb
 1072 00b9 3B       		.uleb128 0x3b
 1073 00ba 05       		.uleb128 0x5
 1074 00bb 49       		.uleb128 0x49
 1075 00bc 13       		.uleb128 0x13
 1076 00bd 02       		.uleb128 0x2
 1077 00be 18       		.uleb128 0x18
 1078 00bf 00       		.byte	0
 1079 00c0 00       		.byte	0
 1080 00c1 0C       		.uleb128 0xc
 1081 00c2 898201   		.uleb128 0x4109
 1082 00c5 00       		.byte	0
 1083 00c6 11       		.uleb128 0x11
 1084 00c7 01       		.uleb128 0x1
 1085 00c8 31       		.uleb128 0x31
 1086 00c9 13       		.uleb128 0x13
 1087 00ca 00       		.byte	0
 1088 00cb 00       		.byte	0
 1089 00cc 0D       		.uleb128 0xd
 1090 00cd 34       		.uleb128 0x34
 1091 00ce 00       		.byte	0
 1092 00cf 03       		.uleb128 0x3
 1093 00d0 0E       		.uleb128 0xe
 1094 00d1 3A       		.uleb128 0x3a
 1095 00d2 0B       		.uleb128 0xb
 1096 00d3 3B       		.uleb128 0x3b
 1097 00d4 0B       		.uleb128 0xb
 1098 00d5 49       		.uleb128 0x49
 1099 00d6 13       		.uleb128 0x13
 1100 00d7 02       		.uleb128 0x2
 1101 00d8 17       		.uleb128 0x17
 1102 00d9 00       		.byte	0
 1103 00da 00       		.byte	0
 1104 00db 0E       		.uleb128 0xe
 1105 00dc 898201   		.uleb128 0x4109
 1106 00df 01       		.byte	0x1
 1107 00e0 11       		.uleb128 0x11
 1108 00e1 01       		.uleb128 0x1
 1109 00e2 31       		.uleb128 0x31
 1110 00e3 13       		.uleb128 0x13
 1111 00e4 01       		.uleb128 0x1
 1112 00e5 13       		.uleb128 0x13
 1113 00e6 00       		.byte	0
 1114 00e7 00       		.byte	0
 1115 00e8 0F       		.uleb128 0xf
 1116 00e9 8A8201   		.uleb128 0x410a
 1117 00ec 00       		.byte	0
 1118 00ed 02       		.uleb128 0x2
 1119 00ee 18       		.uleb128 0x18
 1120 00ef 9142     		.uleb128 0x2111
 1121 00f1 18       		.uleb128 0x18
 1122 00f2 00       		.byte	0
 1123 00f3 00       		.byte	0
 1124 00f4 10       		.uleb128 0x10
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 31


 1125 00f5 34       		.uleb128 0x34
 1126 00f6 00       		.byte	0
 1127 00f7 03       		.uleb128 0x3
 1128 00f8 0E       		.uleb128 0xe
 1129 00f9 3A       		.uleb128 0x3a
 1130 00fa 0B       		.uleb128 0xb
 1131 00fb 3B       		.uleb128 0x3b
 1132 00fc 0B       		.uleb128 0xb
 1133 00fd 49       		.uleb128 0x49
 1134 00fe 13       		.uleb128 0x13
 1135 00ff 3F       		.uleb128 0x3f
 1136 0100 19       		.uleb128 0x19
 1137 0101 02       		.uleb128 0x2
 1138 0102 18       		.uleb128 0x18
 1139 0103 00       		.byte	0
 1140 0104 00       		.byte	0
 1141 0105 11       		.uleb128 0x11
 1142 0106 2E       		.uleb128 0x2e
 1143 0107 00       		.byte	0
 1144 0108 3F       		.uleb128 0x3f
 1145 0109 19       		.uleb128 0x19
 1146 010a 03       		.uleb128 0x3
 1147 010b 0E       		.uleb128 0xe
 1148 010c 3A       		.uleb128 0x3a
 1149 010d 0B       		.uleb128 0xb
 1150 010e 3B       		.uleb128 0x3b
 1151 010f 0B       		.uleb128 0xb
 1152 0110 27       		.uleb128 0x27
 1153 0111 19       		.uleb128 0x19
 1154 0112 49       		.uleb128 0x49
 1155 0113 13       		.uleb128 0x13
 1156 0114 3C       		.uleb128 0x3c
 1157 0115 19       		.uleb128 0x19
 1158 0116 00       		.byte	0
 1159 0117 00       		.byte	0
 1160 0118 12       		.uleb128 0x12
 1161 0119 2E       		.uleb128 0x2e
 1162 011a 01       		.byte	0x1
 1163 011b 3F       		.uleb128 0x3f
 1164 011c 19       		.uleb128 0x19
 1165 011d 03       		.uleb128 0x3
 1166 011e 0E       		.uleb128 0xe
 1167 011f 3A       		.uleb128 0x3a
 1168 0120 0B       		.uleb128 0xb
 1169 0121 3B       		.uleb128 0x3b
 1170 0122 0B       		.uleb128 0xb
 1171 0123 27       		.uleb128 0x27
 1172 0124 19       		.uleb128 0x19
 1173 0125 3C       		.uleb128 0x3c
 1174 0126 19       		.uleb128 0x19
 1175 0127 00       		.byte	0
 1176 0128 00       		.byte	0
 1177 0129 13       		.uleb128 0x13
 1178 012a 05       		.uleb128 0x5
 1179 012b 00       		.byte	0
 1180 012c 49       		.uleb128 0x49
 1181 012d 13       		.uleb128 0x13
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 32


 1182 012e 00       		.byte	0
 1183 012f 00       		.byte	0
 1184 0130 00       		.byte	0
 1185              		.section	.debug_loc,"",%progbits
 1186              	.Ldebug_loc0:
 1187              	.LLST0:
 1188 0000 0A000000 		.4byte	.LVL7
 1189 0004 0E000000 		.4byte	.LVL8
 1190 0008 0100     		.2byte	0x1
 1191 000a 53       		.byte	0x53
 1192 000b 16000000 		.4byte	.LVL9
 1193 000f 1A000000 		.4byte	.LVL10
 1194 0013 0100     		.2byte	0x1
 1195 0015 53       		.byte	0x53
 1196 0016 00000000 		.4byte	0
 1197 001a 00000000 		.4byte	0
 1198              	.LLST1:
 1199 001e 42000000 		.4byte	.LVL17
 1200 0022 4F000000 		.4byte	.LVL18-1
 1201 0026 0100     		.2byte	0x1
 1202 0028 50       		.byte	0x50
 1203 0029 00000000 		.4byte	0
 1204 002d 00000000 		.4byte	0
 1205              		.section	.debug_aranges,"",%progbits
 1206 0000 94000000 		.4byte	0x94
 1207 0004 0200     		.2byte	0x2
 1208 0006 00000000 		.4byte	.Ldebug_info0
 1209 000a 04       		.byte	0x4
 1210 000b 00       		.byte	0
 1211 000c 0000     		.2byte	0
 1212 000e 0000     		.2byte	0
 1213 0010 00000000 		.4byte	.LFB1
 1214 0014 10000000 		.4byte	.LFE1-.LFB1
 1215 0018 00000000 		.4byte	.LFB3
 1216 001c 10000000 		.4byte	.LFE3-.LFB3
 1217 0020 00000000 		.4byte	.LFB4
 1218 0024 0C000000 		.4byte	.LFE4-.LFB4
 1219 0028 00000000 		.4byte	.LFB5
 1220 002c 0C000000 		.4byte	.LFE5-.LFB5
 1221 0030 00000000 		.4byte	.LFB6
 1222 0034 0C000000 		.4byte	.LFE6-.LFB6
 1223 0038 00000000 		.4byte	.LFB7
 1224 003c 0C000000 		.4byte	.LFE7-.LFB7
 1225 0040 00000000 		.4byte	.LFB8
 1226 0044 0C000000 		.4byte	.LFE8-.LFB8
 1227 0048 00000000 		.4byte	.LFB9
 1228 004c 14000000 		.4byte	.LFE9-.LFB9
 1229 0050 00000000 		.4byte	.LFB10
 1230 0054 0C000000 		.4byte	.LFE10-.LFB10
 1231 0058 00000000 		.4byte	.LFB11
 1232 005c 0C000000 		.4byte	.LFE11-.LFB11
 1233 0060 00000000 		.4byte	.LFB12
 1234 0064 0C000000 		.4byte	.LFE12-.LFB12
 1235 0068 00000000 		.4byte	.LFB13
 1236 006c 0C000000 		.4byte	.LFE13-.LFB13
 1237 0070 00000000 		.4byte	.LFB14
 1238 0074 0C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 33


 1239 0078 00000000 		.4byte	.LFB15
 1240 007c 14000000 		.4byte	.LFE15-.LFB15
 1241 0080 00000000 		.4byte	.LFB0
 1242 0084 5C000000 		.4byte	.LFE0-.LFB0
 1243 0088 00000000 		.4byte	.LFB2
 1244 008c 1C000000 		.4byte	.LFE2-.LFB2
 1245 0090 00000000 		.4byte	0
 1246 0094 00000000 		.4byte	0
 1247              		.section	.debug_ranges,"",%progbits
 1248              	.Ldebug_ranges0:
 1249 0000 00000000 		.4byte	.LFB1
 1250 0004 10000000 		.4byte	.LFE1
 1251 0008 00000000 		.4byte	.LFB3
 1252 000c 10000000 		.4byte	.LFE3
 1253 0010 00000000 		.4byte	.LFB4
 1254 0014 0C000000 		.4byte	.LFE4
 1255 0018 00000000 		.4byte	.LFB5
 1256 001c 0C000000 		.4byte	.LFE5
 1257 0020 00000000 		.4byte	.LFB6
 1258 0024 0C000000 		.4byte	.LFE6
 1259 0028 00000000 		.4byte	.LFB7
 1260 002c 0C000000 		.4byte	.LFE7
 1261 0030 00000000 		.4byte	.LFB8
 1262 0034 0C000000 		.4byte	.LFE8
 1263 0038 00000000 		.4byte	.LFB9
 1264 003c 14000000 		.4byte	.LFE9
 1265 0040 00000000 		.4byte	.LFB10
 1266 0044 0C000000 		.4byte	.LFE10
 1267 0048 00000000 		.4byte	.LFB11
 1268 004c 0C000000 		.4byte	.LFE11
 1269 0050 00000000 		.4byte	.LFB12
 1270 0054 0C000000 		.4byte	.LFE12
 1271 0058 00000000 		.4byte	.LFB13
 1272 005c 0C000000 		.4byte	.LFE13
 1273 0060 00000000 		.4byte	.LFB14
 1274 0064 0C000000 		.4byte	.LFE14
 1275 0068 00000000 		.4byte	.LFB15
 1276 006c 14000000 		.4byte	.LFE15
 1277 0070 00000000 		.4byte	.LFB0
 1278 0074 5C000000 		.4byte	.LFE0
 1279 0078 00000000 		.4byte	.LFB2
 1280 007c 1C000000 		.4byte	.LFE2
 1281 0080 00000000 		.4byte	0
 1282 0084 00000000 		.4byte	0
 1283              		.section	.debug_line,"",%progbits
 1284              	.Ldebug_line0:
 1285 0000 8A010000 		.section	.debug_str,"MS",%progbits,1
 1285      02005400 
 1285      00000201 
 1285      FB0E0D00 
 1285      01010101 
 1286              	.LASF15:
 1287 0000 72656731 		.ascii	"reg16\000"
 1287      3600
 1288              	.LASF25:
 1289 0006 52435F43 		.ascii	"RC_Counter_WriteCounter\000"
 1289      6F756E74 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 34


 1289      65725F57 
 1289      72697465 
 1289      436F756E 
 1290              	.LASF11:
 1291 001e 666C6F61 		.ascii	"float\000"
 1291      7400
 1292              	.LASF36:
 1293 0024 52435F43 		.ascii	"RC_Counter_Init\000"
 1293      6F756E74 
 1293      65725F49 
 1293      6E697400 
 1294              	.LASF30:
 1295 0034 70657269 		.ascii	"period\000"
 1295      6F6400
 1296              	.LASF43:
 1297 003b 52435F43 		.ascii	"RC_Counter_initVar\000"
 1297      6F756E74 
 1297      65725F69 
 1297      6E697456 
 1297      617200
 1298              	.LASF39:
 1299 004e 52435F43 		.ascii	"RC_Counter_Start\000"
 1299      6F756E74 
 1299      65725F53 
 1299      74617274 
 1299      00
 1300              	.LASF41:
 1301 005f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\RC_Counter.c\000"
 1301      6E657261 
 1301      7465645F 
 1301      536F7572 
 1301      63655C50 
 1302              	.LASF27:
 1303 0085 52435F43 		.ascii	"RC_Counter_ReadCounter\000"
 1303      6F756E74 
 1303      65725F52 
 1303      65616443 
 1303      6F756E74 
 1304              	.LASF19:
 1305 009c 52435F43 		.ascii	"RC_Counter_ReadStatusRegister\000"
 1305      6F756E74 
 1305      65725F52 
 1305      65616453 
 1305      74617475 
 1306              	.LASF38:
 1307 00ba 52435F43 		.ascii	"RC_Counter_interruptState\000"
 1307      6F756E74 
 1307      65725F69 
 1307      6E746572 
 1307      72757074 
 1308              	.LASF31:
 1309 00d4 52435F43 		.ascii	"RC_Counter_ReadPeriod\000"
 1309      6F756E74 
 1309      65725F52 
 1309      65616450 
 1309      6572696F 
 1310              	.LASF26:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 35


 1311 00ea 636F756E 		.ascii	"counter\000"
 1311      74657200 
 1312              	.LASF7:
 1313 00f2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1313      206C6F6E 
 1313      6720756E 
 1313      7369676E 
 1313      65642069 
 1314              	.LASF22:
 1315 0109 52435F43 		.ascii	"RC_Counter_WriteControlRegister\000"
 1315      6F756E74 
 1315      65725F57 
 1315      72697465 
 1315      436F6E74 
 1316              	.LASF14:
 1317 0129 72656738 		.ascii	"reg8\000"
 1317      00
 1318              	.LASF42:
 1319 012e 433A5C55 		.ascii	"C:\\Users\\Michael\\Dropbox (MIT)\\College\\Senior "
 1319      73657273 
 1319      5C4D6963 
 1319      6861656C 
 1319      5C44726F 
 1320 015c 59656172 		.ascii	"Year\\6.115 - Microcomputer Project Laboratory\\6.1"
 1320      5C362E31 
 1320      3135202D 
 1320      204D6963 
 1320      726F636F 
 1321 018d 3135202D 		.ascii	"15 - Final Project\\Software\\PSoC Creator\\Ball.cy"
 1321      2046696E 
 1321      616C2050 
 1321      726F6A65 
 1321      63745C53 
 1322 01bd 64736E00 		.ascii	"dsn\000"
 1323              	.LASF5:
 1324 01c1 6C6F6E67 		.ascii	"long unsigned int\000"
 1324      20756E73 
 1324      69676E65 
 1324      6420696E 
 1324      7400
 1325              	.LASF9:
 1326 01d3 75696E74 		.ascii	"uint8\000"
 1326      3800
 1327              	.LASF24:
 1328 01d9 636F6E74 		.ascii	"control\000"
 1328      726F6C00 
 1329              	.LASF23:
 1330 01e1 696E7465 		.ascii	"interruptsMask\000"
 1330      72727570 
 1330      74734D61 
 1330      736B00
 1331              	.LASF1:
 1332 01f0 756E7369 		.ascii	"unsigned char\000"
 1332      676E6564 
 1332      20636861 
 1332      7200
 1333              	.LASF35:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 36


 1334 01fe 52435F43 		.ascii	"RC_Counter_ClearFIFO\000"
 1334      6F756E74 
 1334      65725F43 
 1334      6C656172 
 1334      4649464F 
 1335              	.LASF18:
 1336 0213 52435F43 		.ascii	"RC_Counter_Stop\000"
 1336      6F756E74 
 1336      65725F53 
 1336      746F7000 
 1337              	.LASF12:
 1338 0223 646F7562 		.ascii	"double\000"
 1338      6C6500
 1339              	.LASF21:
 1340 022a 52435F43 		.ascii	"RC_Counter_SetInterruptMode\000"
 1340      6F756E74 
 1340      65725F53 
 1340      6574496E 
 1340      74657272 
 1341              	.LASF10:
 1342 0246 75696E74 		.ascii	"uint16\000"
 1342      313600
 1343              	.LASF40:
 1344 024d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1344      4320342E 
 1344      392E3320 
 1344      32303135 
 1344      30333033 
 1345 0280 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1345      20726576 
 1345      6973696F 
 1345      6E203232 
 1345      31323230 
 1346 02b3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1346      66756E63 
 1346      74696F6E 
 1346      2D736563 
 1346      74696F6E 
 1347              	.LASF44:
 1348 02db 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1348      74657243 
 1348      72697469 
 1348      63616C53 
 1348      65637469 
 1349              	.LASF8:
 1350 02f2 756E7369 		.ascii	"unsigned int\000"
 1350      676E6564 
 1350      20696E74 
 1350      00
 1351              	.LASF17:
 1352 02ff 52435F43 		.ascii	"RC_Counter_Enable\000"
 1352      6F756E74 
 1352      65725F45 
 1352      6E61626C 
 1352      6500
 1353              	.LASF45:
 1354 0311 43794578 		.ascii	"CyExitCriticalSection\000"
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 37


 1354      69744372 
 1354      69746963 
 1354      616C5365 
 1354      6374696F 
 1355              	.LASF29:
 1356 0327 52435F43 		.ascii	"RC_Counter_WritePeriod\000"
 1356      6F756E74 
 1356      65725F57 
 1356      72697465 
 1356      50657269 
 1357              	.LASF32:
 1358 033e 52435F43 		.ascii	"RC_Counter_WriteCompare\000"
 1358      6F756E74 
 1358      65725F57 
 1358      72697465 
 1358      436F6D70 
 1359              	.LASF37:
 1360 0356 6374726C 		.ascii	"ctrl\000"
 1360      00
 1361              	.LASF16:
 1362 035b 73697A65 		.ascii	"sizetype\000"
 1362      74797065 
 1362      00
 1363              	.LASF6:
 1364 0364 6C6F6E67 		.ascii	"long long int\000"
 1364      206C6F6E 
 1364      6720696E 
 1364      7400
 1365              	.LASF13:
 1366 0372 63686172 		.ascii	"char\000"
 1366      00
 1367              	.LASF2:
 1368 0377 73686F72 		.ascii	"short int\000"
 1368      7420696E 
 1368      7400
 1369              	.LASF34:
 1370 0381 52435F43 		.ascii	"RC_Counter_ReadCompare\000"
 1370      6F756E74 
 1370      65725F52 
 1370      65616443 
 1370      6F6D7061 
 1371              	.LASF4:
 1372 0398 6C6F6E67 		.ascii	"long int\000"
 1372      20696E74 
 1372      00
 1373              	.LASF28:
 1374 03a1 52435F43 		.ascii	"RC_Counter_ReadCapture\000"
 1374      6F756E74 
 1374      65725F52 
 1374      65616443 
 1374      61707475 
 1375              	.LASF20:
 1376 03b8 52435F43 		.ascii	"RC_Counter_ReadControlRegister\000"
 1376      6F756E74 
 1376      65725F52 
 1376      65616443 
 1376      6F6E7472 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccOSs6Ml.s 			page 38


 1377              	.LASF0:
 1378 03d7 7369676E 		.ascii	"signed char\000"
 1378      65642063 
 1378      68617200 
 1379              	.LASF33:
 1380 03e3 636F6D70 		.ascii	"compare\000"
 1380      61726500 
 1381              	.LASF3:
 1382 03eb 73686F72 		.ascii	"short unsigned int\000"
 1382      7420756E 
 1382      7369676E 
 1382      65642069 
 1382      6E7400
 1383              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

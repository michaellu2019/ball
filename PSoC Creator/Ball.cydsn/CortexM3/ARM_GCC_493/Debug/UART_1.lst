ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_1_Init,"ax",%progbits
  19              		.align	2
  20              		.global	UART_1_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_1_Init, %function
  24              	UART_1_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART_1.c"
   1:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART_1.c **** *
   5:.\Generated_Source\PSoC5/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_1.c **** *
   8:.\Generated_Source\PSoC5/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_1.c **** *
  10:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_1.c **** 
  17:.\Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:.\Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART_1.c **** 
  22:.\Generated_Source\PSoC5/UART_1.c **** 
  23:.\Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART_1.c **** 
  27:.\Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART_1.c **** 
  29:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 2


  32:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART_1.c **** 
  35:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART_1.c **** 
  48:.\Generated_Source\PSoC5/UART_1.c **** 
  49:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART_1.c **** *
  53:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:.\Generated_Source\PSoC5/UART_1.c **** *
  59:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART_1.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_1.c **** *
  62:.\Generated_Source\PSoC5/UART_1.c **** * Return:
  63:.\Generated_Source\PSoC5/UART_1.c **** *  None.
  64:.\Generated_Source\PSoC5/UART_1.c **** *
  65:.\Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:.\Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:.\Generated_Source\PSoC5/UART_1.c **** *
  72:.\Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART_1.c **** *  No.
  74:.\Generated_Source\PSoC5/UART_1.c **** *
  75:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:.\Generated_Source\PSoC5/UART_1.c **** {
  78:.\Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  80:.\Generated_Source\PSoC5/UART_1.c ****     {
  81:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  82:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  83:.\Generated_Source\PSoC5/UART_1.c ****     }
  84:.\Generated_Source\PSoC5/UART_1.c **** 
  85:.\Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  86:.\Generated_Source\PSoC5/UART_1.c **** }
  87:.\Generated_Source\PSoC5/UART_1.c **** 
  88:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 3


  89:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART_1.c **** *
  93:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:.\Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART_1.c **** *
  99:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 101:.\Generated_Source\PSoC5/UART_1.c **** *
 102:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 103:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 104:.\Generated_Source\PSoC5/UART_1.c **** *
 105:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:.\Generated_Source\PSoC5/UART_1.c **** {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 108:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART_1.c **** 
 110:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:.\Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART_1.c **** 
 117:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART_1.c **** 
 123:.\Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
 125:.\Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 127:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART_1.c **** 
 129:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:.\Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART_1.c **** 
 136:.\Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
 139:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 140:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 4


 141:.\Generated_Source\PSoC5/UART_1.c ****         #else
 142:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  32              		.loc 1 142 0
  33 0000 4722     		movs	r2, #71
  34 0002 034B     		ldr	r3, .L2
  35 0004 1A70     		strb	r2, [r3]
 143:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART_1.c **** 
 146:.\Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART_1.c ****         #else
 150:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  36              		.loc 1 150 0
  37 0006 0122     		movs	r2, #1
  38 0008 0333     		adds	r3, r3, #3
  39 000a 1A70     		strb	r2, [r3]
  40 000c 7047     		bx	lr
  41              	.L3:
  42 000e 00BF     		.align	2
  43              	.L2:
  44 0010 88650040 		.word	1073767816
  45              		.cfi_endproc
  46              	.LFE1:
  47              		.size	UART_1_Init, .-UART_1_Init
  48              		.section	.text.UART_1_Enable,"ax",%progbits
  49              		.align	2
  50              		.global	UART_1_Enable
  51              		.thumb
  52              		.thumb_func
  53              		.type	UART_1_Enable, %function
  54              	UART_1_Enable:
  55              	.LFB2:
 151:.\Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART_1.c **** 
 153:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART_1.c **** 
 155:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART_1.c **** }
 161:.\Generated_Source\PSoC5/UART_1.c **** 
 162:.\Generated_Source\PSoC5/UART_1.c **** 
 163:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART_1.c **** *
 167:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:.\Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART_1.c **** 
 173:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 5


 174:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 175:.\Generated_Source\PSoC5/UART_1.c **** *
 176:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 177:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 178:.\Generated_Source\PSoC5/UART_1.c **** *
 179:.\Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART_1.c **** *
 182:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:.\Generated_Source\PSoC5/UART_1.c **** {
  56              		.loc 1 184 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 08B5     		push	{r3, lr}
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 3, -8
  63              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
  64              		.loc 1 186 0
  65 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  66              	.LVL0:
 187:.\Generated_Source\PSoC5/UART_1.c **** 
 188:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 191:.\Generated_Source\PSoC5/UART_1.c **** 
 192:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:.\Generated_Source\PSoC5/UART_1.c **** 
 195:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:.\Generated_Source\PSoC5/UART_1.c **** 
 198:.\Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART_1.c **** 
 204:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
  67              		.loc 1 207 0
  68 0006 064A     		ldr	r2, .L6
  69 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  70 000a 43F02003 		orr	r3, r3, #32
  71 000e 1370     		strb	r3, [r2]
 208:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART_1.c **** 
 210:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
  72              		.loc 1 211 0
  73 0010 0332     		adds	r2, r2, #3
  74 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 6


  75 0014 43F01003 		orr	r3, r3, #16
  76 0018 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART_1.c **** 
 218:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 220:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART_1.c **** 
 222:.\Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
  77              		.loc 1 222 0
  78 001a FFF7FEFF 		bl	CyExitCriticalSection
  79              	.LVL1:
  80 001e 08BD     		pop	{r3, pc}
  81              	.L7:
  82              		.align	2
  83              	.L6:
  84 0020 98650040 		.word	1073767832
  85              		.cfi_endproc
  86              	.LFE2:
  87              		.size	UART_1_Enable, .-UART_1_Enable
  88              		.section	.text.UART_1_Start,"ax",%progbits
  89              		.align	2
  90              		.global	UART_1_Start
  91              		.thumb
  92              		.thumb_func
  93              		.type	UART_1_Start, %function
  94              	UART_1_Start:
  95              	.LFB0:
  77:.\Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  96              		.loc 1 77 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 08B5     		push	{r3, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 3, -8
 103              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC5/UART_1.c ****     {
 104              		.loc 1 79 0
 105 0002 054B     		ldr	r3, .L11
 106 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107 0006 23B9     		cbnz	r3, .L9
  81:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
 108              		.loc 1 81 0
 109 0008 FFF7FEFF 		bl	UART_1_Init
 110              	.LVL2:
  82:.\Generated_Source\PSoC5/UART_1.c ****     }
 111              		.loc 1 82 0
 112 000c 0122     		movs	r2, #1
 113 000e 024B     		ldr	r3, .L11
 114 0010 1A70     		strb	r2, [r3]
 115              	.L9:
  85:.\Generated_Source\PSoC5/UART_1.c **** }
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 7


 116              		.loc 1 85 0
 117 0012 FFF7FEFF 		bl	UART_1_Enable
 118              	.LVL3:
 119 0016 08BD     		pop	{r3, pc}
 120              	.L12:
 121              		.align	2
 122              	.L11:
 123 0018 00000000 		.word	.LANCHOR0
 124              		.cfi_endproc
 125              	.LFE0:
 126              		.size	UART_1_Start, .-UART_1_Start
 127              		.section	.text.UART_1_Stop,"ax",%progbits
 128              		.align	2
 129              		.global	UART_1_Stop
 130              		.thumb
 131              		.thumb_func
 132              		.type	UART_1_Stop, %function
 133              	UART_1_Stop:
 134              	.LFB3:
 223:.\Generated_Source\PSoC5/UART_1.c **** }
 224:.\Generated_Source\PSoC5/UART_1.c **** 
 225:.\Generated_Source\PSoC5/UART_1.c **** 
 226:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART_1.c **** *
 230:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART_1.c **** *
 233:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 235:.\Generated_Source\PSoC5/UART_1.c **** *
 236:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 237:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 238:.\Generated_Source\PSoC5/UART_1.c **** *
 239:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:.\Generated_Source\PSoC5/UART_1.c **** {
 135              		.loc 1 241 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 08B5     		push	{r3, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 3, -8
 142              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 143              		.loc 1 243 0
 144 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 145              	.LVL4:
 244:.\Generated_Source\PSoC5/UART_1.c **** 
 245:.\Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 248:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 8


 250:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 146              		.loc 1 252 0
 147 0006 064A     		ldr	r2, .L15
 148 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 149 000a 03F0DF03 		and	r3, r3, #223
 150 000e 1370     		strb	r3, [r2]
 253:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART_1.c **** 
 256:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 258:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART_1.c **** 
 260:.\Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 263:.\Generated_Source\PSoC5/UART_1.c **** 
 264:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART_1.c **** 
 269:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 151              		.loc 1 270 0
 152 0010 0332     		adds	r2, r2, #3
 153 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 154 0014 03F0EF03 		and	r3, r3, #239
 155 0018 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/UART_1.c **** 
 272:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART_1.c **** 
 277:.\Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 156              		.loc 1 277 0
 157 001a FFF7FEFF 		bl	CyExitCriticalSection
 158              	.LVL5:
 159 001e 08BD     		pop	{r3, pc}
 160              	.L16:
 161              		.align	2
 162              	.L15:
 163 0020 98650040 		.word	1073767832
 164              		.cfi_endproc
 165              	.LFE3:
 166              		.size	UART_1_Stop, .-UART_1_Stop
 167              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 168              		.align	2
 169              		.global	UART_1_ReadControlRegister
 170              		.thumb
 171              		.thumb_func
 172              		.type	UART_1_ReadControlRegister, %function
 173              	UART_1_ReadControlRegister:
 174              	.LFB4:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 9


 278:.\Generated_Source\PSoC5/UART_1.c **** }
 279:.\Generated_Source\PSoC5/UART_1.c **** 
 280:.\Generated_Source\PSoC5/UART_1.c **** 
 281:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART_1.c **** *
 285:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART_1.c **** *
 288:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 290:.\Generated_Source\PSoC5/UART_1.c **** *
 291:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 292:.\Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART_1.c **** *
 294:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART_1.c **** {
 175              		.loc 1 296 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 297:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART_1.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART_1.c ****     #else
 300:.\Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART_1.c **** }
 180              		.loc 1 302 0
 181 0000 0020     		movs	r0, #0
 182 0002 7047     		bx	lr
 183              		.cfi_endproc
 184              	.LFE4:
 185              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 186              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 187              		.align	2
 188              		.global	UART_1_WriteControlRegister
 189              		.thumb
 190              		.thumb_func
 191              		.type	UART_1_WriteControlRegister, %function
 192              	UART_1_WriteControlRegister:
 193              	.LFB5:
 303:.\Generated_Source\PSoC5/UART_1.c **** 
 304:.\Generated_Source\PSoC5/UART_1.c **** 
 305:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART_1.c **** *
 309:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART_1.c **** *
 312:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART_1.c **** *
 315:.\Generated_Source\PSoC5/UART_1.c **** * Return:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 10


 316:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 317:.\Generated_Source\PSoC5/UART_1.c **** *
 318:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART_1.c **** {
 194              		.loc 1 320 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199              	.LVL6:
 200 0000 7047     		bx	lr
 201              		.cfi_endproc
 202              	.LFE5:
 203              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 204 0002 00BF     		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 205              		.align	2
 206              		.global	UART_1_SetTxInterruptMode
 207              		.thumb
 208              		.thumb_func
 209              		.type	UART_1_SetTxInterruptMode, %function
 210              	UART_1_SetTxInterruptMode:
 211              	.LFB6:
 321:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART_1.c ****         {
 324:.\Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART_1.c ****         }
 326:.\Generated_Source\PSoC5/UART_1.c ****     #else
 327:.\Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART_1.c **** }
 330:.\Generated_Source\PSoC5/UART_1.c **** 
 331:.\Generated_Source\PSoC5/UART_1.c **** 
 332:.\Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART_1.c ****     *
 337:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART_1.c ****     *
 340:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART_1.c ****     *
 352:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 11


 355:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART_1.c ****     *
 358:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART_1.c ****     {
 361:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 362:.\Generated_Source\PSoC5/UART_1.c ****     }
 363:.\Generated_Source\PSoC5/UART_1.c **** 
 364:.\Generated_Source\PSoC5/UART_1.c **** 
 365:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART_1.c ****     *
 369:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART_1.c ****     *
 373:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART_1.c ****     *
 376:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART_1.c ****     *
 379:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART_1.c ****     *
 388:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART_1.c ****     *
 391:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART_1.c ****     {
 394:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART_1.c **** 
 396:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART_1.c **** 
 398:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART_1.c **** 
 401:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:.\Generated_Source\PSoC5/UART_1.c **** 
 404:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:.\Generated_Source\PSoC5/UART_1.c **** 
 407:.\Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/UART_1.c ****         {
 409:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 12


 412:.\Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/UART_1.c ****             {
 414:.\Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/UART_1.c ****             }
 416:.\Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/UART_1.c **** 
 419:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/UART_1.c ****             {
 421:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART_1.c ****                             */
 430:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART_1.c ****                         }
 432:.\Generated_Source\PSoC5/UART_1.c ****                     #else
 433:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART_1.c ****             }
 437:.\Generated_Source\PSoC5/UART_1.c ****         }
 438:.\Generated_Source\PSoC5/UART_1.c ****         else
 439:.\Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:.\Generated_Source\PSoC5/UART_1.c ****         }
 442:.\Generated_Source\PSoC5/UART_1.c **** 
 443:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:.\Generated_Source\PSoC5/UART_1.c **** 
 445:.\Generated_Source\PSoC5/UART_1.c ****     #else
 446:.\Generated_Source\PSoC5/UART_1.c **** 
 447:.\Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 449:.\Generated_Source\PSoC5/UART_1.c **** 
 450:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART_1.c **** 
 452:.\Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 453:.\Generated_Source\PSoC5/UART_1.c ****     }
 454:.\Generated_Source\PSoC5/UART_1.c **** 
 455:.\Generated_Source\PSoC5/UART_1.c **** 
 456:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART_1.c ****     *
 460:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART_1.c ****     *
 464:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART_1.c ****     *
 467:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 13


 469:.\Generated_Source\PSoC5/UART_1.c ****     *
 470:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART_1.c ****     *
 476:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART_1.c ****     *
 484:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART_1.c ****     {
 487:.\Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART_1.c **** 
 489:.\Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 490:.\Generated_Source\PSoC5/UART_1.c **** 
 491:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/UART_1.c ****         {
 494:.\Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/UART_1.c ****         }
 497:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART_1.c **** 
 499:.\Generated_Source\PSoC5/UART_1.c ****         return(status);
 500:.\Generated_Source\PSoC5/UART_1.c ****     }
 501:.\Generated_Source\PSoC5/UART_1.c **** 
 502:.\Generated_Source\PSoC5/UART_1.c **** 
 503:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART_1.c ****     *
 507:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:.\Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART_1.c ****     *
 512:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART_1.c ****     *
 515:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART_1.c ****     *
 519:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 14


 526:.\Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART_1.c ****     *
 528:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART_1.c ****     *
 531:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART_1.c ****     {
 534:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART_1.c **** 
 537:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART_1.c **** 
 541:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:.\Generated_Source\PSoC5/UART_1.c **** 
 544:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:.\Generated_Source\PSoC5/UART_1.c **** 
 547:.\Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC5/UART_1.c ****         {
 549:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/UART_1.c ****             {
 553:.\Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/UART_1.c ****             }
 555:.\Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/UART_1.c **** 
 558:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/UART_1.c ****             {
 560:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART_1.c ****                             */
 569:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART_1.c ****                         }
 571:.\Generated_Source\PSoC5/UART_1.c ****                     #else
 572:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART_1.c ****             }
 576:.\Generated_Source\PSoC5/UART_1.c **** 
 577:.\Generated_Source\PSoC5/UART_1.c ****         }
 578:.\Generated_Source\PSoC5/UART_1.c ****         else
 579:.\Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 15


 583:.\Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART_1.c ****                 {
 587:.\Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/UART_1.c ****                 }
 589:.\Generated_Source\PSoC5/UART_1.c ****             }
 590:.\Generated_Source\PSoC5/UART_1.c ****         }
 591:.\Generated_Source\PSoC5/UART_1.c **** 
 592:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:.\Generated_Source\PSoC5/UART_1.c **** 
 594:.\Generated_Source\PSoC5/UART_1.c ****     #else
 595:.\Generated_Source\PSoC5/UART_1.c **** 
 596:.\Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/UART_1.c ****         {
 599:.\Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 601:.\Generated_Source\PSoC5/UART_1.c **** 
 602:.\Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART_1.c ****             {
 606:.\Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/UART_1.c ****             }
 608:.\Generated_Source\PSoC5/UART_1.c ****         }
 609:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART_1.c **** 
 611:.\Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 612:.\Generated_Source\PSoC5/UART_1.c ****     }
 613:.\Generated_Source\PSoC5/UART_1.c **** 
 614:.\Generated_Source\PSoC5/UART_1.c **** 
 615:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART_1.c ****     *
 619:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART_1.c ****     *
 623:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART_1.c ****     *
 626:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART_1.c ****     *
 630:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART_1.c ****     *
 633:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART_1.c ****     {
 636:.\Generated_Source\PSoC5/UART_1.c ****         
 637:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 16


 640:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:.\Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:.\Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:.\Generated_Source\PSoC5/UART_1.c ****     #else
 646:.\Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 647:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART_1.c ****         
 649:.\Generated_Source\PSoC5/UART_1.c ****     }
 650:.\Generated_Source\PSoC5/UART_1.c **** 
 651:.\Generated_Source\PSoC5/UART_1.c **** 
 652:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART_1.c ****     *
 656:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART_1.c ****     *
 664:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART_1.c ****     *
 667:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART_1.c ****     *
 671:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART_1.c ****     *
 676:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART_1.c ****     *
 679:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART_1.c ****     *
 682:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART_1.c ****                                                             
 685:.\Generated_Source\PSoC5/UART_1.c ****     {
 686:.\Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART_1.c **** 
 688:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART_1.c **** 
 690:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:.\Generated_Source\PSoC5/UART_1.c **** 
 693:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:.\Generated_Source\PSoC5/UART_1.c ****         {
 695:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/UART_1.c ****             {
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 17


 697:.\Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/UART_1.c ****             }
 699:.\Generated_Source\PSoC5/UART_1.c ****             else
 700:.\Generated_Source\PSoC5/UART_1.c ****             {
 701:.\Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART_1.c ****             }
 703:.\Generated_Source\PSoC5/UART_1.c ****         }
 704:.\Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART_1.c ****         {
 706:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:.\Generated_Source\PSoC5/UART_1.c ****         }
 708:.\Generated_Source\PSoC5/UART_1.c ****         else
 709:.\Generated_Source\PSoC5/UART_1.c ****         {
 710:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:.\Generated_Source\PSoC5/UART_1.c ****         }
 712:.\Generated_Source\PSoC5/UART_1.c **** 
 713:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:.\Generated_Source\PSoC5/UART_1.c **** 
 715:.\Generated_Source\PSoC5/UART_1.c ****     #else
 716:.\Generated_Source\PSoC5/UART_1.c **** 
 717:.\Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/UART_1.c **** 
 720:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART_1.c **** 
 722:.\Generated_Source\PSoC5/UART_1.c ****         return(size);
 723:.\Generated_Source\PSoC5/UART_1.c ****     }
 724:.\Generated_Source\PSoC5/UART_1.c **** 
 725:.\Generated_Source\PSoC5/UART_1.c **** 
 726:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART_1.c ****     *
 730:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART_1.c ****     *
 733:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART_1.c ****     *
 736:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART_1.c ****     *
 739:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART_1.c ****     *
 745:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART_1.c ****     *
 748:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART_1.c ****     *
 753:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 18


 754:.\Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART_1.c ****     *
 756:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART_1.c ****     {
 759:.\Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART_1.c **** 
 761:.\Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 763:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 764:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 765:.\Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC5/UART_1.c **** 
 767:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART_1.c **** 
 769:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:.\Generated_Source\PSoC5/UART_1.c **** 
 772:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC5/UART_1.c **** 
 777:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:.\Generated_Source\PSoC5/UART_1.c **** 
 779:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART_1.c **** 
 781:.\Generated_Source\PSoC5/UART_1.c ****     }
 782:.\Generated_Source\PSoC5/UART_1.c **** 
 783:.\Generated_Source\PSoC5/UART_1.c **** 
 784:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART_1.c ****     *
 788:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART_1.c ****     *
 792:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART_1.c ****     *
 804:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART_1.c ****     *
 807:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 19


 811:.\Generated_Source\PSoC5/UART_1.c ****     *
 812:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART_1.c ****                                                         
 815:.\Generated_Source\PSoC5/UART_1.c ****     {
 816:.\Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART_1.c ****                 {
 820:.\Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART_1.c ****                 }
 822:.\Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART_1.c **** 
 828:.\Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART_1.c ****             {
 837:.\Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART_1.c ****             }
 839:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART_1.c ****     }
 841:.\Generated_Source\PSoC5/UART_1.c **** 
 842:.\Generated_Source\PSoC5/UART_1.c **** 
 843:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART_1.c ****     *
 847:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART_1.c ****     *
 850:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART_1.c ****     *
 853:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART_1.c ****     *
 856:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART_1.c ****     {
 859:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 860:.\Generated_Source\PSoC5/UART_1.c ****     }
 861:.\Generated_Source\PSoC5/UART_1.c **** 
 862:.\Generated_Source\PSoC5/UART_1.c **** 
 863:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART_1.c ****     *
 867:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 20


 868:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART_1.c ****     *
 870:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART_1.c ****     *
 873:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART_1.c ****     *
 876:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART_1.c ****     {
 879:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 880:.\Generated_Source\PSoC5/UART_1.c ****     }
 881:.\Generated_Source\PSoC5/UART_1.c **** 
 882:.\Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART_1.c **** 
 884:.\Generated_Source\PSoC5/UART_1.c **** 
 885:.\Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART_1.c ****     *
 890:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART_1.c ****     *
 894:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART_1.c ****     *
 901:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART_1.c ****     *
 904:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART_1.c ****     *
 907:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART_1.c ****     {
 212              		.loc 1 909 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL7:
 910:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 218              		.loc 1 910 0
 219 0000 014B     		ldr	r3, .L20
 220 0002 1870     		strb	r0, [r3]
 221 0004 7047     		bx	lr
 222              	.L21:
 223 0006 00BF     		.align	2
 224              	.L20:
 225 0008 8B650040 		.word	1073767819
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 21


 226              		.cfi_endproc
 227              	.LFE6:
 228              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 229              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 230              		.align	2
 231              		.global	UART_1_WriteTxData
 232              		.thumb
 233              		.thumb_func
 234              		.type	UART_1_WriteTxData, %function
 235              	UART_1_WriteTxData:
 236              	.LFB7:
 911:.\Generated_Source\PSoC5/UART_1.c ****     }
 912:.\Generated_Source\PSoC5/UART_1.c **** 
 913:.\Generated_Source\PSoC5/UART_1.c **** 
 914:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART_1.c ****     *
 918:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART_1.c ****     *
 923:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART_1.c ****     *
 926:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART_1.c ****     * None.
 928:.\Generated_Source\PSoC5/UART_1.c ****     *
 929:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART_1.c ****     *
 938:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART_1.c ****     *
 941:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART_1.c ****     {
 237              		.loc 1 943 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL8:
 944:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 243              		.loc 1 945 0
 244 0000 024B     		ldr	r3, .L24
 245 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 246 0004 0BB1     		cbz	r3, .L22
 946:.\Generated_Source\PSoC5/UART_1.c ****         {
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 22


 947:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART_1.c **** 
 949:.\Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 951:.\Generated_Source\PSoC5/UART_1.c **** 
 952:.\Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/UART_1.c ****             {
 955:.\Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/UART_1.c ****             }
 958:.\Generated_Source\PSoC5/UART_1.c ****             else
 959:.\Generated_Source\PSoC5/UART_1.c ****             {
 960:.\Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/UART_1.c ****                 {
 962:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/UART_1.c ****                 }
 964:.\Generated_Source\PSoC5/UART_1.c **** 
 965:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/UART_1.c **** 
 967:.\Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 969:.\Generated_Source\PSoC5/UART_1.c ****             }
 970:.\Generated_Source\PSoC5/UART_1.c **** 
 971:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 972:.\Generated_Source\PSoC5/UART_1.c **** 
 973:.\Generated_Source\PSoC5/UART_1.c ****         #else
 974:.\Generated_Source\PSoC5/UART_1.c **** 
 975:.\Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 247              		.loc 1 976 0
 248 0006 024B     		ldr	r3, .L24+4
 249 0008 1870     		strb	r0, [r3]
 250              	.L22:
 251 000a 7047     		bx	lr
 252              	.L25:
 253              		.align	2
 254              	.L24:
 255 000c 00000000 		.word	.LANCHOR0
 256 0010 48650040 		.word	1073767752
 257              		.cfi_endproc
 258              	.LFE7:
 259              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 260              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 261              		.align	2
 262              		.global	UART_1_ReadTxStatus
 263              		.thumb
 264              		.thumb_func
 265              		.type	UART_1_ReadTxStatus, %function
 266              	UART_1_ReadTxStatus:
 267              	.LFB8:
 977:.\Generated_Source\PSoC5/UART_1.c **** 
 978:.\Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART_1.c ****         }
 980:.\Generated_Source\PSoC5/UART_1.c ****     }
 981:.\Generated_Source\PSoC5/UART_1.c **** 
 982:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 23


 983:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART_1.c ****     *
 987:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART_1.c ****     *
 990:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART_1.c ****     *
 993:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART_1.c ****     *
 996:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART_1.c ****     *
1002:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART_1.c ****     {
 268              		.loc 1 1004 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
1005:.\Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 273              		.loc 1 1005 0
 274 0000 014B     		ldr	r3, .L27
 275 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:.\Generated_Source\PSoC5/UART_1.c ****     }
 276              		.loc 1 1006 0
 277 0004 7047     		bx	lr
 278              	.L28:
 279 0006 00BF     		.align	2
 280              	.L27:
 281 0008 6B650040 		.word	1073767787
 282              		.cfi_endproc
 283              	.LFE8:
 284              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 285              		.section	.text.UART_1_PutChar,"ax",%progbits
 286              		.align	2
 287              		.global	UART_1_PutChar
 288              		.thumb
 289              		.thumb_func
 290              		.type	UART_1_PutChar, %function
 291              	UART_1_PutChar:
 292              	.LFB9:
1007:.\Generated_Source\PSoC5/UART_1.c **** 
1008:.\Generated_Source\PSoC5/UART_1.c **** 
1009:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART_1.c ****     *
1013:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 24


1015:.\Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART_1.c ****     *
1018:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART_1.c ****     *
1021:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART_1.c ****     *
1024:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART_1.c ****     *
1034:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART_1.c ****     *
1037:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART_1.c ****     *
1040:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART_1.c ****     {
 293              		.loc 1 1042 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298              	.LVL9:
 299              	.L30:
1043:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART_1.c ****         */
1048:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART_1.c **** 
1051:.\Generated_Source\PSoC5/UART_1.c ****         do
1052:.\Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART_1.c **** 
1054:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART_1.c **** 
1059:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:.\Generated_Source\PSoC5/UART_1.c **** 
1062:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 25


1065:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART_1.c ****         }
1067:.\Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/UART_1.c **** 
1071:.\Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/UART_1.c ****         {
1074:.\Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/UART_1.c ****         }
1077:.\Generated_Source\PSoC5/UART_1.c ****         else
1078:.\Generated_Source\PSoC5/UART_1.c ****         {
1079:.\Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/UART_1.c ****             {
1081:.\Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/UART_1.c ****             }
1083:.\Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/UART_1.c **** 
1087:.\Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART_1.c **** 
1092:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/UART_1.c **** 
1094:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART_1.c **** 
1098:.\Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/UART_1.c ****             {
1100:.\Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/UART_1.c ****             }
1103:.\Generated_Source\PSoC5/UART_1.c ****         }
1104:.\Generated_Source\PSoC5/UART_1.c **** 
1105:.\Generated_Source\PSoC5/UART_1.c ****     #else
1106:.\Generated_Source\PSoC5/UART_1.c **** 
1107:.\Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 300              		.loc 1 1107 0 discriminator 1
 301 0000 034B     		ldr	r3, .L31
 302 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 0004 13F0040F 		tst	r3, #4
 304 0008 FAD1     		bne	.L30
1108:.\Generated_Source\PSoC5/UART_1.c ****         {
1109:.\Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART_1.c ****         }
1111:.\Generated_Source\PSoC5/UART_1.c **** 
1112:.\Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 305              		.loc 1 1113 0
 306 000a 024B     		ldr	r3, .L31+4
 307 000c 1870     		strb	r0, [r3]
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 26


 308 000e 7047     		bx	lr
 309              	.L32:
 310              		.align	2
 311              	.L31:
 312 0010 6B650040 		.word	1073767787
 313 0014 48650040 		.word	1073767752
 314              		.cfi_endproc
 315              	.LFE9:
 316              		.size	UART_1_PutChar, .-UART_1_PutChar
 317              		.section	.text.UART_1_PutString,"ax",%progbits
 318              		.align	2
 319              		.global	UART_1_PutString
 320              		.thumb
 321              		.thumb_func
 322              		.type	UART_1_PutString, %function
 323              	UART_1_PutString:
 324              	.LFB10:
1114:.\Generated_Source\PSoC5/UART_1.c **** 
1115:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART_1.c ****     }
1117:.\Generated_Source\PSoC5/UART_1.c **** 
1118:.\Generated_Source\PSoC5/UART_1.c **** 
1119:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART_1.c ****     *
1123:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART_1.c ****     *
1126:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART_1.c ****     *
1129:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART_1.c ****     *
1132:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART_1.c ****     *
1136:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART_1.c ****     *
1139:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART_1.c ****     *
1144:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART_1.c ****     {
 325              		.loc 1 1146 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              	.LVL10:
 330 0000 38B5     		push	{r3, r4, r5, lr}
 331              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 27


 332              		.cfi_offset 3, -16
 333              		.cfi_offset 4, -12
 334              		.cfi_offset 5, -8
 335              		.cfi_offset 14, -4
 336              	.LVL11:
1147:.\Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC5/UART_1.c **** 
1149:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 337              		.loc 1 1150 0
 338 0002 074B     		ldr	r3, .L39
 339 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 340 0006 2BB9     		cbnz	r3, .L37
 341 0008 38BD     		pop	{r3, r4, r5, pc}
 342              	.LVL12:
 343              	.L36:
1151:.\Generated_Source\PSoC5/UART_1.c ****         {
1152:.\Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
1154:.\Generated_Source\PSoC5/UART_1.c ****             {
1155:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 344              		.loc 1 1155 0
 345 000a FFF7FEFF 		bl	UART_1_PutChar
 346              	.LVL13:
1156:.\Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 347              		.loc 1 1156 0
 348 000e 0134     		adds	r4, r4, #1
 349              	.LVL14:
 350 0010 A4B2     		uxth	r4, r4
 351              	.LVL15:
 352 0012 01E0     		b	.L34
 353              	.LVL16:
 354              	.L37:
 355 0014 0546     		mov	r5, r0
 356 0016 0024     		movs	r4, #0
 357              	.LVL17:
 358              	.L34:
1153:.\Generated_Source\PSoC5/UART_1.c ****             {
 359              		.loc 1 1153 0
 360 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 361 001a 0028     		cmp	r0, #0
 362 001c F5D1     		bne	.L36
 363 001e 38BD     		pop	{r3, r4, r5, pc}
 364              	.LVL18:
 365              	.L40:
 366              		.align	2
 367              	.L39:
 368 0020 00000000 		.word	.LANCHOR0
 369              		.cfi_endproc
 370              	.LFE10:
 371              		.size	UART_1_PutString, .-UART_1_PutString
 372              		.section	.text.UART_1_PutArray,"ax",%progbits
 373              		.align	2
 374              		.global	UART_1_PutArray
 375              		.thumb
 376              		.thumb_func
 377              		.type	UART_1_PutArray, %function
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 28


 378              	UART_1_PutArray:
 379              	.LFB11:
1157:.\Generated_Source\PSoC5/UART_1.c ****             }
1158:.\Generated_Source\PSoC5/UART_1.c ****         }
1159:.\Generated_Source\PSoC5/UART_1.c ****     }
1160:.\Generated_Source\PSoC5/UART_1.c **** 
1161:.\Generated_Source\PSoC5/UART_1.c **** 
1162:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART_1.c ****     *
1166:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART_1.c ****     *
1170:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART_1.c ****     *
1175:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART_1.c ****     *
1178:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART_1.c ****     *
1182:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART_1.c ****     *
1185:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART_1.c ****     *
1190:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART_1.c ****     {
 380              		.loc 1 1193 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              	.LVL19:
1194:.\Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC5/UART_1.c **** 
1196:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 385              		.loc 1 1197 0
 386 0000 084B     		ldr	r3, .L47
 387 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 388 0004 33B9     		cbnz	r3, .L45
 389 0006 7047     		bx	lr
 390              	.LVL20:
 391              	.L44:
 392              		.cfi_def_cfa_offset 16
 393              		.cfi_offset 4, -16
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 29


 394              		.cfi_offset 5, -12
 395              		.cfi_offset 6, -8
 396              		.cfi_offset 14, -4
1198:.\Generated_Source\PSoC5/UART_1.c ****         {
1199:.\Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
1200:.\Generated_Source\PSoC5/UART_1.c ****             {
1201:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 397              		.loc 1 1201 0
 398 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 399 000a FFF7FEFF 		bl	UART_1_PutChar
 400              	.LVL21:
1202:.\Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 401              		.loc 1 1202 0
 402 000e 0134     		adds	r4, r4, #1
 403              	.LVL22:
 404 0010 E4B2     		uxtb	r4, r4
 405              	.LVL23:
 406 0012 03E0     		b	.L42
 407              	.LVL24:
 408              	.L45:
 409              		.cfi_def_cfa_offset 0
 410              		.cfi_restore 4
 411              		.cfi_restore 5
 412              		.cfi_restore 6
 413              		.cfi_restore 14
1193:.\Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
 414              		.loc 1 1193 0
 415 0014 70B5     		push	{r4, r5, r6, lr}
 416              		.cfi_def_cfa_offset 16
 417              		.cfi_offset 4, -16
 418              		.cfi_offset 5, -12
 419              		.cfi_offset 6, -8
 420              		.cfi_offset 14, -4
 421 0016 0D46     		mov	r5, r1
 422 0018 0646     		mov	r6, r0
 423 001a 0024     		movs	r4, #0
 424              	.LVL25:
 425              	.L42:
1199:.\Generated_Source\PSoC5/UART_1.c ****             {
 426              		.loc 1 1199 0
 427 001c AC42     		cmp	r4, r5
 428 001e F3D3     		bcc	.L44
 429 0020 70BD     		pop	{r4, r5, r6, pc}
 430              	.LVL26:
 431              	.L48:
 432 0022 00BF     		.align	2
 433              	.L47:
 434 0024 00000000 		.word	.LANCHOR0
 435              		.cfi_endproc
 436              	.LFE11:
 437              		.size	UART_1_PutArray, .-UART_1_PutArray
 438              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 439              		.align	2
 440              		.global	UART_1_PutCRLF
 441              		.thumb
 442              		.thumb_func
 443              		.type	UART_1_PutCRLF, %function
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 30


 444              	UART_1_PutCRLF:
 445              	.LFB12:
1203:.\Generated_Source\PSoC5/UART_1.c ****             }
1204:.\Generated_Source\PSoC5/UART_1.c ****         }
1205:.\Generated_Source\PSoC5/UART_1.c ****     }
1206:.\Generated_Source\PSoC5/UART_1.c **** 
1207:.\Generated_Source\PSoC5/UART_1.c **** 
1208:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART_1.c ****     *
1212:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART_1.c ****     *
1216:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART_1.c ****     *
1219:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART_1.c ****     *
1222:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART_1.c ****     *
1226:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART_1.c ****     *
1229:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART_1.c ****     {
 446              		.loc 1 1231 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              	.LVL27:
 451 0000 08B5     		push	{r3, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
 454              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 455              		.loc 1 1233 0
 456 0002 064B     		ldr	r3, .L52
 457 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 458 0006 3BB1     		cbz	r3, .L49
1234:.\Generated_Source\PSoC5/UART_1.c ****         {
1235:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 459              		.loc 1 1235 0
 460 0008 FFF7FEFF 		bl	UART_1_PutChar
 461              	.LVL28:
1236:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 462              		.loc 1 1236 0
 463 000c 0D20     		movs	r0, #13
 464 000e FFF7FEFF 		bl	UART_1_PutChar
 465              	.LVL29:
1237:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 31


 466              		.loc 1 1237 0
 467 0012 0A20     		movs	r0, #10
 468 0014 FFF7FEFF 		bl	UART_1_PutChar
 469              	.LVL30:
 470              	.L49:
 471 0018 08BD     		pop	{r3, pc}
 472              	.L53:
 473 001a 00BF     		.align	2
 474              	.L52:
 475 001c 00000000 		.word	.LANCHOR0
 476              		.cfi_endproc
 477              	.LFE12:
 478              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 479              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 480              		.align	2
 481              		.global	UART_1_GetTxBufferSize
 482              		.thumb
 483              		.thumb_func
 484              		.type	UART_1_GetTxBufferSize, %function
 485              	UART_1_GetTxBufferSize:
 486              	.LFB13:
1238:.\Generated_Source\PSoC5/UART_1.c ****         }
1239:.\Generated_Source\PSoC5/UART_1.c ****     }
1240:.\Generated_Source\PSoC5/UART_1.c **** 
1241:.\Generated_Source\PSoC5/UART_1.c **** 
1242:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART_1.c ****     *
1246:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART_1.c ****     *
1255:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART_1.c ****     *
1258:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART_1.c ****     *
1262:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART_1.c ****     *
1266:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART_1.c ****     *
1269:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART_1.c ****     *
1272:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 32


1274:.\Generated_Source\PSoC5/UART_1.c ****                                                             
1275:.\Generated_Source\PSoC5/UART_1.c ****     {
 487              		.loc 1 1275 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
1276:.\Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART_1.c **** 
1278:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART_1.c **** 
1280:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1282:.\Generated_Source\PSoC5/UART_1.c **** 
1283:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:.\Generated_Source\PSoC5/UART_1.c ****         {
1285:.\Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART_1.c ****         }
1287:.\Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:.\Generated_Source\PSoC5/UART_1.c ****         {
1289:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:.\Generated_Source\PSoC5/UART_1.c ****         }
1291:.\Generated_Source\PSoC5/UART_1.c ****         else
1292:.\Generated_Source\PSoC5/UART_1.c ****         {
1293:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART_1.c ****         }
1296:.\Generated_Source\PSoC5/UART_1.c **** 
1297:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1298:.\Generated_Source\PSoC5/UART_1.c **** 
1299:.\Generated_Source\PSoC5/UART_1.c ****     #else
1300:.\Generated_Source\PSoC5/UART_1.c **** 
1301:.\Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 492              		.loc 1 1301 0
 493 0000 074B     		ldr	r3, .L58
 494 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 495 0004 DBB2     		uxtb	r3, r3
 496              	.LVL31:
1302:.\Generated_Source\PSoC5/UART_1.c **** 
1303:.\Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 497              		.loc 1 1304 0
 498 0006 13F0040F 		tst	r3, #4
 499 000a 04D1     		bne	.L56
1305:.\Generated_Source\PSoC5/UART_1.c ****         {
1306:.\Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/UART_1.c ****         }
1308:.\Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 500              		.loc 1 1308 0
 501 000c 13F0020F 		tst	r3, #2
 502 0010 03D0     		beq	.L57
1309:.\Generated_Source\PSoC5/UART_1.c ****         {
1310:.\Generated_Source\PSoC5/UART_1.c ****             size = 0u;
 503              		.loc 1 1310 0
 504 0012 0020     		movs	r0, #0
 505 0014 7047     		bx	lr
 506              	.L56:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 33


1306:.\Generated_Source\PSoC5/UART_1.c ****         }
 507              		.loc 1 1306 0
 508 0016 0420     		movs	r0, #4
 509 0018 7047     		bx	lr
 510              	.L57:
1311:.\Generated_Source\PSoC5/UART_1.c ****         }
1312:.\Generated_Source\PSoC5/UART_1.c ****         else
1313:.\Generated_Source\PSoC5/UART_1.c ****         {
1314:.\Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART_1.c ****             size = 1u;
 511              		.loc 1 1315 0
 512 001a 0120     		movs	r0, #1
 513              	.LVL32:
1316:.\Generated_Source\PSoC5/UART_1.c ****         }
1317:.\Generated_Source\PSoC5/UART_1.c **** 
1318:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART_1.c **** 
1320:.\Generated_Source\PSoC5/UART_1.c ****     return(size);
1321:.\Generated_Source\PSoC5/UART_1.c ****     }
 514              		.loc 1 1321 0
 515 001c 7047     		bx	lr
 516              	.L59:
 517 001e 00BF     		.align	2
 518              	.L58:
 519 0020 6B650040 		.word	1073767787
 520              		.cfi_endproc
 521              	.LFE13:
 522              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 523              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 524              		.align	2
 525              		.global	UART_1_ClearTxBuffer
 526              		.thumb
 527              		.thumb_func
 528              		.type	UART_1_ClearTxBuffer, %function
 529              	UART_1_ClearTxBuffer:
 530              	.LFB14:
1322:.\Generated_Source\PSoC5/UART_1.c **** 
1323:.\Generated_Source\PSoC5/UART_1.c **** 
1324:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART_1.c ****     *
1328:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART_1.c ****     *
1331:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART_1.c ****     *
1334:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART_1.c ****     *
1337:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART_1.c ****     *
1341:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 34


1343:.\Generated_Source\PSoC5/UART_1.c ****     *
1344:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART_1.c ****     *
1349:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART_1.c ****     *
1353:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART_1.c ****     {
 531              		.loc 1 1355 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535 0000 08B5     		push	{r3, lr}
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 3, -8
 538              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART_1.c **** 
1358:.\Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 539              		.loc 1 1358 0
 540 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 541              	.LVL33:
1359:.\Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 542              		.loc 1 1360 0
 543 0006 064B     		ldr	r3, .L62
 544 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 545 000a 42F00102 		orr	r2, r2, #1
 546 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 547              		.loc 1 1361 0
 548 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 549 0012 02F0FE02 		and	r2, r2, #254
 550 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 551              		.loc 1 1362 0
 552 0018 FFF7FEFF 		bl	CyExitCriticalSection
 553              	.LVL34:
 554 001c 08BD     		pop	{r3, pc}
 555              	.L63:
 556 001e 00BF     		.align	2
 557              	.L62:
 558 0020 98650040 		.word	1073767832
 559              		.cfi_endproc
 560              	.LFE14:
 561              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 562              		.section	.text.UART_1_SendBreak,"ax",%progbits
 563              		.align	2
 564              		.global	UART_1_SendBreak
 565              		.thumb
 566              		.thumb_func
 567              		.type	UART_1_SendBreak, %function
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 35


 568              	UART_1_SendBreak:
 569              	.LFB15:
1363:.\Generated_Source\PSoC5/UART_1.c **** 
1364:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART_1.c **** 
1366:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1368:.\Generated_Source\PSoC5/UART_1.c **** 
1369:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/UART_1.c **** 
1372:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1374:.\Generated_Source\PSoC5/UART_1.c **** 
1375:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART_1.c ****     }
1377:.\Generated_Source\PSoC5/UART_1.c **** 
1378:.\Generated_Source\PSoC5/UART_1.c **** 
1379:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART_1.c ****     *
1383:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART_1.c ****     *
1386:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART_1.c ****     *
1398:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART_1.c ****     *
1401:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART_1.c ****     *
1406:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART_1.c ****     *
1409:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 36


1418:.\Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART_1.c ****     *
1432:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART_1.c ****     *
1439:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART_1.c ****     {
 570              		.loc 1 1441 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575              	.LVL35:
1442:.\Generated_Source\PSoC5/UART_1.c **** 
1443:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 576              		.loc 1 1444 0
 577 0000 124B     		ldr	r3, .L71
 578 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 579 0004 0BB3     		cbz	r3, .L64
 580              	.LBB2:
1445:.\Generated_Source\PSoC5/UART_1.c ****         {
1446:.\Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART_1.c **** 
1450:.\Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART_1.c **** 
1452:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART_1.c ****             {
1455:.\Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/UART_1.c **** 
1461:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART_1.c ****                 {
1463:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 37


1464:.\Generated_Source\PSoC5/UART_1.c ****                 }
1465:.\Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/UART_1.c ****             }
1467:.\Generated_Source\PSoC5/UART_1.c **** 
1468:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART_1.c ****             {
1471:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART_1.c ****                 {
1473:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/UART_1.c ****                 }
1475:.\Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/UART_1.c ****             }
1477:.\Generated_Source\PSoC5/UART_1.c **** 
1478:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART_1.c ****             {
1482:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART_1.c ****             }
1485:.\Generated_Source\PSoC5/UART_1.c **** 
1486:.\Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART_1.c **** 
1488:.\Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART_1.c **** 
1490:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 581              		.loc 1 1490 0
 582 0006 08B1     		cbz	r0, .L66
 583              		.loc 1 1490 0 is_stmt 0 discriminator 1
 584 0008 0328     		cmp	r0, #3
 585 000a 0DD1     		bne	.L67
 586              	.L66:
1491:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART_1.c ****             {
1493:.\Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART_1.c **** 
1500:.\Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
1502:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
1503:.\Generated_Source\PSoC5/UART_1.c ****                 #else
1504:.\Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
 587              		.loc 1 1504 0 is_stmt 1
 588 000c 104B     		ldr	r3, .L71+4
 589 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 590 0010 0E4A     		ldr	r2, .L71
 591 0012 5170     		strb	r1, [r2, #1]
1505:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
 592              		.loc 1 1505 0
 593 0014 6722     		movs	r2, #103
 594 0016 1A70     		strb	r2, [r3]
1506:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 38


1507:.\Generated_Source\PSoC5/UART_1.c **** 
1508:.\Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 595              		.loc 1 1509 0
 596 0018 0022     		movs	r2, #0
 597 001a 403B     		subs	r3, r3, #64
 598 001c 1A70     		strb	r2, [r3]
 599              	.L68:
1510:.\Generated_Source\PSoC5/UART_1.c **** 
1511:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART_1.c ****                 {
1513:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 600              		.loc 1 1513 0 discriminator 1
 601 001e 0D4B     		ldr	r3, .L71+8
 602 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 603              	.LVL36:
1514:.\Generated_Source\PSoC5/UART_1.c ****                 }
1515:.\Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 604              		.loc 1 1515 0 discriminator 1
 605 0022 13F0020F 		tst	r3, #2
 606 0026 FAD1     		bne	.L68
 607              	.LVL37:
 608              	.L67:
1516:.\Generated_Source\PSoC5/UART_1.c ****             }
1517:.\Generated_Source\PSoC5/UART_1.c **** 
1518:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 609              		.loc 1 1518 0
 610 0028 0128     		cmp	r0, #1
 611 002a 01D0     		beq	.L69
 612              		.loc 1 1518 0 is_stmt 0 discriminator 1
 613 002c 0328     		cmp	r0, #3
 614 002e 04D1     		bne	.L70
 615              	.L69:
1519:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART_1.c ****             {
1521:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART_1.c ****                 {
1523:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 616              		.loc 1 1523 0 is_stmt 1 discriminator 1
 617 0030 084B     		ldr	r3, .L71+8
 618 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 619              	.LVL38:
1524:.\Generated_Source\PSoC5/UART_1.c ****                 }
1525:.\Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 620              		.loc 1 1525 0 discriminator 1
 621 0034 13F0010F 		tst	r3, #1
 622 0038 FAD0     		beq	.L69
 623              	.LVL39:
 624              	.L70:
1526:.\Generated_Source\PSoC5/UART_1.c ****             }
1527:.\Generated_Source\PSoC5/UART_1.c **** 
1528:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 625              		.loc 1 1529 0
 626 003a 0138     		subs	r0, r0, #1
 627              	.LVL40:
 628 003c C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 39


1528:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 629              		.loc 1 1528 0
 630 003e 0228     		cmp	r0, #2
 631 0040 03D8     		bhi	.L64
1530:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART_1.c ****             {
1532:.\Generated_Source\PSoC5/UART_1.c **** 
1533:.\Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
1535:.\Generated_Source\PSoC5/UART_1.c ****             #else
1536:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
 632              		.loc 1 1536 0
 633 0042 024B     		ldr	r3, .L71
 634 0044 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 635 0046 024B     		ldr	r3, .L71+4
 636 0048 1A70     		strb	r2, [r3]
 637              	.L64:
 638 004a 7047     		bx	lr
 639              	.L72:
 640              		.align	2
 641              	.L71:
 642 004c 00000000 		.word	.LANCHOR0
 643 0050 88650040 		.word	1073767816
 644 0054 6B650040 		.word	1073767787
 645              	.LBE2:
 646              		.cfi_endproc
 647              	.LFE15:
 648              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 649              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 650              		.align	2
 651              		.global	UART_1_SetTxAddressMode
 652              		.thumb
 653              		.thumb_func
 654              		.type	UART_1_SetTxAddressMode, %function
 655              	UART_1_SetTxAddressMode:
 656              	.LFB16:
1537:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART_1.c **** 
1539:.\Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART_1.c ****             }
1545:.\Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART_1.c ****         }
1547:.\Generated_Source\PSoC5/UART_1.c ****     }
1548:.\Generated_Source\PSoC5/UART_1.c **** 
1549:.\Generated_Source\PSoC5/UART_1.c **** 
1550:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART_1.c ****     *
1554:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART_1.c ****     *
1557:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 40


1558:.\Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART_1.c ****     *
1564:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART_1.c ****     *
1567:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART_1.c ****     *
1571:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART_1.c ****     {
 657              		.loc 1 1573 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662              	.LVL41:
 663 0000 7047     		bx	lr
 664              		.cfi_endproc
 665              	.LFE16:
 666              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 667              		.global	UART_1_initVar
 668 0002 00BF     		.bss
 669              		.set	.LANCHOR0,. + 0
 670              		.type	UART_1_initVar, %object
 671              		.size	UART_1_initVar, 1
 672              	UART_1_initVar:
 673 0000 00       		.space	1
 674              		.type	txPeriod.4910, %object
 675              		.size	txPeriod.4910, 1
 676              	txPeriod.4910:
 677 0001 00       		.space	1
 678              		.text
 679              	.Letext0:
 680              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 681              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 682              		.section	.debug_info,"",%progbits
 683              	.Ldebug_info0:
 684 0000 1D040000 		.4byte	0x41d
 685 0004 0400     		.2byte	0x4
 686 0006 00000000 		.4byte	.Ldebug_abbrev0
 687 000a 04       		.byte	0x4
 688 000b 01       		.uleb128 0x1
 689 000c DE010000 		.4byte	.LASF44
 690 0010 01       		.byte	0x1
 691 0011 24030000 		.4byte	.LASF45
 692 0015 E3000000 		.4byte	.LASF46
 693 0019 00000000 		.4byte	.Ldebug_ranges0+0
 694 001d 00000000 		.4byte	0
 695 0021 00000000 		.4byte	.Ldebug_line0
 696 0025 02       		.uleb128 0x2
 697 0026 01       		.byte	0x1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 41


 698 0027 06       		.byte	0x6
 699 0028 C2030000 		.4byte	.LASF0
 700 002c 02       		.uleb128 0x2
 701 002d 01       		.byte	0x1
 702 002e 08       		.byte	0x8
 703 002f B1010000 		.4byte	.LASF1
 704 0033 02       		.uleb128 0x2
 705 0034 02       		.byte	0x2
 706 0035 05       		.byte	0x5
 707 0036 CD010000 		.4byte	.LASF2
 708 003a 02       		.uleb128 0x2
 709 003b 02       		.byte	0x2
 710 003c 07       		.byte	0x7
 711 003d 54000000 		.4byte	.LASF3
 712 0041 02       		.uleb128 0x2
 713 0042 04       		.byte	0x4
 714 0043 05       		.byte	0x5
 715 0044 91030000 		.4byte	.LASF4
 716 0048 02       		.uleb128 0x2
 717 0049 04       		.byte	0x4
 718 004a 07       		.byte	0x7
 719 004b 76010000 		.4byte	.LASF5
 720 004f 02       		.uleb128 0x2
 721 0050 08       		.byte	0x8
 722 0051 05       		.byte	0x5
 723 0052 00000000 		.4byte	.LASF6
 724 0056 02       		.uleb128 0x2
 725 0057 08       		.byte	0x8
 726 0058 07       		.byte	0x7
 727 0059 A0000000 		.4byte	.LASF7
 728 005d 03       		.uleb128 0x3
 729 005e 04       		.byte	0x4
 730 005f 05       		.byte	0x5
 731 0060 696E7400 		.ascii	"int\000"
 732 0064 02       		.uleb128 0x2
 733 0065 04       		.byte	0x4
 734 0066 07       		.byte	0x7
 735 0067 92020000 		.4byte	.LASF8
 736 006b 04       		.uleb128 0x4
 737 006c 88010000 		.4byte	.LASF9
 738 0070 02       		.byte	0x2
 739 0071 9201     		.2byte	0x192
 740 0073 2C000000 		.4byte	0x2c
 741 0077 04       		.uleb128 0x4
 742 0078 D7010000 		.4byte	.LASF10
 743 007c 02       		.byte	0x2
 744 007d 9301     		.2byte	0x193
 745 007f 3A000000 		.4byte	0x3a
 746 0083 02       		.uleb128 0x2
 747 0084 04       		.byte	0x4
 748 0085 04       		.byte	0x4
 749 0086 9A000000 		.4byte	.LASF11
 750 008a 02       		.uleb128 0x2
 751 008b 08       		.byte	0x8
 752 008c 04       		.byte	0x4
 753 008d BF010000 		.4byte	.LASF12
 754 0091 04       		.uleb128 0x4
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 42


 755 0092 0E030000 		.4byte	.LASF13
 756 0096 02       		.byte	0x2
 757 0097 A301     		.2byte	0x1a3
 758 0099 9D000000 		.4byte	0x9d
 759 009d 02       		.uleb128 0x2
 760 009e 01       		.byte	0x1
 761 009f 08       		.byte	0x8
 762 00a0 1F030000 		.4byte	.LASF14
 763 00a4 04       		.uleb128 0x4
 764 00a5 C3000000 		.4byte	.LASF15
 765 00a9 02       		.byte	0x2
 766 00aa 3C02     		.2byte	0x23c
 767 00ac B0000000 		.4byte	0xb0
 768 00b0 05       		.uleb128 0x5
 769 00b1 6B000000 		.4byte	0x6b
 770 00b5 02       		.uleb128 0x2
 771 00b6 04       		.byte	0x4
 772 00b7 07       		.byte	0x7
 773 00b8 05030000 		.4byte	.LASF16
 774 00bc 06       		.uleb128 0x6
 775 00bd 0E000000 		.4byte	.LASF47
 776 00c1 01       		.byte	0x1
 777 00c2 6A       		.byte	0x6a
 778 00c3 00000000 		.4byte	.LFB1
 779 00c7 14000000 		.4byte	.LFE1-.LFB1
 780 00cb 01       		.uleb128 0x1
 781 00cc 9C       		.byte	0x9c
 782 00cd 07       		.uleb128 0x7
 783 00ce B4030000 		.4byte	.LASF17
 784 00d2 01       		.byte	0x1
 785 00d3 B7       		.byte	0xb7
 786 00d4 00000000 		.4byte	.LFB2
 787 00d8 24000000 		.4byte	.LFE2-.LFB2
 788 00dc 01       		.uleb128 0x1
 789 00dd 9C       		.byte	0x9c
 790 00de 04010000 		.4byte	0x104
 791 00e2 08       		.uleb128 0x8
 792 00e3 A0010000 		.4byte	.LASF20
 793 00e7 01       		.byte	0x1
 794 00e8 B9       		.byte	0xb9
 795 00e9 6B000000 		.4byte	0x6b
 796 00ed 00000000 		.4byte	.LLST0
 797 00f1 09       		.uleb128 0x9
 798 00f2 06000000 		.4byte	.LVL0
 799 00f6 08040000 		.4byte	0x408
 800 00fa 09       		.uleb128 0x9
 801 00fb 1E000000 		.4byte	.LVL1
 802 00ff 13040000 		.4byte	0x413
 803 0103 00       		.byte	0
 804 0104 07       		.uleb128 0x7
 805 0105 1A000000 		.4byte	.LASF18
 806 0109 01       		.byte	0x1
 807 010a 4C       		.byte	0x4c
 808 010b 00000000 		.4byte	.LFB0
 809 010f 1C000000 		.4byte	.LFE0-.LFB0
 810 0113 01       		.uleb128 0x1
 811 0114 9C       		.byte	0x9c
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 43


 812 0115 2C010000 		.4byte	0x12c
 813 0119 09       		.uleb128 0x9
 814 011a 0C000000 		.4byte	.LVL2
 815 011e BC000000 		.4byte	0xbc
 816 0122 09       		.uleb128 0x9
 817 0123 16000000 		.4byte	.LVL3
 818 0127 CD000000 		.4byte	0xcd
 819 012b 00       		.byte	0
 820 012c 07       		.uleb128 0x7
 821 012d 4E030000 		.4byte	.LASF19
 822 0131 01       		.byte	0x1
 823 0132 F0       		.byte	0xf0
 824 0133 00000000 		.4byte	.LFB3
 825 0137 24000000 		.4byte	.LFE3-.LFB3
 826 013b 01       		.uleb128 0x1
 827 013c 9C       		.byte	0x9c
 828 013d 63010000 		.4byte	0x163
 829 0141 08       		.uleb128 0x8
 830 0142 A0010000 		.4byte	.LASF20
 831 0146 01       		.byte	0x1
 832 0147 F2       		.byte	0xf2
 833 0148 6B000000 		.4byte	0x6b
 834 014c 13000000 		.4byte	.LLST1
 835 0150 09       		.uleb128 0x9
 836 0151 06000000 		.4byte	.LVL4
 837 0155 08040000 		.4byte	0x408
 838 0159 09       		.uleb128 0x9
 839 015a 1E000000 		.4byte	.LVL5
 840 015e 13040000 		.4byte	0x413
 841 0162 00       		.byte	0
 842 0163 0A       		.uleb128 0xa
 843 0164 C8000000 		.4byte	.LASF27
 844 0168 01       		.byte	0x1
 845 0169 2701     		.2byte	0x127
 846 016b 6B000000 		.4byte	0x6b
 847 016f 00000000 		.4byte	.LFB4
 848 0173 04000000 		.4byte	.LFE4-.LFB4
 849 0177 01       		.uleb128 0x1
 850 0178 9C       		.byte	0x9c
 851 0179 0B       		.uleb128 0xb
 852 017a 27000000 		.4byte	.LASF21
 853 017e 01       		.byte	0x1
 854 017f 3F01     		.2byte	0x13f
 855 0181 00000000 		.4byte	.LFB5
 856 0185 02000000 		.4byte	.LFE5-.LFB5
 857 0189 01       		.uleb128 0x1
 858 018a 9C       		.byte	0x9c
 859 018b 9E010000 		.4byte	0x19e
 860 018f 0C       		.uleb128 0xc
 861 0190 8E010000 		.4byte	.LASF23
 862 0194 01       		.byte	0x1
 863 0195 3F01     		.2byte	0x13f
 864 0197 6B000000 		.4byte	0x6b
 865 019b 01       		.uleb128 0x1
 866 019c 50       		.byte	0x50
 867 019d 00       		.byte	0
 868 019e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 44


 869 019f 9A030000 		.4byte	.LASF22
 870 01a3 01       		.byte	0x1
 871 01a4 8C03     		.2byte	0x38c
 872 01a6 00000000 		.4byte	.LFB6
 873 01aa 0C000000 		.4byte	.LFE6-.LFB6
 874 01ae 01       		.uleb128 0x1
 875 01af 9C       		.byte	0x9c
 876 01b0 C3010000 		.4byte	0x1c3
 877 01b4 0C       		.uleb128 0xc
 878 01b5 C6010000 		.4byte	.LASF24
 879 01b9 01       		.byte	0x1
 880 01ba 8C03     		.2byte	0x38c
 881 01bc 6B000000 		.4byte	0x6b
 882 01c0 01       		.uleb128 0x1
 883 01c1 50       		.byte	0x50
 884 01c2 00       		.byte	0
 885 01c3 0B       		.uleb128 0xb
 886 01c4 5A030000 		.4byte	.LASF25
 887 01c8 01       		.byte	0x1
 888 01c9 AE03     		.2byte	0x3ae
 889 01cb 00000000 		.4byte	.LFB7
 890 01cf 14000000 		.4byte	.LFE7-.LFB7
 891 01d3 01       		.uleb128 0x1
 892 01d4 9C       		.byte	0x9c
 893 01d5 E8010000 		.4byte	0x1e8
 894 01d9 0C       		.uleb128 0xc
 895 01da 14030000 		.4byte	.LASF26
 896 01de 01       		.byte	0x1
 897 01df AE03     		.2byte	0x3ae
 898 01e1 6B000000 		.4byte	0x6b
 899 01e5 01       		.uleb128 0x1
 900 01e6 50       		.byte	0x50
 901 01e7 00       		.byte	0
 902 01e8 0A       		.uleb128 0xa
 903 01e9 7F000000 		.4byte	.LASF28
 904 01ed 01       		.byte	0x1
 905 01ee EB03     		.2byte	0x3eb
 906 01f0 6B000000 		.4byte	0x6b
 907 01f4 00000000 		.4byte	.LFB8
 908 01f8 0C000000 		.4byte	.LFE8-.LFB8
 909 01fc 01       		.uleb128 0x1
 910 01fd 9C       		.byte	0x9c
 911 01fe 0B       		.uleb128 0xb
 912 01ff 83020000 		.4byte	.LASF29
 913 0203 01       		.byte	0x1
 914 0204 1104     		.2byte	0x411
 915 0206 00000000 		.4byte	.LFB9
 916 020a 18000000 		.4byte	.LFE9-.LFB9
 917 020e 01       		.uleb128 0x1
 918 020f 9C       		.byte	0x9c
 919 0210 23020000 		.4byte	0x223
 920 0214 0C       		.uleb128 0xc
 921 0215 14030000 		.4byte	.LASF26
 922 0219 01       		.byte	0x1
 923 021a 1104     		.2byte	0x411
 924 021c 6B000000 		.4byte	0x6b
 925 0220 01       		.uleb128 0x1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 45


 926 0221 50       		.byte	0x50
 927 0222 00       		.byte	0
 928 0223 0B       		.uleb128 0xb
 929 0224 CE030000 		.4byte	.LASF30
 930 0228 01       		.byte	0x1
 931 0229 7904     		.2byte	0x479
 932 022b 00000000 		.4byte	.LFB10
 933 022f 24000000 		.4byte	.LFE10-.LFB10
 934 0233 01       		.uleb128 0x1
 935 0234 9C       		.byte	0x9c
 936 0235 63020000 		.4byte	0x263
 937 0239 0D       		.uleb128 0xd
 938 023a 93000000 		.4byte	.LASF31
 939 023e 01       		.byte	0x1
 940 023f 7904     		.2byte	0x479
 941 0241 63020000 		.4byte	0x263
 942 0245 26000000 		.4byte	.LLST2
 943 0249 0E       		.uleb128 0xe
 944 024a DB020000 		.4byte	.LASF32
 945 024e 01       		.byte	0x1
 946 024f 7B04     		.2byte	0x47b
 947 0251 77000000 		.4byte	0x77
 948 0255 68000000 		.4byte	.LLST3
 949 0259 09       		.uleb128 0x9
 950 025a 0E000000 		.4byte	.LVL13
 951 025e FE010000 		.4byte	0x1fe
 952 0262 00       		.byte	0
 953 0263 0F       		.uleb128 0xf
 954 0264 04       		.byte	0x4
 955 0265 69020000 		.4byte	0x269
 956 0269 10       		.uleb128 0x10
 957 026a 91000000 		.4byte	0x91
 958 026e 0B       		.uleb128 0xb
 959 026f F5020000 		.4byte	.LASF33
 960 0273 01       		.byte	0x1
 961 0274 A704     		.2byte	0x4a7
 962 0276 00000000 		.4byte	.LFB11
 963 027a 28000000 		.4byte	.LFE11-.LFB11
 964 027e 01       		.uleb128 0x1
 965 027f 9C       		.byte	0x9c
 966 0280 BE020000 		.4byte	0x2be
 967 0284 0D       		.uleb128 0xd
 968 0285 93000000 		.4byte	.LASF31
 969 0289 01       		.byte	0x1
 970 028a A704     		.2byte	0x4a7
 971 028c BE020000 		.4byte	0x2be
 972 0290 A9000000 		.4byte	.LLST4
 973 0294 0D       		.uleb128 0xd
 974 0295 96010000 		.4byte	.LASF34
 975 0299 01       		.byte	0x1
 976 029a A704     		.2byte	0x4a7
 977 029c 6B000000 		.4byte	0x6b
 978 02a0 EB000000 		.4byte	.LLST5
 979 02a4 0E       		.uleb128 0xe
 980 02a5 DB020000 		.4byte	.LASF32
 981 02a9 01       		.byte	0x1
 982 02aa AA04     		.2byte	0x4aa
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 46


 983 02ac 6B000000 		.4byte	0x6b
 984 02b0 25010000 		.4byte	.LLST6
 985 02b4 09       		.uleb128 0x9
 986 02b5 0E000000 		.4byte	.LVL21
 987 02b9 FE010000 		.4byte	0x1fe
 988 02bd 00       		.byte	0
 989 02be 0F       		.uleb128 0xf
 990 02bf 04       		.byte	0x4
 991 02c0 C4020000 		.4byte	0x2c4
 992 02c4 10       		.uleb128 0x10
 993 02c5 6B000000 		.4byte	0x6b
 994 02c9 0B       		.uleb128 0xb
 995 02ca CC020000 		.4byte	.LASF35
 996 02ce 01       		.byte	0x1
 997 02cf CE04     		.2byte	0x4ce
 998 02d1 00000000 		.4byte	.LFB12
 999 02d5 20000000 		.4byte	.LFE12-.LFB12
 1000 02d9 01       		.uleb128 0x1
 1001 02da 9C       		.byte	0x9c
 1002 02db 1B030000 		.4byte	0x31b
 1003 02df 0D       		.uleb128 0xd
 1004 02e0 14030000 		.4byte	.LASF26
 1005 02e4 01       		.byte	0x1
 1006 02e5 CE04     		.2byte	0x4ce
 1007 02e7 6B000000 		.4byte	0x6b
 1008 02eb 66010000 		.4byte	.LLST7
 1009 02ef 09       		.uleb128 0x9
 1010 02f0 0C000000 		.4byte	.LVL28
 1011 02f4 FE010000 		.4byte	0x1fe
 1012 02f8 11       		.uleb128 0x11
 1013 02f9 12000000 		.4byte	.LVL29
 1014 02fd FE010000 		.4byte	0x1fe
 1015 0301 0B030000 		.4byte	0x30b
 1016 0305 12       		.uleb128 0x12
 1017 0306 01       		.uleb128 0x1
 1018 0307 50       		.byte	0x50
 1019 0308 01       		.uleb128 0x1
 1020 0309 3D       		.byte	0x3d
 1021 030a 00       		.byte	0
 1022 030b 13       		.uleb128 0x13
 1023 030c 18000000 		.4byte	.LVL30
 1024 0310 FE010000 		.4byte	0x1fe
 1025 0314 12       		.uleb128 0x12
 1026 0315 01       		.uleb128 0x1
 1027 0316 50       		.byte	0x50
 1028 0317 01       		.uleb128 0x1
 1029 0318 3A       		.byte	0x3a
 1030 0319 00       		.byte	0
 1031 031a 00       		.byte	0
 1032 031b 14       		.uleb128 0x14
 1033 031c 9F020000 		.4byte	.LASF48
 1034 0320 01       		.byte	0x1
 1035 0321 F904     		.2byte	0x4f9
 1036 0323 6B000000 		.4byte	0x6b
 1037 0327 00000000 		.4byte	.LFB13
 1038 032b 24000000 		.4byte	.LFE13-.LFB13
 1039 032f 01       		.uleb128 0x1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 47


 1040 0330 9C       		.byte	0x9c
 1041 0331 46030000 		.4byte	0x346
 1042 0335 0E       		.uleb128 0xe
 1043 0336 DF030000 		.4byte	.LASF36
 1044 033a 01       		.byte	0x1
 1045 033b FC04     		.2byte	0x4fc
 1046 033d 6B000000 		.4byte	0x6b
 1047 0341 87010000 		.4byte	.LLST8
 1048 0345 00       		.byte	0
 1049 0346 0B       		.uleb128 0xb
 1050 0347 6D030000 		.4byte	.LASF37
 1051 034b 01       		.byte	0x1
 1052 034c 4A05     		.2byte	0x54a
 1053 034e 00000000 		.4byte	.LFB14
 1054 0352 24000000 		.4byte	.LFE14-.LFB14
 1055 0356 01       		.uleb128 0x1
 1056 0357 9C       		.byte	0x9c
 1057 0358 7F030000 		.4byte	0x37f
 1058 035c 0E       		.uleb128 0xe
 1059 035d A0010000 		.4byte	.LASF20
 1060 0361 01       		.byte	0x1
 1061 0362 4C05     		.2byte	0x54c
 1062 0364 6B000000 		.4byte	0x6b
 1063 0368 A5010000 		.4byte	.LLST9
 1064 036c 09       		.uleb128 0x9
 1065 036d 06000000 		.4byte	.LVL33
 1066 0371 08040000 		.4byte	0x408
 1067 0375 09       		.uleb128 0x9
 1068 0376 1C000000 		.4byte	.LVL34
 1069 037a 13040000 		.4byte	0x413
 1070 037e 00       		.byte	0
 1071 037f 0B       		.uleb128 0xb
 1072 0380 E4020000 		.4byte	.LASF38
 1073 0384 01       		.byte	0x1
 1074 0385 A005     		.2byte	0x5a0
 1075 0387 00000000 		.4byte	.LFB15
 1076 038b 58000000 		.4byte	.LFE15-.LFB15
 1077 038f 01       		.uleb128 0x1
 1078 0390 9C       		.byte	0x9c
 1079 0391 D2030000 		.4byte	0x3d2
 1080 0395 0D       		.uleb128 0xd
 1081 0396 46030000 		.4byte	.LASF39
 1082 039a 01       		.byte	0x1
 1083 039b A005     		.2byte	0x5a0
 1084 039d 6B000000 		.4byte	0x6b
 1085 03a1 B8010000 		.4byte	.LLST10
 1086 03a5 15       		.uleb128 0x15
 1087 03a6 06000000 		.4byte	.LBB2
 1088 03aa 52000000 		.4byte	.LBE2-.LBB2
 1089 03ae 0E       		.uleb128 0xe
 1090 03af 4C000000 		.4byte	.LASF40
 1091 03b3 01       		.byte	0x1
 1092 03b4 A805     		.2byte	0x5a8
 1093 03b6 6B000000 		.4byte	0x6b
 1094 03ba D9010000 		.4byte	.LLST11
 1095 03be 16       		.uleb128 0x16
 1096 03bf 43000000 		.4byte	.LASF41
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 48


 1097 03c3 01       		.byte	0x1
 1098 03c4 D005     		.2byte	0x5d0
 1099 03c6 6B000000 		.4byte	0x6b
 1100 03ca 05       		.uleb128 0x5
 1101 03cb 03       		.byte	0x3
 1102 03cc 01000000 		.4byte	txPeriod.4910
 1103 03d0 00       		.byte	0
 1104 03d1 00       		.byte	0
 1105 03d2 0B       		.uleb128 0xb
 1106 03d3 67000000 		.4byte	.LASF42
 1107 03d7 01       		.byte	0x1
 1108 03d8 2406     		.2byte	0x624
 1109 03da 00000000 		.4byte	.LFB16
 1110 03de 02000000 		.4byte	.LFE16-.LFB16
 1111 03e2 01       		.uleb128 0x1
 1112 03e3 9C       		.byte	0x9c
 1113 03e4 F7030000 		.4byte	0x3f7
 1114 03e8 0C       		.uleb128 0xc
 1115 03e9 B7000000 		.4byte	.LASF43
 1116 03ed 01       		.byte	0x1
 1117 03ee 2406     		.2byte	0x624
 1118 03f0 6B000000 		.4byte	0x6b
 1119 03f4 01       		.uleb128 0x1
 1120 03f5 50       		.byte	0x50
 1121 03f6 00       		.byte	0
 1122 03f7 17       		.uleb128 0x17
 1123 03f8 82030000 		.4byte	.LASF49
 1124 03fc 01       		.byte	0x1
 1125 03fd 1B       		.byte	0x1b
 1126 03fe 6B000000 		.4byte	0x6b
 1127 0402 05       		.uleb128 0x5
 1128 0403 03       		.byte	0x3
 1129 0404 00000000 		.4byte	UART_1_initVar
 1130 0408 18       		.uleb128 0x18
 1131 0409 6C020000 		.4byte	.LASF50
 1132 040d 03       		.byte	0x3
 1133 040e 7D       		.byte	0x7d
 1134 040f 6B000000 		.4byte	0x6b
 1135 0413 19       		.uleb128 0x19
 1136 0414 B6020000 		.4byte	.LASF51
 1137 0418 03       		.byte	0x3
 1138 0419 7E       		.byte	0x7e
 1139 041a 1A       		.uleb128 0x1a
 1140 041b 6B000000 		.4byte	0x6b
 1141 041f 00       		.byte	0
 1142 0420 00       		.byte	0
 1143              		.section	.debug_abbrev,"",%progbits
 1144              	.Ldebug_abbrev0:
 1145 0000 01       		.uleb128 0x1
 1146 0001 11       		.uleb128 0x11
 1147 0002 01       		.byte	0x1
 1148 0003 25       		.uleb128 0x25
 1149 0004 0E       		.uleb128 0xe
 1150 0005 13       		.uleb128 0x13
 1151 0006 0B       		.uleb128 0xb
 1152 0007 03       		.uleb128 0x3
 1153 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 49


 1154 0009 1B       		.uleb128 0x1b
 1155 000a 0E       		.uleb128 0xe
 1156 000b 55       		.uleb128 0x55
 1157 000c 17       		.uleb128 0x17
 1158 000d 11       		.uleb128 0x11
 1159 000e 01       		.uleb128 0x1
 1160 000f 10       		.uleb128 0x10
 1161 0010 17       		.uleb128 0x17
 1162 0011 00       		.byte	0
 1163 0012 00       		.byte	0
 1164 0013 02       		.uleb128 0x2
 1165 0014 24       		.uleb128 0x24
 1166 0015 00       		.byte	0
 1167 0016 0B       		.uleb128 0xb
 1168 0017 0B       		.uleb128 0xb
 1169 0018 3E       		.uleb128 0x3e
 1170 0019 0B       		.uleb128 0xb
 1171 001a 03       		.uleb128 0x3
 1172 001b 0E       		.uleb128 0xe
 1173 001c 00       		.byte	0
 1174 001d 00       		.byte	0
 1175 001e 03       		.uleb128 0x3
 1176 001f 24       		.uleb128 0x24
 1177 0020 00       		.byte	0
 1178 0021 0B       		.uleb128 0xb
 1179 0022 0B       		.uleb128 0xb
 1180 0023 3E       		.uleb128 0x3e
 1181 0024 0B       		.uleb128 0xb
 1182 0025 03       		.uleb128 0x3
 1183 0026 08       		.uleb128 0x8
 1184 0027 00       		.byte	0
 1185 0028 00       		.byte	0
 1186 0029 04       		.uleb128 0x4
 1187 002a 16       		.uleb128 0x16
 1188 002b 00       		.byte	0
 1189 002c 03       		.uleb128 0x3
 1190 002d 0E       		.uleb128 0xe
 1191 002e 3A       		.uleb128 0x3a
 1192 002f 0B       		.uleb128 0xb
 1193 0030 3B       		.uleb128 0x3b
 1194 0031 05       		.uleb128 0x5
 1195 0032 49       		.uleb128 0x49
 1196 0033 13       		.uleb128 0x13
 1197 0034 00       		.byte	0
 1198 0035 00       		.byte	0
 1199 0036 05       		.uleb128 0x5
 1200 0037 35       		.uleb128 0x35
 1201 0038 00       		.byte	0
 1202 0039 49       		.uleb128 0x49
 1203 003a 13       		.uleb128 0x13
 1204 003b 00       		.byte	0
 1205 003c 00       		.byte	0
 1206 003d 06       		.uleb128 0x6
 1207 003e 2E       		.uleb128 0x2e
 1208 003f 00       		.byte	0
 1209 0040 3F       		.uleb128 0x3f
 1210 0041 19       		.uleb128 0x19
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 50


 1211 0042 03       		.uleb128 0x3
 1212 0043 0E       		.uleb128 0xe
 1213 0044 3A       		.uleb128 0x3a
 1214 0045 0B       		.uleb128 0xb
 1215 0046 3B       		.uleb128 0x3b
 1216 0047 0B       		.uleb128 0xb
 1217 0048 27       		.uleb128 0x27
 1218 0049 19       		.uleb128 0x19
 1219 004a 11       		.uleb128 0x11
 1220 004b 01       		.uleb128 0x1
 1221 004c 12       		.uleb128 0x12
 1222 004d 06       		.uleb128 0x6
 1223 004e 40       		.uleb128 0x40
 1224 004f 18       		.uleb128 0x18
 1225 0050 9742     		.uleb128 0x2117
 1226 0052 19       		.uleb128 0x19
 1227 0053 00       		.byte	0
 1228 0054 00       		.byte	0
 1229 0055 07       		.uleb128 0x7
 1230 0056 2E       		.uleb128 0x2e
 1231 0057 01       		.byte	0x1
 1232 0058 3F       		.uleb128 0x3f
 1233 0059 19       		.uleb128 0x19
 1234 005a 03       		.uleb128 0x3
 1235 005b 0E       		.uleb128 0xe
 1236 005c 3A       		.uleb128 0x3a
 1237 005d 0B       		.uleb128 0xb
 1238 005e 3B       		.uleb128 0x3b
 1239 005f 0B       		.uleb128 0xb
 1240 0060 27       		.uleb128 0x27
 1241 0061 19       		.uleb128 0x19
 1242 0062 11       		.uleb128 0x11
 1243 0063 01       		.uleb128 0x1
 1244 0064 12       		.uleb128 0x12
 1245 0065 06       		.uleb128 0x6
 1246 0066 40       		.uleb128 0x40
 1247 0067 18       		.uleb128 0x18
 1248 0068 9742     		.uleb128 0x2117
 1249 006a 19       		.uleb128 0x19
 1250 006b 01       		.uleb128 0x1
 1251 006c 13       		.uleb128 0x13
 1252 006d 00       		.byte	0
 1253 006e 00       		.byte	0
 1254 006f 08       		.uleb128 0x8
 1255 0070 34       		.uleb128 0x34
 1256 0071 00       		.byte	0
 1257 0072 03       		.uleb128 0x3
 1258 0073 0E       		.uleb128 0xe
 1259 0074 3A       		.uleb128 0x3a
 1260 0075 0B       		.uleb128 0xb
 1261 0076 3B       		.uleb128 0x3b
 1262 0077 0B       		.uleb128 0xb
 1263 0078 49       		.uleb128 0x49
 1264 0079 13       		.uleb128 0x13
 1265 007a 02       		.uleb128 0x2
 1266 007b 17       		.uleb128 0x17
 1267 007c 00       		.byte	0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 51


 1268 007d 00       		.byte	0
 1269 007e 09       		.uleb128 0x9
 1270 007f 898201   		.uleb128 0x4109
 1271 0082 00       		.byte	0
 1272 0083 11       		.uleb128 0x11
 1273 0084 01       		.uleb128 0x1
 1274 0085 31       		.uleb128 0x31
 1275 0086 13       		.uleb128 0x13
 1276 0087 00       		.byte	0
 1277 0088 00       		.byte	0
 1278 0089 0A       		.uleb128 0xa
 1279 008a 2E       		.uleb128 0x2e
 1280 008b 00       		.byte	0
 1281 008c 3F       		.uleb128 0x3f
 1282 008d 19       		.uleb128 0x19
 1283 008e 03       		.uleb128 0x3
 1284 008f 0E       		.uleb128 0xe
 1285 0090 3A       		.uleb128 0x3a
 1286 0091 0B       		.uleb128 0xb
 1287 0092 3B       		.uleb128 0x3b
 1288 0093 05       		.uleb128 0x5
 1289 0094 27       		.uleb128 0x27
 1290 0095 19       		.uleb128 0x19
 1291 0096 49       		.uleb128 0x49
 1292 0097 13       		.uleb128 0x13
 1293 0098 11       		.uleb128 0x11
 1294 0099 01       		.uleb128 0x1
 1295 009a 12       		.uleb128 0x12
 1296 009b 06       		.uleb128 0x6
 1297 009c 40       		.uleb128 0x40
 1298 009d 18       		.uleb128 0x18
 1299 009e 9742     		.uleb128 0x2117
 1300 00a0 19       		.uleb128 0x19
 1301 00a1 00       		.byte	0
 1302 00a2 00       		.byte	0
 1303 00a3 0B       		.uleb128 0xb
 1304 00a4 2E       		.uleb128 0x2e
 1305 00a5 01       		.byte	0x1
 1306 00a6 3F       		.uleb128 0x3f
 1307 00a7 19       		.uleb128 0x19
 1308 00a8 03       		.uleb128 0x3
 1309 00a9 0E       		.uleb128 0xe
 1310 00aa 3A       		.uleb128 0x3a
 1311 00ab 0B       		.uleb128 0xb
 1312 00ac 3B       		.uleb128 0x3b
 1313 00ad 05       		.uleb128 0x5
 1314 00ae 27       		.uleb128 0x27
 1315 00af 19       		.uleb128 0x19
 1316 00b0 11       		.uleb128 0x11
 1317 00b1 01       		.uleb128 0x1
 1318 00b2 12       		.uleb128 0x12
 1319 00b3 06       		.uleb128 0x6
 1320 00b4 40       		.uleb128 0x40
 1321 00b5 18       		.uleb128 0x18
 1322 00b6 9742     		.uleb128 0x2117
 1323 00b8 19       		.uleb128 0x19
 1324 00b9 01       		.uleb128 0x1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 52


 1325 00ba 13       		.uleb128 0x13
 1326 00bb 00       		.byte	0
 1327 00bc 00       		.byte	0
 1328 00bd 0C       		.uleb128 0xc
 1329 00be 05       		.uleb128 0x5
 1330 00bf 00       		.byte	0
 1331 00c0 03       		.uleb128 0x3
 1332 00c1 0E       		.uleb128 0xe
 1333 00c2 3A       		.uleb128 0x3a
 1334 00c3 0B       		.uleb128 0xb
 1335 00c4 3B       		.uleb128 0x3b
 1336 00c5 05       		.uleb128 0x5
 1337 00c6 49       		.uleb128 0x49
 1338 00c7 13       		.uleb128 0x13
 1339 00c8 02       		.uleb128 0x2
 1340 00c9 18       		.uleb128 0x18
 1341 00ca 00       		.byte	0
 1342 00cb 00       		.byte	0
 1343 00cc 0D       		.uleb128 0xd
 1344 00cd 05       		.uleb128 0x5
 1345 00ce 00       		.byte	0
 1346 00cf 03       		.uleb128 0x3
 1347 00d0 0E       		.uleb128 0xe
 1348 00d1 3A       		.uleb128 0x3a
 1349 00d2 0B       		.uleb128 0xb
 1350 00d3 3B       		.uleb128 0x3b
 1351 00d4 05       		.uleb128 0x5
 1352 00d5 49       		.uleb128 0x49
 1353 00d6 13       		.uleb128 0x13
 1354 00d7 02       		.uleb128 0x2
 1355 00d8 17       		.uleb128 0x17
 1356 00d9 00       		.byte	0
 1357 00da 00       		.byte	0
 1358 00db 0E       		.uleb128 0xe
 1359 00dc 34       		.uleb128 0x34
 1360 00dd 00       		.byte	0
 1361 00de 03       		.uleb128 0x3
 1362 00df 0E       		.uleb128 0xe
 1363 00e0 3A       		.uleb128 0x3a
 1364 00e1 0B       		.uleb128 0xb
 1365 00e2 3B       		.uleb128 0x3b
 1366 00e3 05       		.uleb128 0x5
 1367 00e4 49       		.uleb128 0x49
 1368 00e5 13       		.uleb128 0x13
 1369 00e6 02       		.uleb128 0x2
 1370 00e7 17       		.uleb128 0x17
 1371 00e8 00       		.byte	0
 1372 00e9 00       		.byte	0
 1373 00ea 0F       		.uleb128 0xf
 1374 00eb 0F       		.uleb128 0xf
 1375 00ec 00       		.byte	0
 1376 00ed 0B       		.uleb128 0xb
 1377 00ee 0B       		.uleb128 0xb
 1378 00ef 49       		.uleb128 0x49
 1379 00f0 13       		.uleb128 0x13
 1380 00f1 00       		.byte	0
 1381 00f2 00       		.byte	0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 53


 1382 00f3 10       		.uleb128 0x10
 1383 00f4 26       		.uleb128 0x26
 1384 00f5 00       		.byte	0
 1385 00f6 49       		.uleb128 0x49
 1386 00f7 13       		.uleb128 0x13
 1387 00f8 00       		.byte	0
 1388 00f9 00       		.byte	0
 1389 00fa 11       		.uleb128 0x11
 1390 00fb 898201   		.uleb128 0x4109
 1391 00fe 01       		.byte	0x1
 1392 00ff 11       		.uleb128 0x11
 1393 0100 01       		.uleb128 0x1
 1394 0101 31       		.uleb128 0x31
 1395 0102 13       		.uleb128 0x13
 1396 0103 01       		.uleb128 0x1
 1397 0104 13       		.uleb128 0x13
 1398 0105 00       		.byte	0
 1399 0106 00       		.byte	0
 1400 0107 12       		.uleb128 0x12
 1401 0108 8A8201   		.uleb128 0x410a
 1402 010b 00       		.byte	0
 1403 010c 02       		.uleb128 0x2
 1404 010d 18       		.uleb128 0x18
 1405 010e 9142     		.uleb128 0x2111
 1406 0110 18       		.uleb128 0x18
 1407 0111 00       		.byte	0
 1408 0112 00       		.byte	0
 1409 0113 13       		.uleb128 0x13
 1410 0114 898201   		.uleb128 0x4109
 1411 0117 01       		.byte	0x1
 1412 0118 11       		.uleb128 0x11
 1413 0119 01       		.uleb128 0x1
 1414 011a 31       		.uleb128 0x31
 1415 011b 13       		.uleb128 0x13
 1416 011c 00       		.byte	0
 1417 011d 00       		.byte	0
 1418 011e 14       		.uleb128 0x14
 1419 011f 2E       		.uleb128 0x2e
 1420 0120 01       		.byte	0x1
 1421 0121 3F       		.uleb128 0x3f
 1422 0122 19       		.uleb128 0x19
 1423 0123 03       		.uleb128 0x3
 1424 0124 0E       		.uleb128 0xe
 1425 0125 3A       		.uleb128 0x3a
 1426 0126 0B       		.uleb128 0xb
 1427 0127 3B       		.uleb128 0x3b
 1428 0128 05       		.uleb128 0x5
 1429 0129 27       		.uleb128 0x27
 1430 012a 19       		.uleb128 0x19
 1431 012b 49       		.uleb128 0x49
 1432 012c 13       		.uleb128 0x13
 1433 012d 11       		.uleb128 0x11
 1434 012e 01       		.uleb128 0x1
 1435 012f 12       		.uleb128 0x12
 1436 0130 06       		.uleb128 0x6
 1437 0131 40       		.uleb128 0x40
 1438 0132 18       		.uleb128 0x18
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 54


 1439 0133 9742     		.uleb128 0x2117
 1440 0135 19       		.uleb128 0x19
 1441 0136 01       		.uleb128 0x1
 1442 0137 13       		.uleb128 0x13
 1443 0138 00       		.byte	0
 1444 0139 00       		.byte	0
 1445 013a 15       		.uleb128 0x15
 1446 013b 0B       		.uleb128 0xb
 1447 013c 01       		.byte	0x1
 1448 013d 11       		.uleb128 0x11
 1449 013e 01       		.uleb128 0x1
 1450 013f 12       		.uleb128 0x12
 1451 0140 06       		.uleb128 0x6
 1452 0141 00       		.byte	0
 1453 0142 00       		.byte	0
 1454 0143 16       		.uleb128 0x16
 1455 0144 34       		.uleb128 0x34
 1456 0145 00       		.byte	0
 1457 0146 03       		.uleb128 0x3
 1458 0147 0E       		.uleb128 0xe
 1459 0148 3A       		.uleb128 0x3a
 1460 0149 0B       		.uleb128 0xb
 1461 014a 3B       		.uleb128 0x3b
 1462 014b 05       		.uleb128 0x5
 1463 014c 49       		.uleb128 0x49
 1464 014d 13       		.uleb128 0x13
 1465 014e 02       		.uleb128 0x2
 1466 014f 18       		.uleb128 0x18
 1467 0150 00       		.byte	0
 1468 0151 00       		.byte	0
 1469 0152 17       		.uleb128 0x17
 1470 0153 34       		.uleb128 0x34
 1471 0154 00       		.byte	0
 1472 0155 03       		.uleb128 0x3
 1473 0156 0E       		.uleb128 0xe
 1474 0157 3A       		.uleb128 0x3a
 1475 0158 0B       		.uleb128 0xb
 1476 0159 3B       		.uleb128 0x3b
 1477 015a 0B       		.uleb128 0xb
 1478 015b 49       		.uleb128 0x49
 1479 015c 13       		.uleb128 0x13
 1480 015d 3F       		.uleb128 0x3f
 1481 015e 19       		.uleb128 0x19
 1482 015f 02       		.uleb128 0x2
 1483 0160 18       		.uleb128 0x18
 1484 0161 00       		.byte	0
 1485 0162 00       		.byte	0
 1486 0163 18       		.uleb128 0x18
 1487 0164 2E       		.uleb128 0x2e
 1488 0165 00       		.byte	0
 1489 0166 3F       		.uleb128 0x3f
 1490 0167 19       		.uleb128 0x19
 1491 0168 03       		.uleb128 0x3
 1492 0169 0E       		.uleb128 0xe
 1493 016a 3A       		.uleb128 0x3a
 1494 016b 0B       		.uleb128 0xb
 1495 016c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 55


 1496 016d 0B       		.uleb128 0xb
 1497 016e 27       		.uleb128 0x27
 1498 016f 19       		.uleb128 0x19
 1499 0170 49       		.uleb128 0x49
 1500 0171 13       		.uleb128 0x13
 1501 0172 3C       		.uleb128 0x3c
 1502 0173 19       		.uleb128 0x19
 1503 0174 00       		.byte	0
 1504 0175 00       		.byte	0
 1505 0176 19       		.uleb128 0x19
 1506 0177 2E       		.uleb128 0x2e
 1507 0178 01       		.byte	0x1
 1508 0179 3F       		.uleb128 0x3f
 1509 017a 19       		.uleb128 0x19
 1510 017b 03       		.uleb128 0x3
 1511 017c 0E       		.uleb128 0xe
 1512 017d 3A       		.uleb128 0x3a
 1513 017e 0B       		.uleb128 0xb
 1514 017f 3B       		.uleb128 0x3b
 1515 0180 0B       		.uleb128 0xb
 1516 0181 27       		.uleb128 0x27
 1517 0182 19       		.uleb128 0x19
 1518 0183 3C       		.uleb128 0x3c
 1519 0184 19       		.uleb128 0x19
 1520 0185 00       		.byte	0
 1521 0186 00       		.byte	0
 1522 0187 1A       		.uleb128 0x1a
 1523 0188 05       		.uleb128 0x5
 1524 0189 00       		.byte	0
 1525 018a 49       		.uleb128 0x49
 1526 018b 13       		.uleb128 0x13
 1527 018c 00       		.byte	0
 1528 018d 00       		.byte	0
 1529 018e 00       		.byte	0
 1530              		.section	.debug_loc,"",%progbits
 1531              	.Ldebug_loc0:
 1532              	.LLST0:
 1533 0000 06000000 		.4byte	.LVL0
 1534 0004 1D000000 		.4byte	.LVL1-1
 1535 0008 0100     		.2byte	0x1
 1536 000a 50       		.byte	0x50
 1537 000b 00000000 		.4byte	0
 1538 000f 00000000 		.4byte	0
 1539              	.LLST1:
 1540 0013 06000000 		.4byte	.LVL4
 1541 0017 1D000000 		.4byte	.LVL5-1
 1542 001b 0100     		.2byte	0x1
 1543 001d 50       		.byte	0x50
 1544 001e 00000000 		.4byte	0
 1545 0022 00000000 		.4byte	0
 1546              	.LLST2:
 1547 0026 00000000 		.4byte	.LVL10
 1548 002a 0A000000 		.4byte	.LVL12
 1549 002e 0100     		.2byte	0x1
 1550 0030 50       		.byte	0x50
 1551 0031 0A000000 		.4byte	.LVL12
 1552 0035 14000000 		.4byte	.LVL16
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 56


 1553 0039 0100     		.2byte	0x1
 1554 003b 55       		.byte	0x55
 1555 003c 14000000 		.4byte	.LVL16
 1556 0040 18000000 		.4byte	.LVL17
 1557 0044 0100     		.2byte	0x1
 1558 0046 50       		.byte	0x50
 1559 0047 18000000 		.4byte	.LVL17
 1560 004b 20000000 		.4byte	.LVL18
 1561 004f 0100     		.2byte	0x1
 1562 0051 55       		.byte	0x55
 1563 0052 20000000 		.4byte	.LVL18
 1564 0056 24000000 		.4byte	.LFE10
 1565 005a 0400     		.2byte	0x4
 1566 005c F3       		.byte	0xf3
 1567 005d 01       		.uleb128 0x1
 1568 005e 50       		.byte	0x50
 1569 005f 9F       		.byte	0x9f
 1570 0060 00000000 		.4byte	0
 1571 0064 00000000 		.4byte	0
 1572              	.LLST3:
 1573 0068 02000000 		.4byte	.LVL11
 1574 006c 0A000000 		.4byte	.LVL12
 1575 0070 0200     		.2byte	0x2
 1576 0072 30       		.byte	0x30
 1577 0073 9F       		.byte	0x9f
 1578 0074 0A000000 		.4byte	.LVL12
 1579 0078 10000000 		.4byte	.LVL14
 1580 007c 0100     		.2byte	0x1
 1581 007e 54       		.byte	0x54
 1582 007f 12000000 		.4byte	.LVL15
 1583 0083 14000000 		.4byte	.LVL16
 1584 0087 0100     		.2byte	0x1
 1585 0089 54       		.byte	0x54
 1586 008a 14000000 		.4byte	.LVL16
 1587 008e 18000000 		.4byte	.LVL17
 1588 0092 0200     		.2byte	0x2
 1589 0094 30       		.byte	0x30
 1590 0095 9F       		.byte	0x9f
 1591 0096 18000000 		.4byte	.LVL17
 1592 009a 20000000 		.4byte	.LVL18
 1593 009e 0100     		.2byte	0x1
 1594 00a0 54       		.byte	0x54
 1595 00a1 00000000 		.4byte	0
 1596 00a5 00000000 		.4byte	0
 1597              	.LLST4:
 1598 00a9 00000000 		.4byte	.LVL19
 1599 00ad 08000000 		.4byte	.LVL20
 1600 00b1 0100     		.2byte	0x1
 1601 00b3 50       		.byte	0x50
 1602 00b4 08000000 		.4byte	.LVL20
 1603 00b8 14000000 		.4byte	.LVL24
 1604 00bc 0100     		.2byte	0x1
 1605 00be 56       		.byte	0x56
 1606 00bf 14000000 		.4byte	.LVL24
 1607 00c3 1C000000 		.4byte	.LVL25
 1608 00c7 0100     		.2byte	0x1
 1609 00c9 50       		.byte	0x50
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 57


 1610 00ca 1C000000 		.4byte	.LVL25
 1611 00ce 22000000 		.4byte	.LVL26
 1612 00d2 0100     		.2byte	0x1
 1613 00d4 56       		.byte	0x56
 1614 00d5 22000000 		.4byte	.LVL26
 1615 00d9 28000000 		.4byte	.LFE11
 1616 00dd 0400     		.2byte	0x4
 1617 00df F3       		.byte	0xf3
 1618 00e0 01       		.uleb128 0x1
 1619 00e1 50       		.byte	0x50
 1620 00e2 9F       		.byte	0x9f
 1621 00e3 00000000 		.4byte	0
 1622 00e7 00000000 		.4byte	0
 1623              	.LLST5:
 1624 00eb 00000000 		.4byte	.LVL19
 1625 00ef 08000000 		.4byte	.LVL20
 1626 00f3 0100     		.2byte	0x1
 1627 00f5 51       		.byte	0x51
 1628 00f6 08000000 		.4byte	.LVL20
 1629 00fa 14000000 		.4byte	.LVL24
 1630 00fe 0400     		.2byte	0x4
 1631 0100 F3       		.byte	0xf3
 1632 0101 01       		.uleb128 0x1
 1633 0102 51       		.byte	0x51
 1634 0103 9F       		.byte	0x9f
 1635 0104 14000000 		.4byte	.LVL24
 1636 0108 1C000000 		.4byte	.LVL25
 1637 010c 0100     		.2byte	0x1
 1638 010e 51       		.byte	0x51
 1639 010f 1C000000 		.4byte	.LVL25
 1640 0113 28000000 		.4byte	.LFE11
 1641 0117 0400     		.2byte	0x4
 1642 0119 F3       		.byte	0xf3
 1643 011a 01       		.uleb128 0x1
 1644 011b 51       		.byte	0x51
 1645 011c 9F       		.byte	0x9f
 1646 011d 00000000 		.4byte	0
 1647 0121 00000000 		.4byte	0
 1648              	.LLST6:
 1649 0125 00000000 		.4byte	.LVL19
 1650 0129 08000000 		.4byte	.LVL20
 1651 012d 0200     		.2byte	0x2
 1652 012f 30       		.byte	0x30
 1653 0130 9F       		.byte	0x9f
 1654 0131 08000000 		.4byte	.LVL20
 1655 0135 10000000 		.4byte	.LVL22
 1656 0139 0100     		.2byte	0x1
 1657 013b 54       		.byte	0x54
 1658 013c 12000000 		.4byte	.LVL23
 1659 0140 14000000 		.4byte	.LVL24
 1660 0144 0100     		.2byte	0x1
 1661 0146 54       		.byte	0x54
 1662 0147 14000000 		.4byte	.LVL24
 1663 014b 1C000000 		.4byte	.LVL25
 1664 014f 0200     		.2byte	0x2
 1665 0151 30       		.byte	0x30
 1666 0152 9F       		.byte	0x9f
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 58


 1667 0153 1C000000 		.4byte	.LVL25
 1668 0157 22000000 		.4byte	.LVL26
 1669 015b 0100     		.2byte	0x1
 1670 015d 54       		.byte	0x54
 1671 015e 00000000 		.4byte	0
 1672 0162 00000000 		.4byte	0
 1673              	.LLST7:
 1674 0166 00000000 		.4byte	.LVL27
 1675 016a 0B000000 		.4byte	.LVL28-1
 1676 016e 0100     		.2byte	0x1
 1677 0170 50       		.byte	0x50
 1678 0171 0B000000 		.4byte	.LVL28-1
 1679 0175 20000000 		.4byte	.LFE12
 1680 0179 0400     		.2byte	0x4
 1681 017b F3       		.byte	0xf3
 1682 017c 01       		.uleb128 0x1
 1683 017d 50       		.byte	0x50
 1684 017e 9F       		.byte	0x9f
 1685 017f 00000000 		.4byte	0
 1686 0183 00000000 		.4byte	0
 1687              	.LLST8:
 1688 0187 06000000 		.4byte	.LVL31
 1689 018b 1C000000 		.4byte	.LVL32
 1690 018f 0100     		.2byte	0x1
 1691 0191 53       		.byte	0x53
 1692 0192 1C000000 		.4byte	.LVL32
 1693 0196 24000000 		.4byte	.LFE13
 1694 019a 0100     		.2byte	0x1
 1695 019c 50       		.byte	0x50
 1696 019d 00000000 		.4byte	0
 1697 01a1 00000000 		.4byte	0
 1698              	.LLST9:
 1699 01a5 06000000 		.4byte	.LVL33
 1700 01a9 1B000000 		.4byte	.LVL34-1
 1701 01ad 0100     		.2byte	0x1
 1702 01af 50       		.byte	0x50
 1703 01b0 00000000 		.4byte	0
 1704 01b4 00000000 		.4byte	0
 1705              	.LLST10:
 1706 01b8 00000000 		.4byte	.LVL35
 1707 01bc 3C000000 		.4byte	.LVL40
 1708 01c0 0100     		.2byte	0x1
 1709 01c2 50       		.byte	0x50
 1710 01c3 3C000000 		.4byte	.LVL40
 1711 01c7 58000000 		.4byte	.LFE15
 1712 01cb 0400     		.2byte	0x4
 1713 01cd F3       		.byte	0xf3
 1714 01ce 01       		.uleb128 0x1
 1715 01cf 50       		.byte	0x50
 1716 01d0 9F       		.byte	0x9f
 1717 01d1 00000000 		.4byte	0
 1718 01d5 00000000 		.4byte	0
 1719              	.LLST11:
 1720 01d9 22000000 		.4byte	.LVL36
 1721 01dd 28000000 		.4byte	.LVL37
 1722 01e1 0100     		.2byte	0x1
 1723 01e3 53       		.byte	0x53
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 59


 1724 01e4 34000000 		.4byte	.LVL38
 1725 01e8 3A000000 		.4byte	.LVL39
 1726 01ec 0100     		.2byte	0x1
 1727 01ee 53       		.byte	0x53
 1728 01ef 00000000 		.4byte	0
 1729 01f3 00000000 		.4byte	0
 1730              		.section	.debug_aranges,"",%progbits
 1731 0000 9C000000 		.4byte	0x9c
 1732 0004 0200     		.2byte	0x2
 1733 0006 00000000 		.4byte	.Ldebug_info0
 1734 000a 04       		.byte	0x4
 1735 000b 00       		.byte	0
 1736 000c 0000     		.2byte	0
 1737 000e 0000     		.2byte	0
 1738 0010 00000000 		.4byte	.LFB1
 1739 0014 14000000 		.4byte	.LFE1-.LFB1
 1740 0018 00000000 		.4byte	.LFB2
 1741 001c 24000000 		.4byte	.LFE2-.LFB2
 1742 0020 00000000 		.4byte	.LFB0
 1743 0024 1C000000 		.4byte	.LFE0-.LFB0
 1744 0028 00000000 		.4byte	.LFB3
 1745 002c 24000000 		.4byte	.LFE3-.LFB3
 1746 0030 00000000 		.4byte	.LFB4
 1747 0034 04000000 		.4byte	.LFE4-.LFB4
 1748 0038 00000000 		.4byte	.LFB5
 1749 003c 02000000 		.4byte	.LFE5-.LFB5
 1750 0040 00000000 		.4byte	.LFB6
 1751 0044 0C000000 		.4byte	.LFE6-.LFB6
 1752 0048 00000000 		.4byte	.LFB7
 1753 004c 14000000 		.4byte	.LFE7-.LFB7
 1754 0050 00000000 		.4byte	.LFB8
 1755 0054 0C000000 		.4byte	.LFE8-.LFB8
 1756 0058 00000000 		.4byte	.LFB9
 1757 005c 18000000 		.4byte	.LFE9-.LFB9
 1758 0060 00000000 		.4byte	.LFB10
 1759 0064 24000000 		.4byte	.LFE10-.LFB10
 1760 0068 00000000 		.4byte	.LFB11
 1761 006c 28000000 		.4byte	.LFE11-.LFB11
 1762 0070 00000000 		.4byte	.LFB12
 1763 0074 20000000 		.4byte	.LFE12-.LFB12
 1764 0078 00000000 		.4byte	.LFB13
 1765 007c 24000000 		.4byte	.LFE13-.LFB13
 1766 0080 00000000 		.4byte	.LFB14
 1767 0084 24000000 		.4byte	.LFE14-.LFB14
 1768 0088 00000000 		.4byte	.LFB15
 1769 008c 58000000 		.4byte	.LFE15-.LFB15
 1770 0090 00000000 		.4byte	.LFB16
 1771 0094 02000000 		.4byte	.LFE16-.LFB16
 1772 0098 00000000 		.4byte	0
 1773 009c 00000000 		.4byte	0
 1774              		.section	.debug_ranges,"",%progbits
 1775              	.Ldebug_ranges0:
 1776 0000 00000000 		.4byte	.LFB1
 1777 0004 14000000 		.4byte	.LFE1
 1778 0008 00000000 		.4byte	.LFB2
 1779 000c 24000000 		.4byte	.LFE2
 1780 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 60


 1781 0014 1C000000 		.4byte	.LFE0
 1782 0018 00000000 		.4byte	.LFB3
 1783 001c 24000000 		.4byte	.LFE3
 1784 0020 00000000 		.4byte	.LFB4
 1785 0024 04000000 		.4byte	.LFE4
 1786 0028 00000000 		.4byte	.LFB5
 1787 002c 02000000 		.4byte	.LFE5
 1788 0030 00000000 		.4byte	.LFB6
 1789 0034 0C000000 		.4byte	.LFE6
 1790 0038 00000000 		.4byte	.LFB7
 1791 003c 14000000 		.4byte	.LFE7
 1792 0040 00000000 		.4byte	.LFB8
 1793 0044 0C000000 		.4byte	.LFE8
 1794 0048 00000000 		.4byte	.LFB9
 1795 004c 18000000 		.4byte	.LFE9
 1796 0050 00000000 		.4byte	.LFB10
 1797 0054 24000000 		.4byte	.LFE10
 1798 0058 00000000 		.4byte	.LFB11
 1799 005c 28000000 		.4byte	.LFE11
 1800 0060 00000000 		.4byte	.LFB12
 1801 0064 20000000 		.4byte	.LFE12
 1802 0068 00000000 		.4byte	.LFB13
 1803 006c 24000000 		.4byte	.LFE13
 1804 0070 00000000 		.4byte	.LFB14
 1805 0074 24000000 		.4byte	.LFE14
 1806 0078 00000000 		.4byte	.LFB15
 1807 007c 58000000 		.4byte	.LFE15
 1808 0080 00000000 		.4byte	.LFB16
 1809 0084 02000000 		.4byte	.LFE16
 1810 0088 00000000 		.4byte	0
 1811 008c 00000000 		.4byte	0
 1812              		.section	.debug_line,"",%progbits
 1813              	.Ldebug_line0:
 1814 0000 DC010000 		.section	.debug_str,"MS",%progbits,1
 1814      02005000 
 1814      00000201 
 1814      FB0E0D00 
 1814      01010101 
 1815              	.LASF6:
 1816 0000 6C6F6E67 		.ascii	"long long int\000"
 1816      206C6F6E 
 1816      6720696E 
 1816      7400
 1817              	.LASF47:
 1818 000e 55415254 		.ascii	"UART_1_Init\000"
 1818      5F315F49 
 1818      6E697400 
 1819              	.LASF18:
 1820 001a 55415254 		.ascii	"UART_1_Start\000"
 1820      5F315F53 
 1820      74617274 
 1820      00
 1821              	.LASF21:
 1822 0027 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 1822      5F315F57 
 1822      72697465 
 1822      436F6E74 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 61


 1822      726F6C52 
 1823              	.LASF41:
 1824 0043 74785065 		.ascii	"txPeriod\000"
 1824      72696F64 
 1824      00
 1825              	.LASF40:
 1826 004c 746D7053 		.ascii	"tmpStat\000"
 1826      74617400 
 1827              	.LASF3:
 1828 0054 73686F72 		.ascii	"short unsigned int\000"
 1828      7420756E 
 1828      7369676E 
 1828      65642069 
 1828      6E7400
 1829              	.LASF42:
 1830 0067 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 1830      5F315F53 
 1830      65745478 
 1830      41646472 
 1830      6573734D 
 1831              	.LASF28:
 1832 007f 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 1832      5F315F52 
 1832      65616454 
 1832      78537461 
 1832      74757300 
 1833              	.LASF31:
 1834 0093 73747269 		.ascii	"string\000"
 1834      6E6700
 1835              	.LASF11:
 1836 009a 666C6F61 		.ascii	"float\000"
 1836      7400
 1837              	.LASF7:
 1838 00a0 6C6F6E67 		.ascii	"long long unsigned int\000"
 1838      206C6F6E 
 1838      6720756E 
 1838      7369676E 
 1838      65642069 
 1839              	.LASF43:
 1840 00b7 61646472 		.ascii	"addressMode\000"
 1840      6573734D 
 1840      6F646500 
 1841              	.LASF15:
 1842 00c3 72656738 		.ascii	"reg8\000"
 1842      00
 1843              	.LASF27:
 1844 00c8 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 1844      5F315F52 
 1844      65616443 
 1844      6F6E7472 
 1844      6F6C5265 
 1845              	.LASF46:
 1846 00e3 433A5C55 		.ascii	"C:\\Users\\Michael\\Dropbox (MIT)\\College\\Senior "
 1846      73657273 
 1846      5C4D6963 
 1846      6861656C 
 1846      5C44726F 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 62


 1847 0111 59656172 		.ascii	"Year\\6.115 - Microcomputer Project Laboratory\\6.1"
 1847      5C362E31 
 1847      3135202D 
 1847      204D6963 
 1847      726F636F 
 1848 0142 3135202D 		.ascii	"15 - Final Project\\Software\\PSoC Creator\\Ball.cy"
 1848      2046696E 
 1848      616C2050 
 1848      726F6A65 
 1848      63745C53 
 1849 0172 64736E00 		.ascii	"dsn\000"
 1850              	.LASF5:
 1851 0176 6C6F6E67 		.ascii	"long unsigned int\000"
 1851      20756E73 
 1851      69676E65 
 1851      6420696E 
 1851      7400
 1852              	.LASF9:
 1853 0188 75696E74 		.ascii	"uint8\000"
 1853      3800
 1854              	.LASF23:
 1855 018e 636F6E74 		.ascii	"control\000"
 1855      726F6C00 
 1856              	.LASF34:
 1857 0196 62797465 		.ascii	"byteCount\000"
 1857      436F756E 
 1857      7400
 1858              	.LASF20:
 1859 01a0 656E6162 		.ascii	"enableInterrupts\000"
 1859      6C65496E 
 1859      74657272 
 1859      75707473 
 1859      00
 1860              	.LASF1:
 1861 01b1 756E7369 		.ascii	"unsigned char\000"
 1861      676E6564 
 1861      20636861 
 1861      7200
 1862              	.LASF12:
 1863 01bf 646F7562 		.ascii	"double\000"
 1863      6C6500
 1864              	.LASF24:
 1865 01c6 696E7453 		.ascii	"intSrc\000"
 1865      726300
 1866              	.LASF2:
 1867 01cd 73686F72 		.ascii	"short int\000"
 1867      7420696E 
 1867      7400
 1868              	.LASF10:
 1869 01d7 75696E74 		.ascii	"uint16\000"
 1869      313600
 1870              	.LASF44:
 1871 01de 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1871      4320342E 
 1871      392E3320 
 1871      32303135 
 1871      30333033 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 63


 1872 0211 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1872      20726576 
 1872      6973696F 
 1872      6E203232 
 1872      31323230 
 1873 0244 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1873      66756E63 
 1873      74696F6E 
 1873      2D736563 
 1873      74696F6E 
 1874              	.LASF50:
 1875 026c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1875      74657243 
 1875      72697469 
 1875      63616C53 
 1875      65637469 
 1876              	.LASF29:
 1877 0283 55415254 		.ascii	"UART_1_PutChar\000"
 1877      5F315F50 
 1877      75744368 
 1877      617200
 1878              	.LASF8:
 1879 0292 756E7369 		.ascii	"unsigned int\000"
 1879      676E6564 
 1879      20696E74 
 1879      00
 1880              	.LASF48:
 1881 029f 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 1881      5F315F47 
 1881      65745478 
 1881      42756666 
 1881      65725369 
 1882              	.LASF51:
 1883 02b6 43794578 		.ascii	"CyExitCriticalSection\000"
 1883      69744372 
 1883      69746963 
 1883      616C5365 
 1883      6374696F 
 1884              	.LASF35:
 1885 02cc 55415254 		.ascii	"UART_1_PutCRLF\000"
 1885      5F315F50 
 1885      75744352 
 1885      4C4600
 1886              	.LASF32:
 1887 02db 62756649 		.ascii	"bufIndex\000"
 1887      6E646578 
 1887      00
 1888              	.LASF38:
 1889 02e4 55415254 		.ascii	"UART_1_SendBreak\000"
 1889      5F315F53 
 1889      656E6442 
 1889      7265616B 
 1889      00
 1890              	.LASF33:
 1891 02f5 55415254 		.ascii	"UART_1_PutArray\000"
 1891      5F315F50 
 1891      75744172 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 64


 1891      72617900 
 1892              	.LASF16:
 1893 0305 73697A65 		.ascii	"sizetype\000"
 1893      74797065 
 1893      00
 1894              	.LASF13:
 1895 030e 63686172 		.ascii	"char8\000"
 1895      3800
 1896              	.LASF26:
 1897 0314 74784461 		.ascii	"txDataByte\000"
 1897      74614279 
 1897      746500
 1898              	.LASF14:
 1899 031f 63686172 		.ascii	"char\000"
 1899      00
 1900              	.LASF45:
 1901 0324 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_1.c\000"
 1901      6E657261 
 1901      7465645F 
 1901      536F7572 
 1901      63655C50 
 1902              	.LASF39:
 1903 0346 7265744D 		.ascii	"retMode\000"
 1903      6F646500 
 1904              	.LASF19:
 1905 034e 55415254 		.ascii	"UART_1_Stop\000"
 1905      5F315F53 
 1905      746F7000 
 1906              	.LASF25:
 1907 035a 55415254 		.ascii	"UART_1_WriteTxData\000"
 1907      5F315F57 
 1907      72697465 
 1907      54784461 
 1907      746100
 1908              	.LASF37:
 1909 036d 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 1909      5F315F43 
 1909      6C656172 
 1909      54784275 
 1909      66666572 
 1910              	.LASF49:
 1911 0382 55415254 		.ascii	"UART_1_initVar\000"
 1911      5F315F69 
 1911      6E697456 
 1911      617200
 1912              	.LASF4:
 1913 0391 6C6F6E67 		.ascii	"long int\000"
 1913      20696E74 
 1913      00
 1914              	.LASF22:
 1915 039a 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 1915      5F315F53 
 1915      65745478 
 1915      496E7465 
 1915      72727570 
 1916              	.LASF17:
 1917 03b4 55415254 		.ascii	"UART_1_Enable\000"
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccvR4mWj.s 			page 65


 1917      5F315F45 
 1917      6E61626C 
 1917      6500
 1918              	.LASF0:
 1919 03c2 7369676E 		.ascii	"signed char\000"
 1919      65642063 
 1919      68617200 
 1920              	.LASF30:
 1921 03ce 55415254 		.ascii	"UART_1_PutString\000"
 1921      5F315F50 
 1921      75745374 
 1921      72696E67 
 1921      00
 1922              	.LASF36:
 1923 03df 73697A65 		.ascii	"size\000"
 1923      00
 1924              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
